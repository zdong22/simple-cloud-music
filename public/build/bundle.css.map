{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "ListGrid.svelte",
    "Loading.svelte",
    "Lyric.svelte",
    "MiniPlay.svelte",
    "MiniPlayListCover.svelte",
    "Play.svelte",
    "PlayListCover.svelte",
    "Singer.svelte",
    "Song.svelte",
    "TopTitle.svelte",
    "Button.svelte",
    "Cell.svelte",
    "Divider.svelte",
    "Input.svelte",
    "NavBar.svelte",
    "Pagination.svelte",
    "Picker.svelte",
    "Progress.svelte",
    "Radio.svelte",
    "Switch.svelte",
    "TabBar.svelte",
    "Tip.svelte",
    "Title.svelte",
    "About.svelte",
    "AllCollectSongers.svelte",
    "BrSelect.svelte",
    "Discover.svelte",
    "Login.svelte",
    "Love.svelte",
    "LoveListDetail.svelte",
    "Mine.svelte",
    "MoreList.svelte",
    "MoreSong.svelte",
    "MoreSonger.svelte",
    "MusicComment.svelte",
    "MyAllPlayList.svelte",
    "PlayListDetail.svelte",
    "Search.svelte",
    "Setting.svelte",
    "SongerDesc.svelte",
    "SongerDetail.svelte",
    "TodayListDetail.svelte",
    "Version.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import { ArrowRightSLine } from 'svelte-remixicon';\r\n\r\n  import { Tip } from './base';\r\n  import PlayListCover from './PlayListCover.svelte';\r\n\r\n  import { ripple } from '../utils/common';\r\n\r\n  export let title = '';\r\n  export let playList = [];\r\n  export let isShowMore = true;\r\n  export let isShowTip = false;\r\n  export let tipTextList = '';\r\n  export let iconText = '更多';\r\n\r\n  const dispatch = createEventDispatcher();\r\n  function setTitleClick() {\r\n    dispatch('titleClick');\r\n  }\r\n\r\n  let titleDom;\r\n\r\n  onMount(() => {\r\n    if (titleDom) ripple(titleDom);\r\n  });\r\n</script>\r\n\r\n<div class=\"grid\">\r\n  <div class=\"title\" on:click={setTitleClick} bind:this={titleDom}>\r\n    <div class=\"title-left\">{title}</div>\r\n    {#if isShowMore}\r\n      <div class=\"title-right\">\r\n        {iconText}\r\n        <span class=\"title-icon\">\r\n          <ArrowRightSLine size=\"24\" style=\"vertical-align: middle;\" />\r\n        </span>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  {#if isShowTip}\r\n    <div class=\"tip\">\r\n      <Tip {tipTextList} />\r\n    </div>\r\n  {/if}\r\n  <slot />\r\n  <div class=\"list\">\r\n    {#each playList as play}\r\n      <div class=\"item\">\r\n        <PlayListCover\r\n          name={play.name}\r\n          coverImgUrl={play.coverImgUrl}\r\n          id={play.id}\r\n          playCount={play.playCount}\r\n          copywriter={play.copywriter ? play.copywriter : ''}\r\n          trackCount={play.trackCount}\r\n        />\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .tip {\r\n    padding: 10px 20px;\r\n  }\r\n  .title-icon {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n  .title-right {\r\n    line-height: 24px;\r\n    border-radius: 10px;\r\n    font-size: 14px;\r\n    color: #666;\r\n    height: 24px;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n  }\r\n  .title {\r\n    text-align: left;\r\n    margin-left: 20px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .list {\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow-x: scroll;\r\n    overflow-y: hidden;\r\n    display: flex;\r\n  }\r\n  .item {\r\n    margin-right: 20px;\r\n    flex-shrink: 0;\r\n    display: inline-block;\r\n  }\r\n  .list > :global(:first-child) {\r\n    margin-left: 20px;\r\n  }\r\n  .list > :global(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n  ::-webkit-scrollbar {\r\n    display: none; /* Chrome Safari */\r\n  }\r\n</style>\r\n",
    "<div class=\"bg\">\r\n  <div class=\"sk-chase\">\r\n    <div class=\"sk-chase-dot\" />\r\n    <div class=\"sk-chase-dot\" />\r\n    <div class=\"sk-chase-dot\" />\r\n    <div class=\"sk-chase-dot\" />\r\n    <div class=\"sk-chase-dot\" />\r\n    <div class=\"sk-chase-dot\" />\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"bg\">\r\n  <div class=\"lds-ellipsis\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .bg {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    z-index: 499;\r\n    background-color: rgba(138, 138, 138, 0.4);\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  .lds-ellipsis {\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 45%;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  .lds-ellipsis div {\r\n    position: absolute;\r\n    top: 33px;\r\n    width: 13px;\r\n    height: 13px;\r\n    border-radius: 50%;\r\n    background: #fff;\r\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n  }\r\n  .lds-ellipsis div:nth-child(1) {\r\n    left: 8px;\r\n    animation: lds-ellipsis1 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(2) {\r\n    left: 8px;\r\n    animation: lds-ellipsis2 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(3) {\r\n    left: 32px;\r\n    animation: lds-ellipsis2 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(4) {\r\n    left: 56px;\r\n    animation: lds-ellipsis3 0.6s infinite;\r\n  }\r\n  @keyframes lds-ellipsis1 {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis3 {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis2 {\r\n    0% {\r\n      transform: translate(0, 0);\r\n    }\r\n    100% {\r\n      transform: translate(24px, 0);\r\n    }\r\n  }\r\n</style> -->\r\n<style>\r\n  .bg {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    z-index: 499;\r\n    background-color: rgba(138, 138, 138, 0.4);\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  .sk-chase {\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 45%;\r\n    width: 60px;\r\n    height: 60px;\r\n    animation: sk-chase 2.5s infinite linear both;\r\n  }\r\n  .sk-chase-dot {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    animation: sk-chase-dot 2s infinite ease-in-out both;\r\n  }\r\n  .sk-chase-dot:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 25%;\r\n    height: 25%;\r\n    background-color: #fff;\r\n    border-radius: 100%;\r\n    animation: sk-chase-dot-before 2s infinite ease-in-out both;\r\n  }\r\n  .sk-chase-dot:nth-child(1) {\r\n    animation-delay: -1.1s;\r\n  }\r\n  .sk-chase-dot:nth-child(2) {\r\n    animation-delay: -1s;\r\n  }\r\n  .sk-chase-dot:nth-child(3) {\r\n    animation-delay: -0.9s;\r\n  }\r\n  .sk-chase-dot:nth-child(4) {\r\n    animation-delay: -0.8s;\r\n  }\r\n  .sk-chase-dot:nth-child(5) {\r\n    animation-delay: -0.7s;\r\n  }\r\n  .sk-chase-dot:nth-child(6) {\r\n    animation-delay: -0.6s;\r\n  }\r\n  .sk-chase-dot:nth-child(1):before {\r\n    animation-delay: -1.1s;\r\n  }\r\n  .sk-chase-dot:nth-child(2):before {\r\n    animation-delay: -1s;\r\n  }\r\n  .sk-chase-dot:nth-child(3):before {\r\n    animation-delay: -0.9s;\r\n  }\r\n  .sk-chase-dot:nth-child(4):before {\r\n    animation-delay: -0.8s;\r\n  }\r\n  .sk-chase-dot:nth-child(5):before {\r\n    animation-delay: -0.7s;\r\n  }\r\n  .sk-chase-dot:nth-child(6):before {\r\n    animation-delay: -0.6s;\r\n  }\r\n  @keyframes sk-chase {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes sk-chase-dot {\r\n    80%,\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes sk-chase-dot-before {\r\n    50% {\r\n      transform: scale(0.4);\r\n    }\r\n    100%,\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n\r\n  import { currentTimeStore, currentLyricStore } from '../store/play';\r\n  import { isShowTranslateStore } from '../store/common';\r\n\r\n  import { scrollSmoothTo } from '../utils/common';\r\n\r\n  export let maxHeight = '';\r\n\r\n  $: lyric = $currentLyricStore.lyric;\r\n  $: tlyric = $isShowTranslateStore ? $currentLyricStore.tlyric : '';\r\n  $: lyricArr = [];\r\n  $: tlyricArr = [];\r\n  $: lyricArrStartAndEnd = [];\r\n  $: currentIndex = 0;\r\n  $: itemHeightList = [];\r\n  let boxDom;\r\n  let scrollTimer = null;\r\n  $: isBlue = true;\r\n\r\n  onMount(() => {\r\n    //监听歌词滚动事件\r\n    lyricArr = formatLyric(lyric);\r\n    //去除开始的作者\r\n    if (tlyric.slice(1, 3) === 'by') {\r\n      tlyric = tlyric.slice(tlyric.indexOf('\\n') + 1);\r\n    }\r\n    //处理有些翻译竟然没时间标注！！\r\n    if (tlyric.slice(0, 1) !== '[') {\r\n      tlyric = '';\r\n    }\r\n    //处理有些歌词翻译竟然只有时间没内容，如《追光者》《匆匆那年》，翻译你妹呢！\r\n    let textArr = tlyric.split('\\n');\r\n    let isAllNull = false;\r\n    for (let t = 0; t < textArr.length; t++) {\r\n      if (textArr[t].substring(textArr[t].length - 1) != ']') {\r\n        isAllNull = false;\r\n      } else {\r\n        isAllNull = true;\r\n      }\r\n    }\r\n    if (isAllNull) tlyric = '';\r\n    if (tlyric.trim() !== '') tlyricArr = formatLyric(tlyric);\r\n    if (tlyric.trim() !== '') {\r\n      if (lyricArr[0].time !== 0) {\r\n        lyricArr.unshift({ time: 0, text: '• • •' });\r\n      }\r\n      if (tlyricArr[0].time !== 0) {\r\n        tlyricArr.unshift({ time: 0, text: '• • •' });\r\n      }\r\n      for (let e = 0; e < lyricArr.length; e++) {\r\n        for (let r = 0; r < tlyricArr.length; r++) {\r\n          if (lyricArr[e].time === tlyricArr[r].time) lyricArr[e].text_t = tlyricArr[r].text;\r\n          if (lyricArr[e].text_t === undefined) lyricArr[e].text_t = '• • •';\r\n        }\r\n      }\r\n      lyricArrStartAndEnd = lyricArr.length > 0 ? timeAdd(lyricArr) : [];\r\n      for (let r = 0; r < lyricArr.length; r++) {\r\n        itemHeightList.push(\r\n          40 + textSize('28px', lyricArr[r].text).height + textSize('16px', lyricArr[r].text_t).height\r\n        );\r\n      }\r\n    } else {\r\n      lyricArrStartAndEnd = lyricArr.length > 0 ? timeAdd(lyricArr) : [];\r\n      for (let r = 0; r < lyricArrStartAndEnd.length; r++) {\r\n        itemHeightList.push(textSize('28px', lyricArrStartAndEnd[r].text).height + 40);\r\n      }\r\n    }\r\n    autoScrollFun();\r\n  });\r\n  //自动滚动\r\n  function autoScrollFun() {\r\n    scrollTimer = setInterval(() => {\r\n      if (boxDom) {\r\n        for (let y = 0; y < lyricArrStartAndEnd.length - 1; y++) {\r\n          if (Math.ceil($currentTimeStore) >= lyricArrStartAndEnd[lyricArrStartAndEnd.length - 1].start) {\r\n            currentIndex = lyricArrStartAndEnd.length - 1;\r\n            boxDom.scrollTop = boxDom.scrollHeight - boxDom.clientHeight;\r\n          }\r\n          if (\r\n            Math.ceil($currentTimeStore) >= lyricArrStartAndEnd[y].start &&\r\n            Math.ceil($currentTimeStore) < lyricArrStartAndEnd[y].end\r\n          ) {\r\n            currentIndex = y;\r\n            boxDom.scrollIntoView({\r\n              block: 'start',\r\n              behavior: 'smooth',\r\n            });\r\n            if (currentIndex === 0) {\r\n              if ('scrollBehavior' in boxDom.style) {\r\n                boxDom.scrollTop = 0;\r\n              } else {\r\n                scrollSmoothTo(boxDom, 0);\r\n              }\r\n            } else {\r\n              if ('scrollBehavior' in boxDom.style) {\r\n                boxDom.scrollTop = sum(itemHeightList.slice(0, currentIndex - 1));\r\n              } else {\r\n                scrollSmoothTo(boxDom, sum(itemHeightList.slice(0, currentIndex - 1)));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n  function sum(arr) {\r\n    if (Array.isArray(arr)) {\r\n      var arrSum = 0;\r\n      for (var i = 0; i < arr.length; i++) {\r\n        arrSum += arr[i];\r\n      }\r\n      return arrSum;\r\n    }\r\n  }\r\n  //传入初始歌词文本text\r\n  function formatLyric(text) {\r\n    //去除开始的作者\r\n    if (text.slice(1, 3) === 'by') {\r\n      text = text.slice(text.indexOf('\\n') + 1);\r\n    }\r\n    let lyricNew = [];\r\n    let arr = text.split('\\n'); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\\n”进行切割\r\n    let row = arr.length; //获取歌词行数\r\n    for (let i = 0; i < row; i++) {\r\n      let temp_row = arr[i]; //现在每一行格式大概就是这样\"[00:04.302][02:10.00]hello world\";\r\n      let temp_arr = temp_row.split(']'); //我们可以通过“]”对时间和文本进行分离\r\n      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！\r\n      //再对剩下的歌词时间进行处理\r\n      temp_arr.forEach(element => {\r\n        let obj = {};\r\n        let time_arr = element.substr(1, element.length - 1).split(':'); //先把多余的“[”去掉，再分离出分、秒\r\n        let s = Math.ceil(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果\r\n        obj.time = s > 0 ? s - 1 : s; //歌词转换成整秒之后会有延迟，提前一秒\r\n        obj.text = text.trim(); //去除前后空格，不然计算高度有问题\r\n        lyricNew.push(obj); //每一行歌词对象存到组件的lyric歌词属性里\r\n      });\r\n    }\r\n    if (lyricNew.length === 1) {\r\n      lyricNew = [\r\n        {\r\n          time: 0,\r\n          text: lyricNew[0].text,\r\n        },\r\n        {\r\n          time: 0,\r\n          text: lyricNew[0].text,\r\n        },\r\n      ];\r\n    }\r\n    if (lyricNew === []) return [];\r\n    for (let u = 0; u < lyricNew.length; u++) {\r\n      if (lyricNew[u].text === '') lyricNew[u].text = '• • •';\r\n    }\r\n    if (lyricNew.length > 0) {\r\n      if (lyricNew[0].time > 5) {\r\n        lyricNew.splice(0, 0, { time: 0, text: '• • •' });\r\n      }\r\n    }\r\n    for (let i = lyricNew.length - 1; i > 0; i--) {\r\n      if (lyricNew[i].time - lyricNew[i - 1].time < 2 && lyricNew[i - 1].text === '• • •') {\r\n        lyricNew.splice(i - 1, 1);\r\n      }\r\n    }\r\n    for (let d = lyricNew.length - 1; d > 0; d--) {\r\n      if (lyricNew[d - 1].time === lyricNew[d].time) {\r\n        lyricNew[d - 1].text = lyricNew[d - 1].text + ' ' + lyricNew[d].text;\r\n        lyricNew.splice(d, 1);\r\n      }\r\n    }\r\n    // 开头，两条时间都是一样的情况，合并为一条\r\n    if (lyricNew.length > 1 && lyricNew[0].time === lyricNew[1].time) {\r\n      lyricNew[0].text = lyricNew[0].text + ' ' + lyricNew[1].text;\r\n      lyricNew.splice(1, 1);\r\n    }\r\n    //去除某些歌词结尾是• • •的情况\r\n    for (let q = 0; q < lyricNew.length; q++) {\r\n      if (lyricNew[q].text.substring(lyricNew[q].text.length - 5) === '• • •' && lyricNew[q].text != '• • •') {\r\n        lyricNew[q].text = lyricNew[q].text.substr(0, lyricNew[q].text.length - 5);\r\n      }\r\n    }\r\n    lyricNew.sort(sortRule); //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下\r\n    return lyricNew.length === 0 ? [{ time: 0, text: '暂无歌词或歌词无效', start: 0, end: 20 }] : lyricNew;\r\n  }\r\n  function timeAdd(arr) {\r\n    for (let t = 0; t < arr.length - 1; t++) {\r\n      arr[t].start = arr[t].time;\r\n      arr[t].end = arr[t + 1].time;\r\n    }\r\n    arr[arr.length - 1].start = arr[arr.length - 1].time;\r\n    return arr;\r\n  }\r\n  function sortRule(a, b) {\r\n    //设置一下排序规则\r\n    return a.time - b.time;\r\n  }\r\n  function textSize(fontSize, text) {\r\n    let div = document.createElement('div');\r\n    let result = {};\r\n    result.width = div.offsetWidth;\r\n    result.height = div.offsetHeight;\r\n    div.style.visibility = 'hidden';\r\n    div.style.fontSize = fontSize;\r\n    // div.style.fontFamily =\r\n    //   '\"PingFang SC\", \"Lantinghei SC\", \"Microsoft YaHei\", \"HanHei SC\",\"Helvetica Neue\", \"Open Sans\", Arial, \"Hiragino Sans GB\", \"微软雅黑\",STHeiti, \"WenQuanYi Micro Hei\", SimSun, sans-serif';\r\n    div.style.padding = '20px';\r\n    div.style.wordWrap = 'break-word';\r\n    div.style.fontWeight = 'bold';\r\n    div.style.textAlign = 'justify';\r\n    document.body.appendChild(div);\r\n    if (typeof div.textContent != 'undefined') {\r\n      div.textContent = text;\r\n    } else {\r\n      div.innerText = text;\r\n    }\r\n    result.width = parseFloat(window.getComputedStyle(div).width) - result.width;\r\n    result.height = parseFloat(window.getComputedStyle(div).height) - result.height;\r\n    div.style.display = 'none';\r\n    return result;\r\n  }\r\n  function touchStart(e) {\r\n    isBlue = false;\r\n    if (scrollTimer) clearInterval(scrollTimer);\r\n    scrollTimer = null;\r\n  }\r\n  function touchMove(e) {}\r\n  function touchEnd(e) {\r\n    isBlue = true;\r\n    if (scrollTimer) clearInterval(scrollTimer);\r\n    scrollTimer = null;\r\n    autoScrollFun();\r\n  }\r\n  //iOS平滑滚动\r\n  function myScrollTo(dom, position, timeout) {\r\n    let scrollTop = dom.scrollTop;\r\n    let direction = position - scrollTop > 0 ? 1 : -1;\r\n    let distance = Math.abs(position - scrollTop);\r\n    let split = distance / 50;\r\n    let _timeout;\r\n    if (position !== scrollTop) {\r\n      timeout = timeout || 1000;\r\n      split *= direction;\r\n\r\n      _timeout = setInterval(function () {\r\n        if (!isBlue) {\r\n          if (_timeout) clearInterval(_timeout);\r\n          _timeout = null;\r\n        }\r\n        scrollTop += split;\r\n        distance -= Math.abs(split);\r\n        if (0 >= distance) {\r\n          dom.scrollTo(0, position);\r\n          clearInterval(_timeout);\r\n          _timeout = null;\r\n        } else {\r\n          dom.scrollTo(0, scrollTop);\r\n        }\r\n      }, timeout / 100);\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"xbox\">\r\n  <div\r\n    class=\"box\"\r\n    style=\"max-height:{maxHeight}\"\r\n    bind:this={boxDom}\r\n    on:touchstart={touchStart}\r\n    on:touchend={touchEnd}\r\n    on:touchmove={touchMove}\r\n  >\r\n    {#each lyricArr as lyric, i}\r\n      <div\r\n        class=\"ly\"\r\n        class:active={i === currentIndex}\r\n        style=\"filter: {isBlue && i !== currentIndex\r\n          ? `blur(${Math.abs(i - currentIndex) < 7 ? Math.abs(i - currentIndex) * 1 : 0}px)`\r\n          : 'none'};\r\n      -webkit-filter: {isBlue && i !== currentIndex\r\n          ? `blur(${Math.abs(i - currentIndex) < 7 ? Math.abs(i - currentIndex) * 1 : 0}px)`\r\n          : 'none'};\r\n      \"\r\n      >\r\n        <div>{lyric.text}</div>\r\n        {#if tlyric.trim() !== ''}\r\n          <div class=\"t-text\">{lyric.text_t}</div>\r\n        {/if}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .box {\r\n    overflow-y: scroll;\r\n    scroll-behavior: smooth;\r\n    -webkit-overflow-scrolling: auto;\r\n  }\r\n  .ly {\r\n    word-wrap: break-word;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    padding: 20px;\r\n    transition: all 0.5s ease-in;\r\n    -webkit-transition: all 0.5s ease-in;\r\n    opacity: 0.5;\r\n    filter: blur(1px);\r\n    -webkit-filter: blur(1px);\r\n    text-align: justify;\r\n  }\r\n  .active {\r\n    opacity: 1;\r\n    filter: none;\r\n    -webkit-filter: none;\r\n  }\r\n  .t-text {\r\n    font-size: 16px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { PlayFill, PauseFill, SkipForwardMiniFill } from 'svelte-remixicon';\r\n\r\n  import {\r\n    playIsMaxStore,\r\n    playStatusStore,\r\n    currentSongStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    maxPlayToTopStore,\r\n    isFMPlayStore,\r\n    FMPlayNextStore,\r\n    FMPlayStore,\r\n    playRepeatModelStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n  import { isHomePageStore } from '../store/common';\r\n\r\n  import { getSongUrl, personalFM } from '../api/song';\r\n\r\n  import { ripple, songerListToStr, Toast } from '../utils/common';\r\n\r\n  export let currentTimeLong = window.audioDOM.currentTime / window.audioDOM.duration; //进度条长度\r\n\r\n  let pauseDom;\r\n  let nextDom;\r\n  let touchStartX; //滑动开始时候触摸点Y坐标\r\n  let touchEndX; //滑动结束时候触摸点Y坐标\r\n  let touchStartTime = 0; //滑动开始时间戳\r\n  let touchEndTime = 0; //滑动结束时间戳\r\n  $: moveLong = 0; //移动距离\r\n\r\n  onMount(() => {\r\n    if (pauseDom) ripple(pauseDom);\r\n    if (nextDom) ripple(nextDom);\r\n  });\r\n\r\n  function handleMax() {\r\n    playIsMaxStore.set(true);\r\n    maxPlayToTopStore.set('0px');\r\n  }\r\n\r\n  function miniPlayFun() {\r\n    if ($playStatusStore) {\r\n      window.audioDOM.pause();\r\n      playStatusStore.set(false);\r\n      if (document.getElementById('playgroundImg'))\r\n        document.getElementById('playgroundImg').style.animationPlayState = 'paused';\r\n      localStorage.setItem('pauseTimes', new Date().getTime());\r\n    } else {\r\n      //解决长时间不播放URL失效问题(暂定30分钟过期)\r\n      if ((new Date().getTime() - Number(localStorage.getItem('pauseTimes'))) / 1000 / 60 > 30) {\r\n        window.audioDOM.src = `https://music.163.com/song/media/outer/url?id=${$currentSongStore.id}.mp3`;\r\n      }\r\n      window.audioDOM.play();\r\n      playStatusStore.set(true);\r\n      if (document.getElementById('playgroundImg'))\r\n        document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n    }\r\n  }\r\n  function miniNextFun() {\r\n    if ($isFMPlayStore) {\r\n      //正在私人FM\r\n      getSongUrlFun($FMPlayNextStore, 'fm');\r\n    } else {\r\n      if ($currentSongIndexStore === $currentPlayListStore.length - 1) {\r\n        Toast('已经是最后一首了');\r\n      } else {\r\n        //随机模式\r\n        if ($playRepeatModelStore === 'shuffle') {\r\n          let index = Math.floor(Math.random() * ($currentPlayListStore.length - 1));\r\n          getSongUrlFun($currentPlayListStore[index], 'shuffle', index);\r\n        } else {\r\n          currentSongIndexStore.set($currentSongIndexStore + 1);\r\n          getSongUrlFun($currentPlayListStore[$currentSongIndexStore], 'next');\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //获取歌曲URL\r\n  async function getSongUrlFun(song, type, index) {\r\n    const res = await getSongUrl(song.id);\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))\r\n          document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($isFMPlayStore) {\r\n          //私人FM\r\n          personalFMFun();\r\n          FMPlayStore.set(song);\r\n          currentSongStore.set(song);\r\n          currentPlayListStore.set([$FMPlayStore]);\r\n          currentSongIndexStore.set(0);\r\n          localStorage.setItem('currentSong', JSON.stringify(song));\r\n        } else {\r\n          if (type === 'shuffle') {\r\n            //随机\r\n            currentSongStore.set(song);\r\n            localStorage.setItem('currentSong', JSON.stringify(song));\r\n            currentSongIndexStore.set(index);\r\n          } else {\r\n            currentSongStore.set(song);\r\n            localStorage.setItem('currentSong', JSON.stringify(song));\r\n            if ($currentSongIndexStore !== $currentPlayListStore.length - 1) {\r\n              getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n  //私人FM\r\n  async function personalFMFun() {\r\n    const res = await personalFM();\r\n    if (res.code === 200) {\r\n      res.data[0].al = res.data[0].album;\r\n      res.data[0].ar = res.data[0].artists;\r\n      res.data[0].alia = res.data[0].alias;\r\n      FMPlayNextStore.set(res.data[0]);\r\n    }\r\n  }\r\n  //播放私人FM\r\n  function playFMFun() {\r\n    getSongUrlFun(FMSong);\r\n    isFMPlayStore.set(true);\r\n    localStorage.setItem('isFMPlay', '1');\r\n    localStorage.setItem('FMPlay', JSON.stringify(FMSong));\r\n    personalFMFun(true);\r\n  }\r\n  //滑动开始\r\n  function touchStart(e) {\r\n    touchStartTime = new Date().getTime();\r\n    touchStartX = e.changedTouches[0].clientX;\r\n  }\r\n  //滑动结束\r\n  function touchEnd(e) {\r\n    moveLong = 0;\r\n    touchEndTime = new Date().getTime();\r\n    touchEndX = e.changedTouches[0].clientX;\r\n    // 移动距离大于100，直接下一曲；\r\n    // 移动距离不超过100的时候，考虑速度，速度超过0.5，直接下一曲；\r\n    // 其他情况都是不触发\r\n    if (touchStartX - touchEndX > 100) {\r\n      miniNextFun();\r\n    } else if (touchStartX - touchEndX <= 100 && (touchStartX - touchEndX) / (touchEndTime - touchStartTime) >= 0.5) {\r\n      miniNextFun();\r\n    } else {\r\n    }\r\n  }\r\n  //滑动过程\r\n  function touchMove(e) {\r\n    //阻止滑动时穿透问题\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.changedTouches[0].clientX - touchStartX < 0) {\r\n      moveLong = e.changedTouches[0].clientX - touchStartX;\r\n    }\r\n  }\r\n</script>\r\n\r\n<div\r\n  class=\"play secondary\"\r\n  style=\"bottom: {$isHomePageStore ? 56 : 0}px\"\r\n  on:touchstart={touchStart}\r\n  on:touchend={touchEnd}\r\n  on:touchmove={touchMove}\r\n>\r\n  <div class=\"progress\" style=\"width:{(currentTimeLong / 100) * window.screen.width}px;\" on:click={handleMax} />\r\n  <div class=\"cover\" on:click={handleMax} style=\"left:{moveLong}px\">\r\n    <Lazy height={50}>\r\n      <img src={$currentSongStore.al.picUrl.replace(/^http:/, 'https:') + '?param=800y800'} alt=\"\" />\r\n    </Lazy>\r\n  </div>\r\n  <div class=\"info\" on:click={handleMax} style=\"left:{moveLong}px\">\r\n    <div class=\"name\">\r\n      {$currentSongStore.name}\r\n      <span class=\"alia\">\r\n        {$currentSongStore.alia && $currentSongStore.alia.length > 0 ? `(${$currentSongStore.alia[0]})` : ''}\r\n      </span>\r\n    </div>\r\n    <div class=\"songer\">\r\n      {songerListToStr($currentSongStore.ar)}\r\n      <span>\r\n        {$currentSongStore.al.name === '' ? '' : `- ${$currentSongStore.al.name}`}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"pause\" on:click={miniPlayFun} bind:this={pauseDom}>\r\n    {#if $playStatusStore}\r\n      <PauseFill size=\"40\" style=\"vertical-align: middle;height:57px\" />\r\n    {:else}\r\n      <PlayFill size=\"40\" style=\"vertical-align: middle;height:57px\" />\r\n    {/if}\r\n  </div>\r\n  <div class=\"next\" on:click={miniNextFun} bind:this={nextDom}>\r\n    <SkipForwardMiniFill size=\"40\" style=\"vertical-align: middle;height:57px\" />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .alia {\r\n    color: rgb(138, 138, 138);\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n  }\r\n  .progress {\r\n    z-index: 100;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 0%;\r\n    height: 1px;\r\n    background-image: linear-gradient(to right, rgba(231, 62, 68, 0.01), rgba(231, 62, 68, 1));\r\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n    /* padding-bottom: constant(safe-area-inset-bottom); */\r\n    /* padding-bottom: env(safe-area-inset-bottom); */\r\n  }\r\n  .play {\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 60px;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    padding-bottom: constant(safe-area-inset-bottom);\r\n    padding-bottom: env(safe-area-inset-bottom);\r\n    /* border-top: 1px solid rgba(197, 197, 197, 0.4); */\r\n    backdrop-filter: blur(10px);\r\n    -webkit-backdrop-filter: blur(10px);\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n    transition: all 0.4s ease-in-out;\r\n    -webkit-transition: all 0.4s ease-in-out;\r\n  }\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border: rgb(214, 214, 214) solid 1px;\r\n    border-radius: 5px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n  .cover {\r\n    width: 50px;\r\n    height: 50px;\r\n    padding: 5px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    left: 0px;\r\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n  }\r\n  .pause {\r\n    flex: 1;\r\n    line-height: 57px;\r\n    z-index: 101;\r\n    border-radius: 30px;\r\n  }\r\n  .next {\r\n    z-index: 101;\r\n    flex: 1;\r\n    line-height: 57px;\r\n    border-radius: 30px;\r\n  }\r\n  .info {\r\n    flex: 3;\r\n    text-align: left;\r\n    font-size: 16px;\r\n    position: relative;\r\n    left: 0px;\r\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n  }\r\n  .name {\r\n    font-weight: bold;\r\n    align-items: center;\r\n    width: 186px;\r\n    height: 36px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box; /*作为弹性伸缩盒子模型显示。*/\r\n    -webkit-box-orient: vertical; /*设置伸缩盒子的子元素排列方式--从上到下垂直排列8*/\r\n    -webkit-line-clamp: 2;\r\n  }\r\n  .songer {\r\n    margin-top: 4px;\r\n    font-size: 12px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box; /*作为弹性伸缩盒子模型显示。*/\r\n    -webkit-box-orient: vertical; /*设置伸缩盒子的子元素排列方式--从上到下垂直排列8*/\r\n    -webkit-line-clamp: 1;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { push } from 'svelte-stack-router';\r\n  import { PlayMiniLine } from 'svelte-remixicon';\r\n\r\n  import { playListIdStore } from '../store/playList';\r\n  import { isHomePageStore } from '../store/common';\r\n\r\n  import { ripple, tranNumber, Confirm } from '../utils/common';\r\n\r\n  export let coverImgUrl = '';\r\n  export let playCount = 0;\r\n  export let name = '';\r\n  export let id = 0;\r\n  export let width = 150;\r\n  export let trackCount = 0;\r\n  let coverDom;\r\n  onMount(() => {\r\n    if (coverDom) {\r\n      ripple(coverDom);\r\n    }\r\n  });\r\n  function goToDetail() {\r\n    playListIdStore.set(id);\r\n    isHomePageStore.set(false);\r\n    if (trackCount > 1000) {\r\n      Confirm('😅 此歌单有 ' + trackCount + ' 首歌曲，加载时间可能比较久，确定查看歌单详情吗？', async () => {\r\n        push('/playlistdetail');\r\n      });\r\n    } else {\r\n      push('/playlistdetail');\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"cover\" on:click={goToDetail} style=\"width:{width}px\" bind:this={coverDom}>\r\n  <div class=\"cover-img\" style=\"width:{width}px;height:{width}px\">\r\n    <Lazy height={width}>\r\n      <img src={coverImgUrl.replace(/^http:/, 'https:') + `?param=${width * 2}y${width * 2}`} alt=\"\" />\r\n    </Lazy>\r\n  </div>\r\n  <div class=\"play-num\">\r\n    <span style=\"position: relative;top:1px\">\r\n      <PlayMiniLine />\r\n    </span>\r\n    {tranNumber(playCount)}\r\n  </div>\r\n  <div class=\"name\" style=\"width:{width}px;\">{name}</div>\r\n</div>\r\n\r\n<style>\r\n  .play-num {\r\n    margin: 4px auto;\r\n    font-size: 10px;\r\n    color: rgb(146, 146, 146);\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n  .cover {\r\n    width: 105px;\r\n    padding-bottom: 10px;\r\n  }\r\n  .cover-img {\r\n    overflow: hidden;\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    border-radius: 6px;\r\n  }\r\n  .name {\r\n    margin-top: 4px;\r\n    line-height: 16px;\r\n    width: 150px;\r\n    height: 32px;\r\n    font-size: 12px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n</style>\r\n",
    "<script>\r\n    import { onMount } from 'svelte';\r\n    import { push, location } from 'svelte-stack-router';\r\n    import {\r\n        SkipBackFill,\r\n        SkipForwardFill,\r\n        PlayFill,\r\n        PauseFill,\r\n        ChatQuoteLine,\r\n        ChatQuoteFill,\r\n        Message2Line,\r\n        RadioLine,\r\n        Heart2Line,\r\n        Heart2Fill,\r\n        DislikeLine,\r\n        RepeatOneLine,\r\n        ShuffleLine,\r\n        PlayListLine,\r\n        PlayListFill,\r\n        SortDesc,\r\n        HeartPulseLine,\r\n    } from 'svelte-remixicon';\r\n    import Wave from '@foobar404/wave';\r\n\r\n    import { Picker, Progress } from '../components/base';\r\n    import Lyric from '../components/Lyric.svelte';\r\n    import SongList from '../components/SongList.svelte';\r\n\r\n    import { getSongUrl, personalFM, likeThisSong, getLyric, fmTrash } from '../api/song';\r\n\r\n    import {\r\n        playStatusStore,\r\n        currentSongStore,\r\n        currentPlayListStore,\r\n        currentSongIndexStore,\r\n        maxPlayToTopStore,\r\n        playIsMaxStore,\r\n        isFMPlayStore,\r\n        FMPlayNextStore,\r\n        FMPlayStore,\r\n        currentLyricStore,\r\n        mainCoverTypeStore,\r\n        playRepeatModelStore,\r\n        currentSongQualityStore,\r\n    } from '../store/play';\r\n    import { isLoginStore, isHomePageStore, currentDetailSongerIdStore, isShowCommentStore } from '../store/common';\r\n    import { userLikeSongIdsStore } from '../store/user';\r\n    import { showVisualizerStore } from '../store/play';\r\n\r\n    import { timeToMinute, songerListToStr, Toast, ripple } from '../utils/common';\r\n\r\n    export let currentTime = '0:00'; //当前播放时间\r\n    export let currentTimeLong = 0; //进度条长度\r\n    export let endTime = 0; //结束时间\r\n\r\n    let lyricDom;\r\n    let listDom;\r\n    let loveDom;\r\n    let disloveDom;\r\n    let repeatDom;\r\n    let commentDom;\r\n    let preDom;\r\n    let playDom;\r\n    let nextDom;\r\n    let coverDom;\r\n\r\n    let playBgDom;\r\n    let touchMoveToTop = 0; //播放器顶部距离整个视窗顶部的距离\r\n    let touchStartY; //滑动开始时候触摸点Y坐标\r\n    let touchEndY; //滑动结束时候触摸点Y坐标\r\n    let touchStartTime = 0; //滑动开始时间戳\r\n    let touchEndTime = 0; //滑动结束时间戳\r\n    let playListDom;\r\n\r\n    $: isLikeCurrentSong = $isLoginStore ? $userLikeSongIdsStore.includes($currentSongStore.id) : false; //是否喜欢当前歌曲\r\n    $: likeLoading = false; //优化点击红心请求时候loading效果\r\n    $: noLikeLoading = false; //优化FM点击不喜欢红心请求时候loading效果\r\n    $: lyricLoading = false; //优化点击歌词请求时候loading效果\r\n    $: PickerShow = false;\r\n    $: songers = $currentSongStore.ar;\r\n\r\n    onMount(() => {\r\n        maxPlayToTopStore.set(window.screen.height + 'px');\r\n        playIsMaxStore.set(false);\r\n        mainCoverTypeStore.set('cover');\r\n        let wave = new Wave();\r\n        wave.fromElement('audioDom', 'playgroundCanvas', { type: 'shine', colors: ['white', 'red', 'blue'] });\r\n        if (lyricDom) ripple(lyricDom);\r\n        if (listDom) ripple(listDom);\r\n        if (loveDom) ripple(loveDom);\r\n        if (disloveDom) ripple(disloveDom);\r\n        if (repeatDom) ripple(repeatDom);\r\n        if (commentDom) ripple(commentDom);\r\n        if (preDom) ripple(preDom);\r\n        if (playDom) ripple(playDom);\r\n        if (nextDom) ripple(nextDom);\r\n        if (coverDom) ripple(coverDom);\r\n    });\r\n    //接收子组件（Progress）发送来的事件（setCurrent），获取当前进度点的值（event.detail.current）。\r\n    function getCurrent(event) {\r\n        window.audioDOM.currentTime = (event.detail.current / 100) * window.audioDOM.duration;\r\n        currentTime = timeToMinute(window.audioDOM.currentTime);\r\n        currentTimeLong = (window.audioDOM.currentTime / window.audioDOM.duration) * 100;\r\n        endTime = '-' + timeToMinute(window.audioDOM.duration - window.audioDOM.currentTime);\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg')) document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n    }\r\n    //接收子组件（Progress）发送来的事件（setTimeCurrent），获取当前进度时间点的值（event.detail.timeCurrent ）。\r\n    function getTimeCurrent(event) {\r\n        window.audioDOM.currentTime = (event.detail.timeCurrent / 100) * window.audioDOM.duration;\r\n        currentTime = timeToMinute(window.audioDOM.currentTime);\r\n        currentTimeLong = (window.audioDOM.currentTime / window.audioDOM.duration) * 100;\r\n        endTime = '-' + timeToMinute(window.audioDOM.duration - window.audioDOM.currentTime);\r\n    }\r\n    function handleDown() {\r\n        maxPlayToTopStore.set(window.screen.height + 'px');\r\n        playIsMaxStore.set(false);\r\n        mainCoverTypeStore.set('cover');\r\n    }\r\n    //切换下一首\r\n    function playNextFun() {\r\n        if ($isFMPlayStore) {\r\n            //正在私人FM\r\n            getSongUrlFun($FMPlayNextStore, 'next');\r\n            mainCoverTypeStore.set('cover');\r\n        } else {\r\n            if ($currentSongIndexStore === $currentPlayListStore.length - 1) {\r\n                Toast('已经是最后一首了');\r\n            } else {\r\n                if ($mainCoverTypeStore === 'lyric') mainCoverTypeStore.set('cover');\r\n                //随机模式\r\n                if ($playRepeatModelStore === 'shuffle') {\r\n                    // Math.floor(Math.random() * 21);\r\n                    let index = Math.floor(Math.random() * ($currentPlayListStore.length - 1));\r\n                    getSongUrlFun($currentPlayListStore[index], 'shuffle', index);\r\n                } else {\r\n                    currentSongIndexStore.set($currentSongIndexStore + 1);\r\n                    getSongUrlFun($currentPlayListStore[$currentSongIndexStore], 'next');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //切换上一首\r\n    function playPreFun() {\r\n        if ($currentSongIndexStore === 0) {\r\n            Toast('已经是第一首了');\r\n        } else {\r\n            if ($mainCoverTypeStore === 'lyric') mainCoverTypeStore.set('cover');\r\n            getSongUrlFun($currentPlayListStore[$currentSongIndexStore - 1], 'pre');\r\n        }\r\n    }\r\n    //获取歌单url\r\n    async function getSongUrlFun(song, type, index) {\r\n        const res = await getSongUrl(song.id);\r\n        if (res.code === 200) {\r\n            if (res.data[0].url) {\r\n                song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n                if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n                    currentSongQualityStore.set('试听');\r\n                } else if (res.data[0].type === 'flac') {\r\n                    currentSongQualityStore.set('FLAC');\r\n                } else {\r\n                    currentSongQualityStore.set(res.data[0].br);\r\n                }\r\n                currentSongStore.set(song);\r\n                localStorage.setItem('currentSong', JSON.stringify(song));\r\n                window.audioDOM.src = song.url;\r\n                window.audioDOM.play();\r\n                playStatusStore.set(true);\r\n                if (document.getElementById('playgroundImg')) document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n                if ($isFMPlayStore) {\r\n                    //私人FM\r\n                    personalFMFun();\r\n                    FMPlayStore.set(song);\r\n                    currentSongStore.set(song);\r\n                    currentPlayListStore.set([$FMPlayStore]);\r\n                    currentSongIndexStore.set(0);\r\n                    localStorage.setItem('currentSong', JSON.stringify(song));\r\n                } else {\r\n                    //切换下一首和上一首之后，修改播放歌曲在播放列表中的位置\r\n                    if (type === 'next') {\r\n                        if ($currentSongIndexStore !== $currentPlayListStore.length - 1) {\r\n                            getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n                        }\r\n                    } else if (type === 'shuffle') {\r\n                        //随机\r\n                        if ($currentSongIndexStore !== $currentPlayListStore.length - 1) {\r\n                            currentSongIndexStore.set(index);\r\n                        }\r\n                    } else {\r\n                        //上一首\r\n                        currentSongIndexStore.set($currentSongIndexStore - 1);\r\n                    }\r\n                }\r\n            } else {\r\n                Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n            }\r\n        }\r\n    }\r\n    //私人FM\r\n    async function personalFMFun() {\r\n        const res = await personalFM();\r\n        if (res.code === 200) {\r\n            res.data[0].al = res.data[0].album;\r\n            res.data[0].ar = res.data[0].artists;\r\n            res.data[0].alia = res.data[0].alias;\r\n            FMPlayNextStore.set(res.data[0]);\r\n            getSongUrl(res.data[0].id);\r\n        }\r\n    }\r\n    //点击红心\r\n    async function handleLoveFun() {\r\n        if ($isLoginStore) {\r\n            likeLoading = true;\r\n            const res = await likeThisSong({\r\n                id: $currentSongStore.id,\r\n                like: !isLikeCurrentSong,\r\n            });\r\n            if (res.code === 200) {\r\n                const ids = JSON.parse(localStorage.getItem('useLoveSongIds'));\r\n                if (isLikeCurrentSong) {\r\n                    let i = ids.indexOf($currentSongStore.id);\r\n                    ids.splice(i, 1);\r\n                } else {\r\n                    ids.unshift($currentSongStore.id);\r\n                }\r\n                likeLoading = false;\r\n                userLikeSongIdsStore.set(JSON.stringify(ids));\r\n                localStorage.setItem('useLoveSongIds', JSON.stringify(ids));\r\n            } else {\r\n                likeLoading = false;\r\n            }\r\n        } else {\r\n            Toast('当前未登录');\r\n        }\r\n    }\r\n    //FM 不喜欢\r\n    async function handleFMNoLoveFun() {\r\n        noLikeLoading = true;\r\n        const res = await fmTrash($currentSongStore.id);\r\n        if (res.code === 200) {\r\n            noLikeLoading = false;\r\n            playNextFun();\r\n        }\r\n    }\r\n    //切换歌词显示\r\n    function changeLyricFun() {\r\n        if ($mainCoverTypeStore !== 'lyric') {\r\n            getlyricFun();\r\n        } else {\r\n            mainCoverTypeStore.set('cover');\r\n        }\r\n    }\r\n    //请求歌词\r\n    async function getlyricFun() {\r\n        if ($currentLyricStore.songId === $currentSongStore.id) {\r\n            mainCoverTypeStore.set('lyric');\r\n        } else {\r\n            lyricLoading = true;\r\n            const res = await getLyric($currentSongStore.id);\r\n            if (res.code === 200) {\r\n                lyricLoading = false;\r\n                if (res.nolyric || res.needDesc || res.lrc.lyric === '') {\r\n                    Toast('🙈🙈么有歌词哦!!🙈🙈');\r\n                    currentLyricStore.set({\r\n                        songId: null,\r\n                        lyric: null,\r\n                        tlyric: null,\r\n                    });\r\n                    localStorage.setItem(\r\n                        'currentLyric',\r\n                        JSON.stringify({\r\n                            songId: null,\r\n                            lyric: null,\r\n                            tlyric: null,\r\n                        })\r\n                    );\r\n                } else {\r\n                    currentLyricStore.set({\r\n                        songId: $currentSongStore.id,\r\n                        lyric: res.lrc.lyric,\r\n                        tlyric: res.tlyric.lyric,\r\n                    });\r\n                    localStorage.setItem(\r\n                        'currentLyric',\r\n                        JSON.stringify({\r\n                            songId: $currentSongStore.id,\r\n                            lyric: res.lrc.lyric,\r\n                            tlyric: res.tlyric.lyric,\r\n                        })\r\n                    );\r\n                    mainCoverTypeStore.set('lyric');\r\n                }\r\n            } else {\r\n                lyricLoading = false;\r\n            }\r\n        }\r\n    }\r\n    //切换播放列表显示\r\n    function changeListFun() {\r\n        if ($mainCoverTypeStore !== 'list') {\r\n            if ($currentSongIndexStore > 200) {\r\n                let r = confirm(\r\n                    '当前播放歌曲在播放列表中位置超过 200，显示播放列表将自动滚动至当前歌曲，极短时间内渲染大量页面会严重消耗设备性能😈😈。可以考虑到歌单详情页（已做了懒加载）查看列表哦😅。🤔确定显示播放列表吗🤔？'\r\n                );\r\n                if (r === true) {\r\n                    if ($currentPlayListStore.length > 200) {\r\n                        Toast('列表太长，等我加载...🥱🥱', 1000, () => {\r\n                            mainCoverTypeStore.set('list');\r\n                            setTimeout(() => {\r\n                                playListDom.scrollTop = 60 * $currentSongIndexStore;\r\n                            }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\r\n                        });\r\n                    } else {\r\n                        mainCoverTypeStore.set('list');\r\n                        setTimeout(() => {\r\n                            playListDom.scrollTop = 60 * $currentSongIndexStore;\r\n                        }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\r\n                    }\r\n                }\r\n            } else {\r\n                if ($currentPlayListStore.length > 200) {\r\n                    Toast('列表太长，等我加载...🥱🥱', 1000, () => {\r\n                        mainCoverTypeStore.set('list');\r\n                        setTimeout(() => {\r\n                            playListDom.scrollTop = 60 * $currentSongIndexStore;\r\n                        }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\r\n                    });\r\n                } else {\r\n                    mainCoverTypeStore.set('list');\r\n                    setTimeout(() => {\r\n                        playListDom.scrollTop = 60 * $currentSongIndexStore;\r\n                    }, 100); //做延迟处理，渲染页面之后才能获取DOM高度，计算滚动高度\r\n                }\r\n            }\r\n        } else {\r\n            mainCoverTypeStore.set('cover');\r\n        }\r\n    }\r\n    // 切换播放循环模式\r\n    function changeRrpeatFun(e) {\r\n        if ($playRepeatModelStore === 'heart') {\r\n            Toast('心动模式无需切换');\r\n        } else {\r\n            if ($playRepeatModelStore === 'repeat') {\r\n                playRepeatModelStore.set('shuffle');\r\n            } else if ($playRepeatModelStore === 'shuffle') {\r\n                playRepeatModelStore.set('repeatOnce');\r\n            } else {\r\n                playRepeatModelStore.set('repeat');\r\n            }\r\n        }\r\n    }\r\n    //歌词区域点击\r\n    function lyricClickFun() {\r\n        mainCoverTypeStore.set('cover');\r\n    }\r\n    //去歌曲评论页面\r\n    function toCommentFun() {\r\n        mainCoverTypeStore.set('cover');\r\n        maxPlayToTopStore.set(window.screen.height + 'px');\r\n        playIsMaxStore.set(false);\r\n        if (!($location === '/musicComment')) {\r\n            if ($isHomePageStore) isHomePageStore.set(false);\r\n            push('/musicComment');\r\n        }\r\n    }\r\n    //滑动开始\r\n    function touchStart(e) {\r\n        touchStartTime = new Date().getTime();\r\n        touchStartY = e.changedTouches[0].clientY;\r\n        touchMoveToTop = 0;\r\n        maxPlayToTopStore.set(touchMoveToTop + 'px');\r\n    }\r\n    //滑动结束\r\n    function touchEnd(e) {\r\n        touchEndTime = new Date().getTime();\r\n        touchEndY = e.changedTouches[0].clientY;\r\n        // 移动距离小于100不触发任何行为\r\n        // 移动结束时，播放器顶部距整个视窗顶部的距离大于屏幕高度一半的时候，可以不用考虑滑动速度，直接最小化播放器\r\n        // 移动距离超过100，播放器顶部距整个视窗顶部的距离还不到一半的时候，考虑速度，速度超过0.8，直接最小化；\r\n        // 速度小于0.3，不判断为最小化；0.3-0.8之间，如果移动距离超过250，最小化，不到250则不触发最小化。\r\n        if (touchMoveToTop >= window.screen.height / 2) {\r\n            //最小化\r\n            maxPlayToTopStore.set(window.screen.height + 'px');\r\n            playIsMaxStore.set(false);\r\n            mainCoverTypeStore.set('cover');\r\n        } else if (touchEndY - touchStartY <= 100) {\r\n            maxPlayToTopStore.set('0px');\r\n        } else if (touchEndY - touchStartY > 100 && (touchEndY - touchStartY) / (touchEndTime - touchStartTime) >= 0.8) {\r\n            maxPlayToTopStore.set(window.screen.height + 'px');\r\n            playIsMaxStore.set(false);\r\n            mainCoverTypeStore.set('cover');\r\n        } else if (touchEndY - touchStartY > 100 && (touchEndY - touchStartY) / (touchEndTime - touchStartTime) <= 0.3) {\r\n            maxPlayToTopStore.set('0px');\r\n        } else if (0.3 < (touchEndY - touchStartY) / (touchEndTime - touchStartTime) < 0.8 && touchEndY - touchStartY > 250) {\r\n            maxPlayToTopStore.set(window.screen.height + 'px');\r\n            playIsMaxStore.set(false);\r\n            mainCoverTypeStore.set('cover');\r\n        } else {\r\n            maxPlayToTopStore.set('0px');\r\n        }\r\n    }\r\n    //滑动过程\r\n    function touchMove(e) {\r\n        //阻止滑动时穿透问题\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (parseFloat(playBgDom.style['top']) >= 0) {\r\n            touchMoveToTop = e.changedTouches[0].clientY - touchStartY;\r\n            maxPlayToTopStore.set(touchMoveToTop + 'px');\r\n        }\r\n    }\r\n</script>\r\n\r\n<div\r\n    bind:this={playBgDom}\r\n    class=\"play-bg\"\r\n    style=\"background: url({$currentSongStore.al.picUrl.replace(/^http:/, 'https:') + '?param=800y800'});top:{$maxPlayToTopStore}\"\r\n>\r\n    <div class=\"play\">\r\n        <div class=\"top-box\">\r\n            <div class=\"down\" on:click={handleDown} on:touchstart={touchStart} on:touchend={touchEnd} on:touchmove={touchMove}>\r\n                <div class=\"down-line\" />\r\n            </div>\r\n            <div\r\n                on:click={handleDown}\r\n                style=\"height:54vh;position: relative;justify-content: center;align-content: center; display:{$mainCoverTypeStore ===\r\n                    'cover' && $showVisualizerStore === '1'\r\n                    ? 'flex'\r\n                    : 'none'}\"\r\n            >\r\n                <canvas id=\"playgroundCanvas\" height=\"720\" width=\"720\" style=\"position: absolute;top:-180px;transform: scale(0.5);\" />\r\n                <img\r\n                    style=\"width:170px;height:170px;border-radius: 50%;position: absolute;top:95px;\"\r\n                    src={$currentSongStore.al.picUrl.replace(/^http:/, 'https:') + '?param=800y800'}\r\n                    alt=\"\"\r\n                    id=\"playgroundImg\"\r\n                    class=\"cover-img cover-img-rotate\"\r\n                />\r\n            </div>\r\n\r\n            {#if $mainCoverTypeStore === 'cover'}\r\n                <div\r\n                    class=\"cover\"\r\n                    on:click={handleDown}\r\n                    on:touchstart={touchStart}\r\n                    on:touchend={touchEnd}\r\n                    on:touchmove={touchMove}\r\n                    bind:this={coverDom}\r\n                >\r\n                    <div style=\"position: relative; display:{$showVisualizerStore === '1' ? 'none' : 'block'}\">\r\n                        <img\r\n                            style=\"width:{$playStatusStore ? '280px' : '240px'};height:{$playStatusStore ? '280px' : '240px'};\"\r\n                            src={$currentSongStore.al.picUrl.replace(/^http:/, 'https:') + '?param=800y800'}\r\n                            alt=\"\"\r\n                            class=\"cover-img\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            {:else if $mainCoverTypeStore === 'lyric'}\r\n                <div class=\"lyric-cover\" on:click={lyricClickFun}>\r\n                    <Lyric maxHeight=\"54vh\" />\r\n                </div>\r\n            {:else if !$isFMPlayStore && $mainCoverTypeStore === 'list'}\r\n                <div class=\"song-list-box\" bind:this={playListDom}>\r\n                    <SongList songList={$currentPlayListStore} />\r\n                </div>\r\n            {/if}\r\n        </div>\r\n        <div class=\"control-box\">\r\n            <div class=\"info\">\r\n                <div class=\"song\">\r\n                    <div class=\"name\">\r\n                        {$currentSongStore.name}\r\n                        <span class=\"alia\">\r\n                            {$currentSongStore.alia && $currentSongStore.alia.length > 0 ? `(${$currentSongStore.alia[0]})` : ''}\r\n                        </span>\r\n                    </div>\r\n                    <div\r\n                        class=\"songer\"\r\n                        on:click={() => {\r\n                            if (songers.length === 1) {\r\n                                if (songers[0].id != 0) {\r\n                                    mainCoverTypeStore.set('cover');\r\n                                    maxPlayToTopStore.set(window.screen.height + 'px');\r\n                                    playIsMaxStore.set(false);\r\n                                    isHomePageStore.set(false);\r\n                                    currentDetailSongerIdStore.set(songers[0].id);\r\n                                    push('/songerDetail');\r\n                                }\r\n                            } else {\r\n                                PickerShow = true;\r\n                            }\r\n                        }}\r\n                    >\r\n                        {songerListToStr($currentSongStore.ar)}\r\n                        <span>\r\n                            {$currentSongStore.al.name === '' ? '' : `- ${$currentSongStore.al.name}`}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"progress\">\r\n                    <div class=\"line\">\r\n                        <Progress on:setCurrent={getCurrent} on:setTimeCurrent={getTimeCurrent} current={currentTimeLong} />\r\n                    </div>\r\n                    <!-- 时间显示 -->\r\n                    <div class=\"time\">\r\n                        <div class=\"time-item start\">{currentTime}</div>\r\n                        <div\r\n                            class=\"time-item quality\"\r\n                            on:click={() => {\r\n                                mainCoverTypeStore.set('cover');\r\n                                maxPlayToTopStore.set(window.screen.height + 'px');\r\n                                playIsMaxStore.set(false);\r\n                                if (!($location === '/brSelect')) {\r\n                                    if ($isHomePageStore) isHomePageStore.set(false);\r\n                                    push('/brSelect');\r\n                                }\r\n                            }}\r\n                        >\r\n                            <span class=\"quality-span\">\r\n                                {$currentSongQualityStore === 'FLAC' || $currentSongQualityStore === '试听'\r\n                                    ? $currentSongQualityStore\r\n                                    : $currentSongQualityStore.toString().substring(0, $currentSongQualityStore.toString().length - 3) +\r\n                                      'K'}\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"time-item end\">{endTime}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"tool\">\r\n                <!-- 歌词 -->\r\n                <div class=\"tool-item lyric\" on:click={changeLyricFun} bind:this={lyricDom}>\r\n                    {#if lyricLoading}\r\n                        <span style=\"line-height: 30px;\">\r\n                            <embed width=\"24\" height=\"24\" src=\"/images/Ripple.svg\" type=\"image/svg+xml\" />\r\n                        </span>\r\n                    {:else if $mainCoverTypeStore === 'lyric'}\r\n                        <ChatQuoteFill size=\"20\" style=\"vertical-align: middle\" />\r\n                    {:else}\r\n                        <ChatQuoteLine size=\"20\" style=\"vertical-align: middle\" />\r\n                    {/if}\r\n                </div>\r\n                {#if !$isFMPlayStore}\r\n                    <!-- 播放列表 -->\r\n                    <div class=\"tool-item list\" on:click={changeListFun} bind:this={listDom}>\r\n                        {#if $mainCoverTypeStore === 'list'}\r\n                            <PlayListFill size=\"20\" style=\"vertical-align: middle\" />\r\n                        {:else}\r\n                            <PlayListLine size=\"20\" style=\"vertical-align: middle\" />\r\n                        {/if}\r\n                    </div>\r\n                {/if}\r\n                {#if $isFMPlayStore && $isLoginStore}\r\n                    <!-- FM 不喜欢 -->\r\n                    <div class=\"tool-item list\" on:click={handleFMNoLoveFun} bind:this={disloveDom}>\r\n                        {#if noLikeLoading}\r\n                            <span style=\"line-height: 30px;\">\r\n                                <embed width=\"24\" height=\"24\" src=\"/images/Ripple.svg\" type=\"image/svg+xml\" />\r\n                            </span>\r\n                        {:else}\r\n                            <DislikeLine size=\"20\" style=\"vertical-align: middle\" />\r\n                        {/if}\r\n                    </div>\r\n                {/if}\r\n                {#if $isLoginStore}\r\n                    <!-- 喜欢 -->\r\n                    <div class=\"tool-item love\" on:click={handleLoveFun} bind:this={loveDom}>\r\n                        {#if likeLoading}\r\n                            <span style=\"line-height: 30px;\">\r\n                                <embed width=\"24\" height=\"24\" src=\"/images/Ripple.svg\" type=\"image/svg+xml\" />\r\n                            </span>\r\n                        {:else}\r\n                            <span style=\"color:{isLikeCurrentSong ? 'var(--primary-text-color)' : '#fff'}\">\r\n                                {#if isLikeCurrentSong}\r\n                                    <Heart2Fill size=\"20\" style=\"vertical-align: middle\" />\r\n                                {:else}\r\n                                    <Heart2Line size=\"20\" style=\"vertical-align: middle\" />\r\n                                {/if}\r\n                            </span>\r\n                        {/if}\r\n                    </div>\r\n                {/if}\r\n                {#if !$isFMPlayStore}\r\n                    <!-- 播放模式 -->\r\n                    <div class=\"tool-item mode\" on:click={e => changeRrpeatFun(e)} bind:this={repeatDom}>\r\n                        {#if $playRepeatModelStore === 'repeat'}\r\n                            <SortDesc size=\"20\" style=\"vertical-align: middle\" />\r\n                        {:else if $playRepeatModelStore === 'repeatOnce'}\r\n                            <RepeatOneLine size=\"20\" style=\"vertical-align: middle\" />\r\n                        {:else if $playRepeatModelStore === 'heart'}\r\n                            <span class:heart-beat={$playStatusStore}>\r\n                                <HeartPulseLine size=\"20\" style=\"vertical-align: middle\" />\r\n                            </span>\r\n                        {:else}\r\n                            <ShuffleLine size=\"20\" style=\"vertical-align: middle\" />\r\n                        {/if}\r\n                    </div>\r\n                {/if}\r\n                <!-- 评论 -->\r\n                {#if $isShowCommentStore != '0'}\r\n                    <div class=\"tool-item comment\" on:click={toCommentFun} bind:this={commentDom}>\r\n                        <Message2Line size=\"20\" style=\"vertical-align: middle\" />\r\n                    </div>\r\n                {/if}\r\n            </div>\r\n            <div class=\"control\">\r\n                <div\r\n                    class=\"con-item pre\"\r\n                    on:click={() => {\r\n                        if (!$isFMPlayStore) playPreFun();\r\n                    }}\r\n                    bind:this={preDom}\r\n                >\r\n                    {#if $isFMPlayStore}\r\n                        <RadioLine size=\"24px\" style=\"vertical-align: middle;;height:80px\" />\r\n                    {:else}\r\n                        <SkipBackFill size=\"40px\" style=\"vertical-align: middle;height:80px\" />\r\n                    {/if}\r\n                </div>\r\n                <div\r\n                    class=\"con-item pause\"\r\n                    bind:this={playDom}\r\n                    on:click={() => {\r\n                        if ($playStatusStore) {\r\n                            window.audioDOM.pause();\r\n                            playStatusStore.set(false);\r\n                            if (document.getElementById('playgroundImg'))\r\n                                document.getElementById('playgroundImg').style.animationPlayState = 'paused';\r\n                            localStorage.setItem('pauseTimes', new Date().getTime());\r\n                        } else {\r\n                            //解决长时间不播放URL失效问题(暂定30分钟过期)\r\n                            if ((new Date().getTime() - Number(localStorage.getItem('pauseTimes'))) / 1000 / 60 > 30) {\r\n                                window.audioDOM.src = `https://music.163.com/song/media/outer/url?id=${$currentSongStore.id}.mp3`;\r\n                            }\r\n                            window.audioDOM.play();\r\n                            playStatusStore.set(true);\r\n                            if (document.getElementById('playgroundImg'))\r\n                                document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n                        }\r\n                    }}\r\n                >\r\n                    {#if $playStatusStore}\r\n                        <PauseFill size=\"80px\" style=\"vertical-align: middle;height:80px\" />\r\n                    {:else}\r\n                        <PlayFill size=\"80px\" style=\"vertical-align: middle;height:80px\" />\r\n                    {/if}\r\n                </div>\r\n                <div class=\"con-item next\" on:click={playNextFun} bind:this={nextDom}>\r\n                    <SkipForwardFill size=\"40px\" style=\"vertical-align: middle;height:80px\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{#if $playIsMaxStore && 0 < parseFloat($maxPlayToTopStore) < window.screen.height - 40}\r\n    <div class=\"play-mask\" style=\"background-color: rgba(0, 0, 0, {0.9 - parseFloat($maxPlayToTopStore) / window.screen.height});\" />\r\n{/if}\r\n\r\n<Picker\r\n    isShow={PickerShow}\r\n    title=\"请选择歌手\"\r\n    on:ChangeShow={e => {\r\n        PickerShow = e.detail.isShow;\r\n    }}\r\n    on:PickerClick={e => {\r\n        if (e.detail.item.id != 0) {\r\n            mainCoverTypeStore.set('cover');\r\n            maxPlayToTopStore.set(window.screen.height + 'px');\r\n            playIsMaxStore.set(false);\r\n            isHomePageStore.set(false);\r\n            currentDetailSongerIdStore.set(e.detail.item.id);\r\n            push('/songerDetail');\r\n        }\r\n    }}\r\n    list={songers}\r\n/>\r\n\r\n<style>\r\n    .alia {\r\n        color: rgb(255, 255, 255, 0.7);\r\n        font-size: 14px;\r\n        font-weight: normal;\r\n    }\r\n    .down {\r\n        text-align: center;\r\n        height: 6vh;\r\n        display: flex;\r\n    }\r\n    .down-line {\r\n        margin: auto;\r\n        width: 40px;\r\n        height: 6px;\r\n        border-radius: 3px;\r\n        margin: auto;\r\n        background: rgba(255, 255, 255, 0.8);\r\n    }\r\n    .line {\r\n        padding: 10px 20px;\r\n    }\r\n    .time {\r\n        font-size: 10px;\r\n        columns: 2;\r\n        padding: 0 18px;\r\n        color: rgba(255, 255, 255, 0.6);\r\n        display: flex;\r\n    }\r\n    .time-item {\r\n        flex: 1;\r\n    }\r\n    .start {\r\n        text-align: left;\r\n    }\r\n    .quality {\r\n        text-align: center;\r\n        display: inline-block;\r\n        opacity: 0.6;\r\n    }\r\n    .quality-span {\r\n        line-height: 13px;\r\n        font-size: 8px;\r\n        padding: 0 2px;\r\n        background-color: #fff;\r\n        border-radius: 2px;\r\n        color: rgb(99, 99, 99);\r\n    }\r\n    .end {\r\n        text-align: right;\r\n    }\r\n    .name {\r\n        margin-top: 20px;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n    .info {\r\n        text-align: left;\r\n    }\r\n    .song {\r\n        padding: 0 20px;\r\n    }\r\n    .songer {\r\n        margin-top: 6px;\r\n        font-size: 14px;\r\n        color: rgb(255, 255, 255, 0.7);\r\n    }\r\n    .play-bg {\r\n        width: 100vw;\r\n        height: 100vh;\r\n        position: fixed;\r\n        bottom: 0;\r\n        z-index: 999;\r\n        background-size: cover !important;\r\n        background-position: center !important;\r\n        transition: top 0.6s cubic-bezier(0.14, 0.85, 0.65, 0.97);\r\n        -webkit-transition: top 0.6s cubic-bezier(0.14, 0.85, 0.65, 0.97);\r\n        padding-bottom: constant(safe-area-inset-bottom);\r\n        padding-bottom: env(safe-area-inset-bottom);\r\n    }\r\n    .cover-img {\r\n        object-fit: cover;\r\n        transition: all 0.3s ease;\r\n        -webkit-transition: all 0.3s ease;\r\n    }\r\n    @-webkit-keyframes rotation {\r\n        from {\r\n            -webkit-transform: rotate(0deg);\r\n        }\r\n        to {\r\n            -webkit-transform: rotate(360deg);\r\n        }\r\n    }\r\n    .cover-img-rotate {\r\n        /* -webkit-transform: rotate(360deg); */\r\n        animation: rotation 30s linear infinite;\r\n        -moz-animation: rotation 30s linear infinite;\r\n        -webkit-animation: rotation 30s linear infinite;\r\n        -o-animation: rotation 30s linear infinite;\r\n    }\r\n    .play {\r\n        position: absolute;\r\n        z-index: 1001;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: rgba(0, 0, 0, 0.4);\r\n        backdrop-filter: blur(20px);\r\n        -webkit-backdrop-filter: blur(20px);\r\n        color: #fff;\r\n        font-size: 26px;\r\n        padding-bottom: constant(safe-area-inset-bottom);\r\n        padding-bottom: env(safe-area-inset-bottom);\r\n    }\r\n    img {\r\n        display: block;\r\n        width: 220px;\r\n        height: 220px;\r\n        margin: auto;\r\n        border-radius: 10px;\r\n        box-shadow: 0 0 20px 0 rgb(0 0 0 / 20%);\r\n    }\r\n    .tool {\r\n        display: flex;\r\n        text-align: center;\r\n        width: 100%;\r\n        color: rgba(255, 255, 255, 0.8);\r\n    }\r\n    .tool-item {\r\n        flex: 1;\r\n        height: 30px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        border-radius: 6px;\r\n    }\r\n    .control-box {\r\n        height: 40vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        padding-bottom: constant(safe-area-inset-bottom);\r\n        padding-bottom: env(safe-area-inset-bottom);\r\n    }\r\n    .control {\r\n        display: flex;\r\n        font-size: 40px;\r\n        text-align: center;\r\n        width: 100%;\r\n        color: rgba(255, 255, 255, 0.9);\r\n        align-items: center;\r\n        padding-bottom: constant(safe-area-inset-bottom);\r\n        padding-bottom: env(safe-area-inset-bottom);\r\n    }\r\n    .con-item {\r\n        margin-bottom: 20px;\r\n        flex: 1;\r\n        border-radius: 40px;\r\n        padding-bottom: constant(safe-area-inset-bottom);\r\n        padding-bottom: env(safe-area-inset-bottom);\r\n    }\r\n    .top-box {\r\n        height: 60vh;\r\n    }\r\n    .play-mask {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background-color: rgba(0, 0, 0, 0.01);\r\n        z-index: 100;\r\n    }\r\n    .cover {\r\n        height: 54vh;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .song-list-box {\r\n        scroll-behavior: smooth;\r\n        position: relative;\r\n        top: 0px;\r\n        max-height: 54vh;\r\n        overflow-x: auto;\r\n        transition: top 0.5s cubic-bezier(0.25, 1, 0.5, 1);\r\n        -webkit-transition: top 0.5s cubic-bezier(0.25, 1, 0.5, 1);\r\n    }\r\n    .heart-beat {\r\n        display: inline-block;\r\n        /* // 一个完整动画的持续时间 */\r\n        animation-duration: 1s;\r\n        /* // 动画循环次数：无限循环 */\r\n        animation-iteration-count: infinite;\r\n        /* // 调用的动画名，对应上面的 .heart-bounce */\r\n        animation-name: heart-bounce;\r\n    }\r\n    @keyframes heart-bounce {\r\n        from {\r\n            transform: scale(1);\r\n        }\r\n        12% {\r\n            transform: scale(1.02);\r\n        }\r\n        20% {\r\n            transform: scale(0.99);\r\n        }\r\n        28% {\r\n            transform: scale(0.98);\r\n        }\r\n        32% {\r\n            transform: scale(1.2);\r\n        }\r\n        38% {\r\n            transform: scale(0.96);\r\n        }\r\n        50% {\r\n            transform: scale(1);\r\n        }\r\n        58% {\r\n            transform: scale(0.98);\r\n        }\r\n        70% {\r\n            transform: scale(0.9);\r\n        }\r\n        80% {\r\n            transform: scale(0.98);\r\n        }\r\n        to {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { push } from 'svelte-stack-router';\r\n  import { PlayMiniLine } from 'svelte-remixicon';\r\n\r\n  import { playListIdStore } from '../store/playList';\r\n  import { isHomePageStore } from '../store/common';\r\n\r\n  import { tranNumber, Confirm, ripple } from '../utils/common';\r\n\r\n  export let coverImgUrl = '';\r\n  export let playCount = 0;\r\n  export let copywriter = '';\r\n  export let name = '';\r\n  export let id = 0;\r\n  export let trackCount = 0;\r\n\r\n  let coverDom;\r\n\r\n  onMount(() => {\r\n    if (coverDom) {\r\n      ripple(coverDom);\r\n    }\r\n  });\r\n\r\n  function goToDetail() {\r\n    playListIdStore.set(id);\r\n    isHomePageStore.set(false);\r\n    if (trackCount > 1000) {\r\n      Confirm('😅 此歌单有 ' + trackCount + ' 首歌曲，加载时间可能比较久，确定查看歌单详情吗？', async () => {\r\n        push('/playlistdetail');\r\n      });\r\n    } else {\r\n      push('/playlistdetail');\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"cover\" on:click={goToDetail} bind:this={coverDom}>\r\n  <div class=\"cover-img\">\r\n    <Lazy height={220}>\r\n      <img src={coverImgUrl.replace(/^http:/, 'https:') + '?param=600y600'} alt=\"\" />\r\n    </Lazy>\r\n  </div>\r\n  <div class=\"play-num\">\r\n    <span style=\"position: relative;top:1px\">\r\n      <PlayMiniLine />\r\n    </span>{tranNumber(playCount)}\r\n  </div>\r\n  <div class=\"name\">{name}</div>\r\n  {#if copywriter && copywriter !== null && copywriter !== ''}\r\n    <div class=\"copywriter\">{copywriter}</div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .play-num {\r\n    margin: 4px auto;\r\n    font-size: 12px;\r\n    color: rgb(146, 146, 146);\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n  .copywriter {\r\n    margin: 4px auto;\r\n    font-size: 12px;\r\n    color: rgb(146, 146, 146);\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n    height: 26px;\r\n  }\r\n  .cover {\r\n    width: 220px;\r\n  }\r\n  .cover-img {\r\n    width: 220px;\r\n    height: 220px;\r\n    overflow: hidden;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n  }\r\n  .name {\r\n    margin-top: 4px;\r\n    line-height: 18px;\r\n    width: 220px;\r\n    height: 36px;\r\n    font-size: 14px;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { push } from 'svelte-stack-router';\r\n  import { StarSFill } from 'svelte-remixicon';\r\n\r\n  import { isHomePageStore, currentDetailSongerIdStore } from '../store/common';\r\n\r\n  import { ripple } from '../utils/common';\r\n\r\n  export let songer = {};\r\n  export let coverSize = 200;\r\n  let useLoveSongerIds = JSON.parse(localStorage.getItem('useLoveSongerIds')) || [];\r\n  let songerDom;\r\n  onMount(() => {\r\n    if (songerDom) {\r\n      ripple(songerDom);\r\n    }\r\n  });\r\n  function toSongerPageFun() {\r\n    isHomePageStore.set(false);\r\n    currentDetailSongerIdStore.set(songer.id);\r\n    push('/songerDetail');\r\n  }\r\n</script>\r\n\r\n<div class=\"singer\" on:click={toSongerPageFun} bind:this={songerDom}>\r\n  {#if useLoveSongerIds.includes(songer.id)}\r\n    <div class=\"star\">\r\n      <StarSFill size=\"14\" style=\"vertical-align: middle\" />\r\n    </div>\r\n  {/if}\r\n  <div class=\"cover\">\r\n    <Lazy height={100}>\r\n      <img src={songer.img1v1Url.replace(/^http:/, 'https:') + '?param=' + coverSize + 'y' + coverSize} alt=\"\" />\r\n    </Lazy>\r\n  </div>\r\n  <div class=\"name\">{songer.name}</div>\r\n</div>\r\n\r\n<style>\r\n  .singer {\r\n    padding: 10px 0;\r\n    text-align: center;\r\n    position: relative;\r\n  }\r\n  .star {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    color: var(--primary-text-color);\r\n  }\r\n  .cover img {\r\n    border-radius: 100%;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .name {\r\n    margin-top: 6px;\r\n    font-size: 12px;\r\n    height: 26px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { HeartFill } from 'svelte-remixicon';\r\n\r\n  import { isLoginStore } from '../store/common';\r\n  import { userLikeSongIdsStore } from '../store/user';\r\n  import { currentSongStore, playStatusStore } from '../store/play';\r\n\r\n  import { ripple, songerListToStr, Toast } from '../utils/common';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function setSongClick(index) {\r\n    dispatch('songClick', { index });\r\n  }\r\n\r\n  export let song = {};\r\n  export let index = 0;\r\n  export let customCoverUrl = null;\r\n\r\n  let songDom;\r\n\r\n  onMount(() => {\r\n    if (songDom) {\r\n      ripple(songDom);\r\n    }\r\n  });\r\n</script>\r\n\r\n<div\r\n  class=\"song\"\r\n  on:click={() => {\r\n    if (song.id === $currentSongStore.id) {\r\n      window.audioDOM.play();\r\n      playStatusStore.set(true);\r\n      if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n    } else {\r\n      setSongClick(index);\r\n    }\r\n  }}\r\n  bind:this={songDom}\r\n>\r\n  <div class=\"love-span\">\r\n    {#if $isLoginStore && $userLikeSongIdsStore.includes(song.id)}\r\n      <HeartFill size=\"16\" style=\"vertical-align: middle\" />\r\n    {/if}\r\n  </div>\r\n  <div class=\"song-cover\">\r\n    <Lazy height={46}>\r\n      <img\r\n        class=\"img-song\"\r\n        src={customCoverUrl ? customCoverUrl : song.al.picUrl.replace(/^http:/, 'https:') + '?param=100y100'}\r\n        alt=\"\"\r\n      />\r\n    </Lazy>\r\n    {#if song.id === $currentSongStore.id && $playStatusStore}\r\n      <div class=\"song-play\">\r\n        <div class=\"pull_down pull_down1\" />\r\n        <div class=\"pull_down pull_down2\" />\r\n        <div class=\"pull_down pull_down3\" />\r\n        <div class=\"pull_down pull_down4\" />\r\n      </div>\r\n    {/if}\r\n    {#if song.id === $currentSongStore.id && !$playStatusStore}\r\n      <div class=\"song-no-play\">\r\n        <div class=\"no_pull_down\" />\r\n        <div class=\"no_pull_down\" />\r\n        <div class=\"no_pull_down\" />\r\n        <div class=\"no_pull_down\" />\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <div class=\"song-info\" style=\"max-width:{localStorage.getItem('fullWidth') - 72}px;\">\r\n    <div class=\"song-name\">\r\n      {song.name}\r\n      <span class=\"alia\">\r\n        {song.alia && song.alia.length > 0 ? `(${song.alia[0]})` : ''}\r\n      </span>\r\n    </div>\r\n    <div class=\"song-songer\">\r\n      {songerListToStr(song.ar)}\r\n      <span>{song.al.name === '' ? '' : `- ${song.al.name}`}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .song {\r\n    font-size: 14px;\r\n    text-align: center;\r\n    align-items: center;\r\n    padding: 14px auto;\r\n    display: flex;\r\n    height: 60px;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid rgba(197, 197, 197, 0.3);\r\n    box-sizing: border-box;\r\n  }\r\n  .love-span {\r\n    color: var(--primary-text-color);\r\n    line-height: 20px;\r\n    text-align: center;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n  .song-cover {\r\n    width: 46px;\r\n    height: 46px;\r\n    margin-right: 6px;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    background-color: #fff;\r\n    box-sizing: border-box;\r\n  }\r\n  .img-song {\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  .song-play {\r\n    position: relative;\r\n    width: 30px;\r\n    height: 30px;\r\n    top: -44px;\r\n    left: 4px;\r\n    z-index: 2;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding: 4px;\r\n  }\r\n  .song-play {\r\n    position: relative;\r\n    width: 30px;\r\n    height: 30px;\r\n    top: -44px;\r\n    left: 4px;\r\n    z-index: 2;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding: 4px;\r\n  }\r\n  .song-no-play {\r\n    position: relative;\r\n    width: 30px;\r\n    height: 30px;\r\n    top: -44px;\r\n    left: 4px;\r\n    z-index: 2;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    padding: 4px;\r\n  }\r\n  .no_pull_down {\r\n    flex: 1;\r\n    height: 6px;\r\n    margin: 0 1.2px;\r\n    background: #fff;\r\n    border-top: 1px solid var(--primary-text-color);\r\n  }\r\n  .pull_down {\r\n    flex: 1;\r\n    height: 30px;\r\n    margin: 0 1.2px;\r\n    background: #fff;\r\n    border-top: 1px solid var(--primary-text-color);\r\n  }\r\n  .pull_down1 {\r\n    -webkit-animation: jumpYa 0.8s infinite ease-in-out;\r\n    -o-animation: jumpYa 0.8s infinite ease-in-out;\r\n    animation: jumpYa 0.8s infinite ease-in-out;\r\n  }\r\n  .pull_down2 {\r\n    -webkit-animation: jumpYb 1.2s infinite ease-in-out;\r\n    -o-animation: jumpYb 1.2s infinite ease-in-out;\r\n    animation: jumpYb 1.2s infinite ease-in-out;\r\n  }\r\n  .pull_down3 {\r\n    -webkit-animation: jumpYc 1s infinite ease-in-out;\r\n    -o-animation: jumpYc 1s infinite ease-in-out;\r\n    animation: jumpYc 1s infinite ease-in-out;\r\n  }\r\n  .pull_down4 {\r\n    -webkit-animation: jumpYd 1.1s infinite ease-in-out;\r\n    -o-animation: jumpYd 1.1s infinite ease-in-out;\r\n    animation: jumpYd 1.1s infinite ease-in-out;\r\n  }\r\n  @keyframes jumpYa {\r\n    0% {\r\n      height: 20px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 20px;\r\n    }\r\n  }\r\n  @keyframes jumpYb {\r\n    0% {\r\n      height: 24px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 24px;\r\n    }\r\n  }\r\n  @keyframes jumpYc {\r\n    0% {\r\n      height: 30px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 30px;\r\n    }\r\n  }\r\n  @keyframes jumpYd {\r\n    0% {\r\n      height: 30px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 30px;\r\n    }\r\n  }\r\n  .song-info {\r\n    padding-top: 4px;\r\n    text-align: left;\r\n    flex: auto;\r\n  }\r\n  .song-name {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    font-size: 18px;\r\n  }\r\n  .song-songer {\r\n    margin-top: 6px;\r\n    margin-bottom: 6px;\r\n    color: rgb(185, 185, 185);\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher, onMount, afterUpdate } from 'svelte';\r\n\r\n  import { ripple } from '../utils/common';\r\n\r\n  export let title = '首页';\r\n  export let desc = '暂无描述';\r\n  export let isRefresh = false; //是否刷新中\r\n  export let topTitleRightList = {};\r\n  const dispatch = createEventDispatcher();\r\n  function setClick(index) {\r\n    dispatch('IconClick', {\r\n      index,\r\n    });\r\n  }\r\n\r\n  let rightDoms;\r\n\r\n  onMount(() => {\r\n    if (rightDoms) {\r\n      ripple(rightDoms);\r\n    }\r\n    return () => {\r\n      rightDoms = null;\r\n    };\r\n  });\r\n  afterUpdate(() => {\r\n    if (rightDoms) {\r\n      ripple(rightDoms);\r\n    }\r\n  });\r\n</script>\r\n\r\n<div class=\"top-title\">\r\n  <div class=\"title\">\r\n    <h1>{title}<span class=\"desc\">&nbsp;&nbsp;&nbsp;{desc}</span></h1>\r\n  </div>\r\n  {#if topTitleRightList}\r\n    <div class=\"right\" bind:this={rightDoms}>\r\n      {#if topTitleRightList.type === 'icon'}\r\n        <span class:rotate-icon={isRefresh} on:click={() => setClick(0)}>\r\n          <svelte:component this={topTitleRightList.path} size=\"24\" />\r\n        </span>\r\n      {:else}\r\n        <span class=\"right-text\" on:click={() => setClick(0)}>{topTitleRightList.text}</span>\r\n      {/if}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .rotate-icon {\r\n    display: inline-block;\r\n    -webkit-animation: myRotate 2s linear infinite;\r\n    animation: myRotate 2s linear infinite;\r\n  }\r\n  @keyframes myRotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    50% {\r\n      transform: rotate(180deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  .top-title {\r\n    background-image: linear-gradient(#fff, #f4f4f4);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n  }\r\n  .right-text {\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n  }\r\n  .right {\r\n    font-size: 32px;\r\n    line-height: 36px;\r\n  }\r\n  h1 {\r\n    text-align: left;\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    margin: 0px;\r\n  }\r\n  .desc {\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  import { ripple } from '../../utils/common';\r\n\r\n  export let type = 'default'; //primary\r\n  const dispatch = createEventDispatcher();\r\n  function setClick() {\r\n    dispatch('BtnClick');\r\n  }\r\n\r\n  let btnDom;\r\n\r\n  onMount(() => {\r\n    if (btnDom) {\r\n      ripple(btnDom);\r\n    }\r\n  });\r\n</script>\r\n\r\n<button\r\n  on:click={setClick}\r\n  class=\"botton\"\r\n  class:default={type === 'default'}\r\n  class:primary={type === 'primary'}\r\n  bind:this={btnDom}\r\n>\r\n  <slot />\r\n</button>\r\n\r\n<style>\r\n  .botton {\r\n    text-align: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: auto;\r\n    height: 46px;\r\n    line-height: 46px;\r\n    background: var(--primary-text-color);\r\n    color: #fff;\r\n    border-radius: 6px;\r\n    border: none;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n  .default {\r\n    background: var(--secondary-background-color);\r\n    color: var(--primary-text-color);\r\n  }\r\n  .primary {\r\n    background: var(--primary-text-color);\r\n    color: #fff;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher, onMount } from 'svelte';\r\n  import { ArrowRightSLine } from 'svelte-remixicon';\r\n  import { ripple } from '../../utils/common';\r\n\r\n  import Switch from './Switch.svelte';\r\n\r\n  let cellDom;\r\n  export let title = '标题';\r\n  export let titleDesc = '';\r\n  export let arrow = false;\r\n  export let desc = '';\r\n  export let cellCheck = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  onMount(() => {\r\n    if (cellDom) {\r\n      ripple(cellDom);\r\n    }\r\n  });\r\n  function cellClick() {\r\n    if (desc === 'Switch') {\r\n      cellCheck = !cellCheck;\r\n      dispatch('cellClick', {\r\n        cellCheck,\r\n      });\r\n    } else {\r\n      dispatch('cellClick');\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"cell\" on:click={cellClick} bind:this={cellDom}>\r\n  <div class=\"title\">\r\n    <div class=\"title-main\">{title}</div>\r\n    {#if titleDesc != ''}\r\n      <div class=\"title-des\">{titleDesc}</div>\r\n    {/if}\r\n  </div>\r\n  <div class=\"desc\">\r\n    <div class=\"desc-title\">\r\n      {#if desc === 'Switch'}\r\n        <div class=\"switch\" style=\"margin-top: {titleDesc === '' ? '2px' : '8.5px'};\">\r\n          <Switch check={cellCheck} />\r\n        </div>\r\n      {:else}\r\n        {desc}\r\n      {/if}\r\n    </div>\r\n  </div>\r\n  {#if arrow}\r\n    <div class=\"arrow\" style=\"line-height: {titleDesc === '' ? '26px' : '39px'};\">\r\n      <span style=\"position: relative; top: -1px;\">\r\n        <ArrowRightSLine size=\"20\" style=\"vertical-align: middle;\" />\r\n      </span>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .cell {\r\n    background-color: #fff;\r\n    font-size: 16px;\r\n    padding: 13px 10px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    margin: 10px auto;\r\n  }\r\n  .title {\r\n    flex: auto;\r\n  }\r\n  .title-main {\r\n    height: 26px;\r\n    line-height: 26px;\r\n  }\r\n  .title-des {\r\n    font-size: 10px;\r\n    color: #999;\r\n  }\r\n  .desc {\r\n    height: 26px;\r\n    flex: auto;\r\n    display: table;\r\n  }\r\n  .desc-title {\r\n    vertical-align: middle;\r\n    display: table-cell;\r\n    text-align: right;\r\n    color: #666;\r\n    margin: 2px auto;\r\n  }\r\n  .switch {\r\n    margin-top: 2px;\r\n    height: 22px;\r\n  }\r\n  .arrow {\r\n    height: 26px;\r\n    line-height: 26px;\r\n    width: 20px;\r\n  }\r\n</style>\r\n",
    "<div class=\"diveder\" />\r\n\r\n<style>\r\n  .diveder {\r\n    margin: 5px auto;\r\n    height: 1px;\r\n    background-color: rgba(197, 197, 197, 0.3);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n\r\n  export let label = 'label';\r\n  export let type = 'text';\r\n  export let maxlength = 15;\r\n  export let placeholder = null;\r\n  export let value = '';\r\n  export let rightBtn = false;\r\n  export let btnText = '获取验证码';\r\n  $: defatltPlaceholder = '请输入' + label;\r\n  let inputDom;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  onMount(() => {\r\n    setTimeout(function () {\r\n      inputDom.scrollIntoView(true);\r\n      inputDom.scrollIntoViewIfNeeded();\r\n    }, 300);\r\n    inputDom.type = type;\r\n  });\r\n  function setInput() {\r\n    dispatch('setInput', {\r\n      value,\r\n    });\r\n  }\r\n  function btnClick() {\r\n    dispatch('setBtn');\r\n  }\r\n</script>\r\n\r\n<div class=\"box\">\r\n  <div class=\"label\">{label}</div>\r\n  <input\r\n    bind:value\r\n    bind:this={inputDom}\r\n    {maxlength}\r\n    on:input={setInput}\r\n    placeholder={placeholder ? placeholder : defatltPlaceholder}\r\n    style=\"width:{rightBtn ? '75%' : '100%'}\"\r\n  />\r\n  {#if rightBtn}\r\n    <span class=\"right-btn\" on:click={btnClick}>{btnText}</span>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .right-btn {\r\n    font-size: 10px;\r\n    border-radius: 4px;\r\n    border: 1px solid rgb(182, 182, 182);\r\n    line-height: 24px;\r\n    padding: 0 4px;\r\n    float: right;\r\n  }\r\n  .box {\r\n    width: 80%;\r\n    margin: auto;\r\n    padding: 14px;\r\n    overflow: hidden;\r\n  }\r\n  .label {\r\n    font-size: 14px;\r\n    margin-bottom: 6px;\r\n    color: rgb(139, 139, 139);\r\n  }\r\n  input {\r\n    padding: 0;\r\n    box-shadow: none;\r\n    outline: none;\r\n    -webkit-appearance: none;\r\n    border-radius: 0;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    border-top: none;\r\n    border-left: none;\r\n    border-right: none;\r\n    width: 100%;\r\n    background: none;\r\n    border-bottom: 1px solid var(--secondary-dark-text-color);\r\n  }\r\n  input::-webkit-input-placeholder {\r\n    font-size: 16px;\r\n  }\r\n  input:focus {\r\n    box-shadow: none;\r\n    outline: none;\r\n    -webkit-appearance: none;\r\n    border-radius: 0;\r\n    border-bottom: 1px solid var(--primary-text-color);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { pop } from 'svelte-stack-router';\r\n  import { createEventDispatcher, onMount, afterUpdate } from 'svelte';\r\n  import { ArrowLeftLine } from 'svelte-remixicon';\r\n\r\n  import { ripple } from '../../utils/common';\r\n\r\n  export let title = 'Title';\r\n  export let leftEvent = false;\r\n  export let transparent = false;\r\n  export let fixed = true;\r\n  export let alphaNumber = 1;\r\n  export let dark = false;\r\n  export let rightIcons = [];\r\n  export let isRefresh = false; //是否刷新中\r\n\r\n  let leftDom;\r\n  let rightDoms;\r\n\r\n  onMount(() => {\r\n    if (leftDom) ripple(leftDom);\r\n    if (rightDoms) {\r\n      ripple(rightDoms);\r\n    }\r\n    return () => {\r\n      rightDoms = null;\r\n    };\r\n  });\r\n\r\n  afterUpdate(() => {\r\n    if (rightDoms) {\r\n      ripple(rightDoms, true);\r\n    }\r\n  });\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function setLeftClick() {\r\n    dispatch('setLeftClick');\r\n  }\r\n  function iconClick(id) {\r\n    dispatch('setRightIconClick', { id });\r\n  }\r\n</script>\r\n\r\n<div\r\n  class=\"nav secondary\"\r\n  style=\"background-color:rgba(255, 255, 255, {transparent ? alphaNumber : 1})\"\r\n  class:transparent\r\n  class:fixed={transparent ? true : fixed}\r\n>\r\n  <div\r\n    bind:this={leftDom}\r\n    class=\"left\"\r\n    style=\"color:rgba({transparent ? 255 * (1 - alphaNumber) : 0}, {transparent\r\n      ? 255 * (1 - alphaNumber)\r\n      : 0}, {transparent ? 255 * (1 - alphaNumber) : 0}, 1)\"\r\n    class:transparent\r\n    on:click={() => {\r\n      if (leftEvent) {\r\n        setLeftClick();\r\n      } else {\r\n        pop();\r\n      }\r\n    }}\r\n  >\r\n    <ArrowLeftLine size=\"22\" style=\"vertical-align: middle\" />\r\n  </div>\r\n  <div\r\n    class=\"center\"\r\n    class:dark\r\n    style=\"color:rgba({transparent ? 255 * (1 - alphaNumber) : 0}, {transparent\r\n      ? 255 * (1 - alphaNumber)\r\n      : 0}, {transparent ? 255 * (1 - alphaNumber) : 0}, 1)\"\r\n  >\r\n    {title}\r\n  </div>\r\n  <div class=\"right\" bind:this={rightDoms}>\r\n    {#if rightIcons.length > 0}\r\n      {#each rightIcons as rightIcon}\r\n        <div class=\"right-item\" on:click={() => iconClick(rightIcon.id)}>\r\n          <span class:rotate-icon={rightIcon.id === 'RefreshLine' && isRefresh}>\r\n            <svelte:component this={rightIcon.icon} size=\"22\" style=\"vertical-align: middle\" />\r\n          </span>\r\n        </div>\r\n      {/each}\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .rotate-icon {\r\n    display: inline-block;\r\n    -webkit-animation: myRotate 2s linear infinite;\r\n    animation: myRotate 2s linear infinite;\r\n  }\r\n  @keyframes myRotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    50% {\r\n      transform: rotate(180deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  .dark {\r\n    color: #fff;\r\n  }\r\n  .transparent {\r\n    background-color: transparent;\r\n  }\r\n  .fixed {\r\n    position: fixed;\r\n    top: 0;\r\n  }\r\n  .nav {\r\n    width: 100%;\r\n    text-align: center;\r\n    align-items: center;\r\n    display: flex;\r\n    height: 50px;\r\n    font-size: 16px;\r\n    line-height: 50px;\r\n    z-index: 99;\r\n    background-color: #fff;\r\n  }\r\n  .left {\r\n    height: 50px;\r\n    line-height: 50px;\r\n    flex: 1;\r\n  }\r\n  .center {\r\n    line-height: 50px;\r\n    text-align: left;\r\n    flex: 5;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n  .right {\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .right-item {\r\n    flex: 1;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    padding: 0 10px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let bottomHeight = 0; //距离底部的距离临界值开始刷新\r\n  export let items = [];\r\n  export let paginationHeight = 0;\r\n  export let hasMore = true;\r\n  export let grid = 1;\r\n  let paginationDom;\r\n  let paginationBoxDom;\r\n\r\n  // 加载更多触发器 默认隐藏\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // 加载更多触发器 事件\r\n  let loadData = function () {\r\n    if (!items || items.length == 0) return;\r\n    // 变量scrollTop是滚动条滚动时，滚动条上端距离顶部的距离\r\n    const scrollTop = paginationBoxDom.scrollTop;\r\n    //变量windowHeight是可视区的高度\r\n    const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;\r\n    //变量scrollHeight是滚动条的总高度（当前可滚动的页面的总高度）\r\n    const scrollHeight = paginationDom.scrollHeight;\r\n    // 滚动条到底部;\r\n    if (scrollTop + windowHeight + bottomHeight >= scrollHeight) {\r\n      dispatch('load');\r\n    }\r\n  };\r\n  //防抖\r\n  function debounce(fn, delay) {\r\n    let timer = null;\r\n    return function () {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        //模拟触发change事件\r\n        fn.apply(this, arguments);\r\n        // 清空计时器\r\n        timer = null;\r\n      }, delay);\r\n    };\r\n  }\r\n  // 节流\r\n  function throttle(fn, delay = 50) {\r\n    let timer = null;\r\n    return function () {\r\n      if (timer) {\r\n        return;\r\n      }\r\n      timer = setTimeout(() => {\r\n        fn.apply(this, arguments);\r\n        timer = null;\r\n      }, delay);\r\n    };\r\n  }\r\n</script>\r\n\r\n<!-- 加载更多触发器 - end -->\r\n<div\r\n  class=\"pagination-box\"\r\n  style=\"height:{paginationHeight}px\"\r\n  on:scroll={throttle(debounce(loadData, 500))}\r\n  bind:this={paginationBoxDom}\r\n>\r\n  <div bind:this={paginationDom}>\r\n    {#if items.length > 0}\r\n      {#if grid > 1}\r\n        <div class=\"grid-box\" style=\"grid-template-columns: repeat({grid}, {300 / grid}px);\">\r\n          {#each items as item, index}\r\n            <slot {item} {index} />\r\n          {/each}\r\n        </div>\r\n      {:else}\r\n        {#each items as item, index}\r\n          <slot {item} {index} />\r\n        {/each}\r\n      {/if}\r\n    {/if}\r\n  </div>\r\n  {#if hasMore}\r\n    <div class=\"no-more\">\r\n      <div>\r\n        <embed width=\"40\" height=\"40\" src=\"/images/Ripple.svg\" type=\"image/svg+xml\" />\r\n      </div>\r\n      <span class=\"no-more-text\">😤 别急啊，在加载了...</span>\r\n    </div>\r\n  {:else}\r\n    <div class=\"no-more no-more-text\">😤 别滑了，到底啦！</div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .pagination-box {\r\n    overflow-y: auto;\r\n    padding-top: 10px;\r\n  }\r\n  .pagination-box:global(::-webkit-scrollbar) {\r\n    width: 0 !important;\r\n  }\r\n  .no-more {\r\n    margin: 20px;\r\n    text-align: center;\r\n  }\r\n  .no-more-text {\r\n    color: #888;\r\n  }\r\n  .grid-box {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(1, 300px);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  import Divider from \"./Divider.svelte\";\r\n\r\n  export let list = [];\r\n  export let title = \"请选择\";\r\n  export let isShow = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function liClickFun(index, item) {\r\n    dispatch(\"PickerClick\", {\r\n      index,\r\n      item,\r\n    });\r\n  }\r\n  function changeShowFun() {\r\n    isShow = false;\r\n    dispatch(\"ChangeShow\", {\r\n      isShow,\r\n    });\r\n  }\r\n</script>\r\n\r\n<div class=\"pick-mask\" on:click={changeShowFun} style=\"display: {isShow ? 'block' : 'none'};\">\r\n  <div class=\"pick\" style=\"bottom:{isShow ? '0px' : '-350px'}\">\r\n    <div class=\"btn\">\r\n      <!-- <div class=\"btn-item btn-left\">取消</div> -->\r\n      <div class=\"btn-item btn-center\">{title}</div>\r\n      <!-- <div class=\"btn-item btn-right\">确定</div> -->\r\n    </div>\r\n    <Divider />\r\n    <div class=\"roller\">\r\n      {#each list as l, i}\r\n        <div class=\"li\" on:click={() => liClickFun(i, l)}>{l.name}</div>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .pick-mask {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2000;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  .pick {\r\n    font-size: 16px;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    z-index: 2001;\r\n    background-color: #fff;\r\n    max-height: 250px;\r\n    width: 100%;\r\n    padding-bottom: 20px;\r\n  }\r\n  .btn {\r\n    height: 39px;\r\n    line-height: 39px;\r\n    display: flex;\r\n  }\r\n  .btn-item {\r\n    flex: 1;\r\n    padding: 10px;\r\n    color: var(--primary-text-color);\r\n  }\r\n  .btn-center {\r\n    text-align: center;\r\n    color: #777;\r\n  }\r\n\r\n  .roller {\r\n    overflow-y: scroll;\r\n    max-height: 200px;\r\n    width: 100%;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  .li {\r\n    background-color: #eeeeee;\r\n    line-height: 24px;\r\n    font-size: 12px;\r\n    margin: 4px 8px 4px 0;\r\n    padding: 4px 8px;\r\n    border-radius: 4px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\r\n\r\n  export let min = 0;\r\n  export let max = 100;\r\n  export let step = 1;\r\n  export let current = 0;\r\n  export let timeCurrent = 0;\r\n  let currentLong = 0;\r\n  let slider;\r\n  let scale = 0;\r\n  let movePoint = 20;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  onMount(() => {\r\n    scale = slider.clientWidth / (max / step);\r\n  });\r\n  afterUpdate(() => {\r\n    currentLong = current;\r\n  });\r\n  function setCurrent() {\r\n    dispatch('setCurrent', {\r\n      current,\r\n    });\r\n  }\r\n  function setTimeCurrent() {\r\n    dispatch('setTimeCurrent', {\r\n      timeCurrent,\r\n    });\r\n  }\r\n  function handleClick(e) {\r\n    const distance = e.clientX - slider.getBoundingClientRect().left;\r\n    const value = Math.round(distance / scale) * step;\r\n    current = currentLong = value;\r\n    setCurrent();\r\n  }\r\n  function touchStart(e) {\r\n    movePoint = e.changedTouches[0].clientX;\r\n  }\r\n  function touchEnd(e) {\r\n    movePoint = e.changedTouches[0].clientX;\r\n    if (movePoint <= 20) {\r\n      current = timeCurrent = currentLong = min;\r\n    } else if (movePoint >= 355) {\r\n      current = timeCurrent = currentLong = max;\r\n    } else {\r\n      current = timeCurrent = currentLong = ((movePoint - 20) / 335) * 100;\r\n    }\r\n    setCurrent();\r\n    setTimeCurrent();\r\n  }\r\n  function touchMove(e) {\r\n    movePoint = e.changedTouches[0].clientX;\r\n    if (movePoint <= 20) {\r\n      timeCurrent = currentLong = min;\r\n    } else if (movePoint >= 355) {\r\n      timeCurrent = currentLong = max;\r\n    } else {\r\n      timeCurrent = currentLong = ((movePoint - 20) / 335) * 100;\r\n    }\r\n    setTimeCurrent();\r\n  }\r\n</script>\r\n\r\n<div\r\n  bind:this={slider}\r\n  class=\"slider\"\r\n  on:click={handleClick}\r\n  on:touchstart={touchStart}\r\n  on:touchmove={touchMove}\r\n  on:touchend={touchEnd}\r\n>\r\n  <div class=\"rail\">\r\n    <div class=\"ball\" style=\"left:calc({(currentLong / max) * 100}% - 7px)\" />\r\n    <div class=\"fill\" style=\"transform:scaleX({currentLong / max})\" />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .slider {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .rail {\r\n    width: 100%;\r\n    height: 4px;\r\n    overflow: hidden;\r\n    border-radius: 2px;\r\n    background: rgba(255, 255, 255, 0.4);\r\n  }\r\n  .fill {\r\n    width: 100%;\r\n    height: 4px;\r\n    border-radius: 2px;\r\n    background: #fff;\r\n    transform: scaleX(0);\r\n    transform-origin: left;\r\n    transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n    -webkit-transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\r\n  }\r\n  .ball {\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 10px;\r\n    background: #fff;\r\n    position: absolute;\r\n    top: calc(50% - 7px);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import { CheckboxBlankCircleLine, RadioButtonLine } from \"svelte-remixicon\";\r\n\r\n  export let radioData = [];\r\n  export let active = 0;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  function selectFun(index) {\r\n    active = index;\r\n    dispatch(\"RadioClick\", { active });\r\n  }\r\n</script>\r\n\r\n<div class=\"box\">\r\n  {#each radioData as item, i}\r\n    <div class=\"item\" on:click={() => selectFun(i)}>\r\n      <div class=\"left\">\r\n        {#if active === i}\r\n          <RadioButtonLine size=\"20\" color=\"var(--primary-text-color)\" style=\"vertical-align: middle;\" />\r\n        {:else}\r\n          <CheckboxBlankCircleLine size=\"20\" color=\"rgb(214, 214, 214)\" style=\"vertical-align: middle;\" />\r\n        {/if}\r\n      </div>\r\n      <div class=\"text\">\r\n        {item.text}\r\n        <div class=\"desc\">{item.desc}</div>\r\n      </div>\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .box {\r\n    background-color: #fff;\r\n    font-size: 16px;\r\n    border-radius: 8px;\r\n    padding: 20px 10px 1px;\r\n    margin: 20px auto;\r\n  }\r\n  .item {\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n  }\r\n  .left {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 10px;\r\n  }\r\n  .text {\r\n    line-height: 20px;\r\n  }\r\n  .desc {\r\n    font-size: 10px;\r\n    color: #b8b8b8;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let check = false;\r\n  const dispatch = createEventDispatcher();\r\n  function setChange() {\r\n    dispatch('switchClick', {\r\n      check: !check,\r\n    });\r\n  }\r\n</script>\r\n\r\n<div\r\n  class=\"box\"\r\n  on:click={setChange}\r\n  style=\"background-color:{check ? 'var(--primary-text-color)' : 'rgb(177, 177, 177)'}\"\r\n>\r\n  <div class=\"ball\" style=\"left: {check ? '25px' : '1px'};\" />\r\n</div>\r\n\r\n<style>\r\n  .box {\r\n    display: inline-block;\r\n    width: 46px;\r\n    height: 22px;\r\n    background-color: rgb(177, 177, 177);\r\n    position: relative;\r\n    border-radius: 11px;\r\n    transition: all 0.3s ease;\r\n    -webkit-transition: all 0.3s ease;\r\n  }\r\n  .ball {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 10px;\r\n    background-color: #fff;\r\n    position: absolute;\r\n    top: 1px;\r\n    left: 1px;\r\n    transition: all 0.3s ease;\r\n    -webkit-transition: all 0.3s ease;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, afterUpdate } from 'svelte';\r\n  import { ThumbUpFill, Compass3Fill, AccountCircleFill } from 'svelte-remixicon';\r\n\r\n  import { isHomePageStore, homeActiveStore } from '../../store/common';\r\n  import { ripple } from '../../utils/common';\r\n\r\n  let navDatas = [\r\n    {\r\n      icon: ThumbUpFill,\r\n      text: '推荐',\r\n      path: '/love',\r\n    },\r\n    {\r\n      icon: Compass3Fill,\r\n      text: '发现',\r\n      path: '/discover',\r\n    },\r\n    {\r\n      icon: AccountCircleFill,\r\n      text: '我',\r\n      path: '/mine',\r\n    },\r\n  ];\r\n  let tabDoms = [];\r\n  onMount(() => {\r\n    if (tabDoms.length > 0) {\r\n      for (let r = 0; r < tabDoms.length; r++) {\r\n        ripple(tabDoms[r]);\r\n      }\r\n    }\r\n  });\r\n</script>\r\n\r\n<div class=\"secondary nav\" style=\"bottom: {$isHomePageStore ? '0px' : 'calc(-55px - env(safe-area-inset-bottom))'};\">\r\n  {#each navDatas as navData, i}\r\n    <div\r\n      class=\"nav-item\"\r\n      class:active={$homeActiveStore === i}\r\n      on:click={() => {\r\n        homeActiveStore.set(i);\r\n      }}\r\n      bind:this={tabDoms[i]}\r\n    >\r\n      <div>\r\n        <svelte:component this={navData.icon} size=\"24px\" />\r\n      </div>\r\n      <div class=\"nav-text\">{navData.text}</div>\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .nav {\r\n    z-index: 599;\r\n    border-top: 1px solid rgba(197, 197, 197, 0.4);\r\n    width: 100%;\r\n    height: 55px;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    display: flex;\r\n    text-align: center;\r\n    padding-bottom: constant(safe-area-inset-bottom);\r\n    padding-bottom: env(safe-area-inset-bottom);\r\n    transition: all 0.4s ease-in-out;\r\n    -webkit-transition: all 0.4s ease-in-out;\r\n  }\r\n  .nav-item {\r\n    display: block;\r\n    font-size: 12.8px;\r\n    padding: 6.4px 0 9.6px;\r\n    flex: 1;\r\n  }\r\n  .nav-text {\r\n    margin-top: 3.2px;\r\n  }\r\n  .active {\r\n    color: var(--primary-text-color);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  export let tipTextList = \"\";\r\n</script>\r\n\r\n<div>\r\n  {#each tipTextList as tipText}\r\n    <div class=\"tip\">{tipText}</div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .tip {\r\n    font-size: 12px;\r\n    color: rgb(141, 141, 141);\r\n    text-align: justify;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher, onMount, afterUpdate } from 'svelte';\r\n  import { ArrowRightSLine } from 'svelte-remixicon';\r\n\r\n  import { ripple } from '../../utils/common';\r\n\r\n  export let title = 'Title';\r\n  export let isShowRight = false;\r\n  export let iconText = '更多';\r\n  let titleDom;\r\n  const dispatch = createEventDispatcher();\r\n  function setTitleClick() {\r\n    dispatch('TitleClick');\r\n  }\r\n\r\n  onMount(() => {\r\n    if (titleDom) ripple(titleDom);\r\n  });\r\n</script>\r\n\r\n<div class=\"title\" on:click={setTitleClick} bind:this={titleDom}>\r\n  <div>{title}</div>\r\n  {#if isShowRight}\r\n    <div class=\"title-right\">\r\n      {iconText}\r\n      <span class=\"title-icon\">\r\n        <ArrowRightSLine size=\"24\" style=\"vertical-align: middle;\" />\r\n      </span>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .title-right {\r\n    line-height: 24px;\r\n    border-radius: 10px;\r\n    font-size: 14px;\r\n    color: #666;\r\n    height: 24px;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n  }\r\n  .title {\r\n    text-align: left;\r\n    margin-left: 20px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .title-icon {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import md from '../../README.md';\r\n  import { NavBar } from '../components/base';\r\n</script>\r\n\r\n<NavBar title=\"关于\" />\r\n<div class=\"about\">\r\n  <div id=\"markdown\">{@html md}</div>\r\n</div>\r\n\r\n<style>\r\n  .about {\r\n    padding: 50px 0px 70px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { onResume } from \"svelte-stack-router\";\r\n\r\n  import Songer from \"../components/Singer.svelte\";\r\n  import { NavBar } from \"../components/base\";\r\n\r\n  import { defaultResumableStore } from \"../store/common\";\r\n\r\n  import { likedArtists } from \"../api/user\";\r\n\r\n  $: collectSongers = [];\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      likedArtistsFun();\r\n    }\r\n  });\r\n  onMount(() => {\r\n    likedArtistsFun();\r\n  });\r\n  //获取收藏的歌手\r\n  async function likedArtistsFun() {\r\n    const res = await likedArtists({ limit: 2000 });\r\n    if (res.code === 200) {\r\n      collectSongers = res.data;\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title=\"收藏的歌手\" />\r\n<div class=\"page\">\r\n  {#if collectSongers.length > 0}\r\n    <div class=\"songer-box\">\r\n      {#each collectSongers as songer}\r\n        <Songer {songer} coverSize={200} />\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .songer-box {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(4, 75px);\r\n    padding: 0 20px;\r\n  }\r\n  .page {\r\n    font-size: 16px;\r\n    padding: 50px 0px 70px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { NavBar, Radio, Tip } from \"../components/base\";\r\n\r\n  import { musicQualityStore } from \"../store/common\";\r\n\r\n  let radioData = [\r\n    { text: \"普通\", desc: \"128K\" },\r\n    { text: \"较高\", desc: \"192K\" },\r\n    { text: \"极高\", desc: \"320K\" },\r\n    { text: \"无损\", desc: \"FLAC\" },\r\n  ];\r\n  let tipTextList = [\r\n    \"提示：\",\r\n    \"1、音质越高相对应所需流量也越高。FLAC 格式对网络要求较高，一首歌曲文件几十 M 甚至超过 100M。\",\r\n    \"2、一般来说，达到较高音质（192K）非专业设备就已经听不出差距了，如果用的是普通蓝牙耳机，那就更没必要开启高音质了。\",\r\n    \"3、若当前账号无法播放高音质，或音乐资源无当前音质，将自动匹配下一级别音质。\",\r\n    \"4、所选音质将在下一次切换歌曲生效。\",\r\n  ];\r\n  let active = Number($musicQualityStore);\r\n\r\n  function getActiveFun(e) {\r\n    musicQualityStore.set(e.detail.active.toString());\r\n    localStorage.setItem(\"musicQuality\", e.detail.active.toString());\r\n  }\r\n</script>\r\n\r\n<NavBar title=\"播放音质\" />\r\n<div class=\"br-page\">\r\n  <Radio {radioData} on:RadioClick={getActiveFun} {active} />\r\n  <Tip {tipTextList} />\r\n</div>\r\n\r\n<style>\r\n  .br-page {\r\n    padding: 50px 20px 70px;\r\n    font-size: 16px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { push } from 'svelte-stack-router';\r\n  import { SearchLine } from 'svelte-remixicon';\r\n\r\n  import { Title, Button } from '../components/base';\r\n  import TopTitle from '../components/TopTitle.svelte';\r\n  import ListGrid from '../components/ListGrid.svelte';\r\n  import Songer from '../components/Singer.svelte';\r\n\r\n  import { isHomePageStore, isLoginStore } from '../store/common';\r\n\r\n  import {\r\n    topPlaylist,\r\n    toplists,\r\n    highQualityPlaylist,\r\n    playlistCatlist,\r\n    playlistHotCatlist,\r\n    highQualityCat,\r\n  } from '../api/playlist';\r\n  import { topArtists } from '../api/songer';\r\n\r\n  let topPlayList = [];\r\n  let highquality = [];\r\n  let offList = [];\r\n  let topOrderList = [];\r\n  let topTitleRightList = {\r\n    type: 'icon',\r\n    path: SearchLine,\r\n  };\r\n  $: allList = [];\r\n  $: active1 = 0;\r\n  $: tab2list = [];\r\n  $: active2 = 0;\r\n  $: categories = {};\r\n  $: HotCatlist = [];\r\n  $: hotSongers = [];\r\n  $: cat = '';\r\n  $: heigcat = '';\r\n  $: heigtab2list = ['默认'];\r\n  $: heigActive = 0;\r\n\r\n  onMount(() => {\r\n    allMount();\r\n  });\r\n  function allMount() {\r\n    playlistHotCatlistFun();\r\n    highQualityCatFun();\r\n    offPlaylistFun();\r\n    toplistsFun();\r\n    topArtistsFun();\r\n  }\r\n  //获取热门歌单分类\r\n  async function playlistHotCatlistFun() {\r\n    const res = await playlistHotCatlist();\r\n    if (res.code === 200) {\r\n      HotCatlist = res.tags;\r\n      HotCatlist.unshift({ name: '默认', category: 0 });\r\n      playlistCatlistFun();\r\n    }\r\n  }\r\n  //获取精品歌单分类\r\n  async function highQualityCatFun() {\r\n    const res = await highQualityCat();\r\n    if (res.code === 200) {\r\n      for (let r = 0; r < res.tags.length; r++) {\r\n        heigtab2list.push(res.tags[r].name);\r\n      }\r\n      heigcat = heigtab2list[0];\r\n      highQualityPlaylistFun(heigcat);\r\n    }\r\n  }\r\n  //获取歌单分类\r\n  async function playlistCatlistFun() {\r\n    const res = await playlistCatlist();\r\n    if (res.code === 200) {\r\n      categories = res.categories;\r\n      categories['5'] = '热门';\r\n      allList = dealWithData(res.sub);\r\n      allList.unshift({ category: 5, allData: HotCatlist });\r\n      active1 = allList[0].category;\r\n      tab2list = allList.filter(item => item.category === active1)[0].allData;\r\n      active2 = 0;\r\n      cat = tab2list[0].name;\r\n      topPlaylistFun(tab2list[0].name);\r\n    }\r\n  }\r\n  //热门歌单\r\n  async function topPlaylistFun(cat) {\r\n    const res = await topPlaylist({ limit: 6, cat: cat === '默认' ? '全部' : cat });\r\n    if (res.code === 200) {\r\n      topPlayList = res.playlists;\r\n    }\r\n  }\r\n  //精品歌单\r\n  async function highQualityPlaylistFun(cat) {\r\n    const res = await highQualityPlaylist({ limit: 6, cat: cat === '默认' ? '全部' : cat });\r\n    if (res.code === 200) {\r\n      highquality = res.playlists;\r\n    }\r\n  }\r\n  //官方歌单\r\n  async function offPlaylistFun() {\r\n    const res = await topPlaylist({ limit: 6, cat: '官方' });\r\n    if (res.code === 200) {\r\n      offList = res.playlists;\r\n    }\r\n  }\r\n  //排行榜\r\n  async function toplistsFun() {\r\n    const res = await toplists();\r\n    if (res.code === 200) {\r\n      topOrderList = res.list;\r\n    }\r\n  }\r\n  //热门歌手\r\n  async function topArtistsFun() {\r\n    const res = await topArtists(9);\r\n    if (res.code === 200) {\r\n      hotSongers = res.artists;\r\n    }\r\n  }\r\n  // 查看全部热门歌手\r\n  function hotSongersFun() {\r\n    isHomePageStore.set(false);\r\n    push('/moreSonger');\r\n  }\r\n  function topClickFun(event) {\r\n    if (event.detail.index === 0) {\r\n      isHomePageStore.set(false);\r\n      push('/search');\r\n    }\r\n  }\r\n  function dealWithData(data) {\r\n    let c = [];\r\n    let d = {};\r\n    data.forEach(element => {\r\n      if (!d[element.category]) {\r\n        c.push({\r\n          category: element.category,\r\n          allData: [element],\r\n        });\r\n        d[element.category] = element;\r\n      } else {\r\n        c.forEach(ele => {\r\n          if (ele.category == element.category) {\r\n            ele.allData.push(element);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return c;\r\n  }\r\n</script>\r\n\r\n<TopTitle title=\"发现\" desc=\"歌单广场\" {topTitleRightList} on:IconClick={topClickFun} />\r\n<div class=\"page\">\r\n  {#if topPlayList.length > 0}\r\n    <div style=\"margin-top: 10px;\">\r\n      <ListGrid\r\n        title={tab2list.length > 0 ? `${tab2list[active2].name} - 精选歌单` : `默认-精选歌单`}\r\n        playList={topPlayList}\r\n        on:titleClick={() => {\r\n          isHomePageStore.set(false);\r\n          push('/moreList?cat=' + cat + '&type=top');\r\n        }}\r\n      >\r\n        <div>\r\n          <div class=\"tab-1-box\">\r\n            {#each allList as category}\r\n              <div\r\n                class=\"tab1\"\r\n                class:tab1-active={active1 === category.category}\r\n                on:click={() => {\r\n                  active1 = category.category;\r\n                  tab2list = allList.filter(item => item.category === active1)[0].allData;\r\n                  active2 = 0;\r\n                  cat = tab2list[0].name;\r\n                  topPlaylistFun(tab2list[0].name);\r\n                }}\r\n              >\r\n                {categories[category.category]}\r\n              </div>\r\n            {/each}\r\n          </div>\r\n          <div class=\"tab-2-box\">\r\n            {#each tab2list as tab, i}\r\n              <span\r\n                class=\"tab2\"\r\n                class:tab1-active={active2 === i}\r\n                on:click={() => {\r\n                  active2 = i;\r\n                  cat = tab.name;\r\n                  topPlaylistFun(tab.name);\r\n                }}\r\n              >\r\n                {tab.name}\r\n              </span>\r\n            {/each}\r\n            <div class=\"mask\" />\r\n          </div>\r\n        </div>\r\n      </ListGrid>\r\n    </div>\r\n  {/if}\r\n  {#if offList.length > 0}\r\n    <div class=\"list-grid\">\r\n      <ListGrid\r\n        title=\"官方歌单\"\r\n        playList={offList}\r\n        on:titleClick={() => {\r\n          isHomePageStore.set(false);\r\n          push('/moreList?cat=官方');\r\n        }}\r\n      />\r\n    </div>\r\n  {/if}\r\n  {#if topOrderList.length > 0}\r\n    <div class=\"list-grid\">\r\n      <ListGrid title=\"排行榜\" isShowMore={false} playList={topOrderList} />\r\n    </div>\r\n  {/if}\r\n  {#if hotSongers.length > 0}\r\n    <Title title=\"热门歌手\" isShowRight={true} on:TitleClick={hotSongersFun} />\r\n    <div class=\"songer-box\">\r\n      {#each hotSongers as songer}\r\n        <Songer {songer} coverSize={330} />\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n  {#if highquality.length > 0}\r\n    <div class=\"list-grid\">\r\n      <ListGrid\r\n        title={heigtab2list.length > 0 ? `${heigtab2list[heigActive]} - 精品歌单` : `默认-精品歌单`}\r\n        playList={highquality}\r\n        isShowMore={highquality.length < 6 ? false : true}\r\n        on:titleClick={() => {\r\n          isHomePageStore.set(false);\r\n          push('/moreList?cat=' + heigcat + '&type=high');\r\n        }}\r\n      >\r\n        <div class=\"tab-2-box\">\r\n          {#each heigtab2list as tab, i}\r\n            <span\r\n              class=\"tab2\"\r\n              class:tab1-active={heigActive === i}\r\n              on:click={() => {\r\n                heigActive = i;\r\n                heigcat = tab;\r\n                highQualityPlaylistFun(tab);\r\n              }}\r\n            >\r\n              {tab}\r\n            </span>\r\n          {/each}\r\n          <div class=\"mask\" />\r\n        </div>\r\n      </ListGrid>\r\n    </div>\r\n  {/if}\r\n  {#if !$isLoginStore}\r\n    <div style=\"margin-top: 40px;padding:0 20px\">\r\n      <Button\r\n        on:BtnClick={() => {\r\n          isHomePageStore.set(false);\r\n          push('/about');\r\n        }}\r\n      >\r\n        关于\r\n      </Button>\r\n    </div>\r\n    <div class=\"ba\"><a href=\"https://beian.miit.gov.cn/\" target=\"_blank\">滇ICP备17004037号-3</a></div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .ba {\r\n    text-align: center;\r\n    font-size: 12px;\r\n    color: #888;\r\n    padding: 20px;\r\n  }\r\n  .songer-box {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(3, 100px);\r\n    padding: 0 20px;\r\n  }\r\n  .list-grid {\r\n    margin-top: 30px;\r\n  }\r\n  .page {\r\n    padding-bottom: 120px;\r\n    font-size: 16px;\r\n  }\r\n  .tab-1-box {\r\n    display: flex;\r\n    padding: 0px 20px;\r\n    font-size: 12px;\r\n    justify-content: space-between;\r\n  }\r\n  .tab1 {\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    padding: 4px 0;\r\n    width: 50px;\r\n    text-align: center;\r\n  }\r\n  .tab-2-box {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n    display: flex;\r\n    font-size: 12px;\r\n  }\r\n  .tab-2-box:global(::-webkit-scrollbar) {\r\n    width: 0 !important;\r\n  }\r\n  .tab2 {\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    padding: 4px 10px;\r\n    margin: 10px;\r\n  }\r\n  .tab-2-box > :global(:first-child) {\r\n    margin-left: 20px;\r\n  }\r\n  .tab-2-box > :global(:nth-last-child(2)) {\r\n    margin-right: 40px;\r\n  }\r\n  .tab1-active {\r\n    background-color: var(--primary-text-color);\r\n    color: #fff;\r\n  }\r\n  .mask {\r\n    position: absolute;\r\n    right: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: #f4f4f4;\r\n    -webkit-mask: linear-gradient(to left, #000, transparent);\r\n    mask: linear-gradient(to left, #000, transparent);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from 'svelte';\r\n  import { pop } from 'svelte-stack-router';\r\n  import md5 from 'crypto-js/md5';\r\n  import { LinksLine } from 'svelte-remixicon';\r\n  import QrCode from 'svelte-qrcode';\r\n\r\n  import { NavBar, Input, Button } from '../components/base';\r\n\r\n  import { isHomePageStore, isLoginStore } from '../store/common';\r\n  import { playIsMinStore } from '../store/play';\r\n  import { userInfoStore, userLikeSongIdsStore, userLikeListIdStore } from '../store/user';\r\n\r\n  import { loginWithPhone, loginWithEmail, loginQrCodeKey, loginQrCodeCreate, loginQrCodeCheck } from '../api/auth';\r\n  import { userPlaylist, userLikedSongsIDs, likedArtists, userAccount, sendSmsCode } from '../api/user';\r\n\r\n  import { setCookies, Alert, Toast } from '../utils/common';\r\n\r\n  let timerLogin = null;\r\n  let phone = '';\r\n  let email = '';\r\n  let password_phone = '';\r\n  let password_email = '';\r\n  let code_phone = '';\r\n  let type = 'phone';\r\n  $: phoneType = 'code'; //code--短信验证，pwd--密码验证\r\n  let tiptext =\r\n    '您的密码会进行 MD5 加密后再传输到网易云 API。「简易云音乐」不会传输您的账号数据到任何非网易云音乐官方服务器。本工程源码已开源，可随时到 https://github.com/dufu1991/simple-cloud-music 查看验证逻辑。实在不放心建议使用短信验证或二维码登录。';\r\n  $: loginType = type === 'qr' ? '二维码登录' : type === 'phone' ? '手机号登录' : '邮箱登录';\r\n  $: qrImg = '';\r\n  $: qrTip = '请扫码';\r\n  $: btnText = '获取验证码';\r\n  function loginSuccFun(res) {\r\n    //登录成功\r\n    setCookies(res.cookie);\r\n    userInfoStore.set(res);\r\n    localStorage.setItem('userInfo', JSON.stringify(res));\r\n    userPlaylistFun(res);\r\n  }\r\n  //手机号登录\r\n  async function getClickPhone() {\r\n    if (!isPhone(phone)) {\r\n      Toast('请输入正确的手机号');\r\n    } else if (phoneType === 'code' && code_phone.length != 4) {\r\n      Toast('请输入四位验证码');\r\n    } else {\r\n      let params = {};\r\n      if (phoneType === 'code') {\r\n        //验证码验证\r\n        params = {\r\n          phone,\r\n          captcha: code_phone,\r\n          password: 'fakePassword',\r\n        };\r\n      } else {\r\n        //密码验证\r\n        params = {\r\n          phone,\r\n          md5_password: password_phone,\r\n          password: 'fakePassword',\r\n        };\r\n      }\r\n      const res = await loginWithPhone(params);\r\n      if (res.code === 200) {\r\n        loginSuccFun(res);\r\n      } else {\r\n        Alert('登录不成功, 请重新登录。');\r\n      }\r\n    }\r\n  }\r\n  //邮箱登录\r\n  async function getClickEmail() {\r\n    const res = await loginWithEmail({\r\n      email,\r\n      md5_password: password_email,\r\n      password: 'fakePassword',\r\n    });\r\n    if (res.code === 200) {\r\n      loginSuccFun(res);\r\n    } else {\r\n      Alert('登录不成功, 请重新登录。');\r\n    }\r\n  }\r\n  onMount(() => {\r\n    isHomePageStore.set(false);\r\n    playIsMinStore.set(false);\r\n  });\r\n  onDestroy(() => {\r\n    playIsMinStore.set(true);\r\n  });\r\n  function getpassword_phone(e) {\r\n    password_phone = md5(e.detail.value).toString();\r\n  }\r\n  function getcode_phone(e) {\r\n    code_phone = e.detail.value.toString();\r\n  }\r\n  function getpassword_email(e) {\r\n    email_phone = md5(e.detail.value).toString();\r\n  }\r\n  function getPhone(e) {\r\n    phone = e.detail.value;\r\n  }\r\n  function getEmail(e) {\r\n    email = e.detail.value;\r\n  }\r\n  async function userPlaylistFun(login) {\r\n    //获取用户收藏歌单ID列表,用于判断是否已经收藏\r\n    const res = await userPlaylist({\r\n      uid: login.account.id,\r\n      limit: 10000,\r\n      offset: 0,\r\n    });\r\n    if (res.code === 200) {\r\n      let ids = [];\r\n      for (let i = 0; i < res.playlist.length; i++) {\r\n        ids.push(res.playlist[i].id);\r\n      }\r\n\r\n      if (\r\n        res.playlist[0].creator.userId === $userInfoStore.account.id &&\r\n        res.playlist[0].name.substr(-5) === '喜欢的音乐'\r\n      ) {\r\n        userLikeListIdStore.set(res.playlist[0].id);\r\n        localStorage.setItem('userLikeListId', res.playlist[0].id);\r\n      }\r\n\r\n      localStorage.setItem('usePlayListIds', JSON.stringify(ids));\r\n      userLikedSongsIDsFun(login);\r\n    } else {\r\n      Alert('获取收藏歌单失败');\r\n    }\r\n  }\r\n  async function userLikedSongsIDsFun(login) {\r\n    //获取用户喜爱歌曲ID列表,用于判断是否已经收藏\r\n    const res = await userLikedSongsIDs(login.account.id);\r\n    if (res.code === 200) {\r\n      let ids = [];\r\n      for (let i = 0; i < res.ids.length; i++) {\r\n        ids.push(res.ids[i]);\r\n      }\r\n      isLoginStore.set(true);\r\n      localStorage.setItem('isLogin', true);\r\n      userLikeSongIdsStore.set(JSON.stringify(ids));\r\n      localStorage.setItem('useLoveSongIds', JSON.stringify(ids));\r\n      likedArtistsFun();\r\n    } else {\r\n      alert('获取喜爱歌曲失败');\r\n    }\r\n  }\r\n  //获取收藏的歌手\r\n  async function likedArtistsFun() {\r\n    const res = await likedArtists({ limit: 2000 });\r\n    if (res.code === 200) {\r\n      let ids = [];\r\n      for (let i = 0; i < res.data.length; i++) {\r\n        ids.push(res.data[i].id);\r\n      }\r\n      localStorage.setItem('useLoveSongerIds', JSON.stringify(ids));\r\n      setTimeout(() => {\r\n        pop();\r\n      }, 100);\r\n    } else {\r\n      alert('获取喜爱歌手失败');\r\n    }\r\n  }\r\n  async function qrLoginFun() {\r\n    type = 'qr';\r\n    const res = await loginQrCodeKey();\r\n    if (res.code === 200) {\r\n      loginQrCodeCreateFun(res.data.unikey);\r\n    }\r\n  }\r\n  async function loginQrCodeCreateFun(key) {\r\n    const res = await loginQrCodeCreate({\r\n      key,\r\n    });\r\n    if (res.code === 200) {\r\n      qrImg = res.data.qrurl;\r\n      timerLogin = setInterval(() => {\r\n        loginQrCodeCheckFun(key);\r\n      }, 1000);\r\n    }\r\n  }\r\n  async function loginQrCodeCheckFun(key) {\r\n    const res = await loginQrCodeCheck(key);\r\n    if (res.code === 800) {\r\n      qrTip = res.message;\r\n    } else if (res.code === 801) {\r\n      qrTip = res.message;\r\n    } else if (res.code === 802) {\r\n      qrTip = res.message;\r\n    } else if (res.code === 803) {\r\n      clearInterval(timerLogin);\r\n      setTimeout(() => {\r\n        userAccountFun(res.cookie);\r\n      }, 300);\r\n    } else {\r\n      clearInterval(timerLogin);\r\n    }\r\n  }\r\n  async function userAccountFun(cookie) {\r\n    const res = await userAccount(cookie);\r\n    if (res.code === 200) {\r\n      let newres = res;\r\n      newres.cookie = cookie;\r\n      loginSuccFun(newres);\r\n    }\r\n  }\r\n  async function sendSmsCodeFun() {\r\n    if (btnText === '获取验证码') {\r\n      if (!isPhone(phone)) {\r\n        Toast('请输入正确的手机号');\r\n      } else {\r\n        const res = await sendSmsCode(phone);\r\n        if (res.code === 200) {\r\n          Toast('验证码已发送至' + phone.substring(phone.length - 4) + '，请注意查收！', 2000);\r\n          setinter60();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function setinter60() {\r\n    let time = 59;\r\n    let myTimer = setInterval(() => {\r\n      time--;\r\n      if (time === 0) {\r\n        clearInterval(myTimer);\r\n        btnText = '获取验证码';\r\n      } else {\r\n        btnText = time + 's 后重发';\r\n      }\r\n    }, 1000);\r\n  }\r\n  function isPhone(phone) {\r\n    //手机号正则\r\n    let mPattern = /^1[3-9]\\d{9}$/;\r\n    //返回 true or false\r\n    return mPattern.test(phone);\r\n  }\r\n</script>\r\n\r\n<NavBar title={loginType} />\r\n<div class=\"login-page\">\r\n  <div class=\"desc\">请使用网易云音乐账号登录</div>\r\n  <div class=\"lead\">\r\n    <div class=\"netease\">\r\n      <img src=\"/images/nm_logo.png\" alt=\"\" />\r\n    </div>\r\n    <div class=\"arr\">\r\n      <LinksLine />\r\n    </div>\r\n    <div class=\"simple\"><img src=\"/images/sm_logo.png\" alt=\"\" /></div>\r\n  </div>\r\n  {#if type === 'qr'}\r\n    <div class=\"qr\">\r\n      <div class=\"qr-tip\">{qrTip}</div>\r\n      <div class=\"qrcode\">\r\n        <QrCode value={qrImg} />\r\n      </div>\r\n      <div class=\"tip\">直接使用网易云音乐 APP 扫码登录，或截图保存之后使用网易云音乐 APP 扫码登录。</div>\r\n      <div class=\"type-switch\">\r\n        <span\r\n          on:click={() => {\r\n            clearInterval(timerLogin);\r\n            type = 'phone';\r\n          }}\r\n        >\r\n          手机号登录\r\n        </span>&nbsp;｜&nbsp;\r\n        <span\r\n          on:click={() => {\r\n            clearInterval(timerLogin);\r\n            type = 'email';\r\n          }}\r\n        >\r\n          邮箱登录\r\n        </span>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n  {#if type === 'phone'}\r\n    <div class=\"phone\">\r\n      <Input label=\"手机号\" type=\"tel\" maxlength=\"11\" on:setInput={getPhone} />\r\n      {#if phoneType === 'pwd'}\r\n        <Input label=\"密码\" type=\"password\" maxlength=\"40\" bind:password_phone on:setInput={getpassword_phone} />\r\n      {/if}\r\n      {#if phoneType === 'code'}\r\n        <Input\r\n          label=\"验证码\"\r\n          type=\"tel\"\r\n          maxlength=\"4\"\r\n          bind:code_phone\r\n          rightBtn={true}\r\n          {btnText}\r\n          on:setInput={getcode_phone}\r\n          on:setBtn={sendSmsCodeFun}\r\n        />\r\n      {/if}\r\n      <div class=\"phone-switch\">\r\n        {#if phoneType === 'pwd'}\r\n          <span\r\n            on:click={() => {\r\n              phoneType = 'code';\r\n            }}\r\n          >\r\n            短信验证\r\n          </span>{/if}\r\n        {#if phoneType === 'code'}\r\n          <span\r\n            on:click={() => {\r\n              phoneType = 'pwd';\r\n            }}\r\n          >\r\n            密码验证\r\n          </span>\r\n        {/if}\r\n      </div>\r\n      <div class=\"btn\">\r\n        <Button on:BtnClick={getClickPhone} type=\"primary\">登录</Button>\r\n      </div>\r\n      {#if phoneType === 'pwd'}\r\n        <div class=\"tip\">{tiptext}</div>\r\n      {/if}\r\n      <div class=\"type-switch\">\r\n        <span on:click={qrLoginFun}> 二维码登录 </span>&nbsp;｜&nbsp;\r\n        <span\r\n          on:click={() => {\r\n            type = 'email';\r\n            clearInterval(timerLogin);\r\n          }}\r\n        >\r\n          邮箱登录\r\n        </span>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n\r\n  {#if type === 'email'}\r\n    <div class=\"email\">\r\n      <Input label=\"邮箱\" maxlength={30} type=\"text\" on:setInput={getEmail} />\r\n      <Input label=\"密码\" type=\"password\" maxlength=\"40\" bind:password_email on:setInput={getpassword_email} />\r\n      <div class=\"btn\">\r\n        <Button on:BtnClick={getClickEmail} type=\"primary\">登录</Button>\r\n      </div>\r\n      <div class=\"tip\">{tiptext}</div>\r\n      <div class=\"type-switch\">\r\n        <span\r\n          on:click={() => {\r\n            clearInterval(timerLogin);\r\n            type = 'phone';\r\n          }}>手机号登录</span\r\n        >&nbsp;｜&nbsp;\r\n        <span on:click={qrLoginFun}>二维码登录</span>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .desc {\r\n    font-size: 12px;\r\n    text-align: center;\r\n    color: #666;\r\n    margin: 20px;\r\n  }\r\n  .qr-tip {\r\n    text-align: center;\r\n    margin: 20px auto;\r\n  }\r\n  .login-page {\r\n    padding-top: 50px;\r\n    font-size: 16px;\r\n  }\r\n  .btn {\r\n    margin: 10px auto;\r\n    width: 80%;\r\n  }\r\n  .qr {\r\n    text-align: center;\r\n  }\r\n  .qrcode {\r\n    margin: auto;\r\n    width: 200px;\r\n    height: 200px;\r\n    background: cornflowerblue;\r\n  }\r\n  .tip {\r\n    width: 80%;\r\n    text-align: justify;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    margin: 20px auto;\r\n    word-break: break-all;\r\n  }\r\n  .lead {\r\n    text-align: center;\r\n    align-items: center;\r\n    margin: 20px auto;\r\n    width: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .netease {\r\n    flex: 1.5;\r\n  }\r\n  img {\r\n    width: 100%;\r\n  }\r\n  .arr {\r\n    color: rgb(139, 139, 139);\r\n    flex: 1;\r\n  }\r\n  .simple {\r\n    flex: 1.5;\r\n  }\r\n  .phone-switch {\r\n    margin: 20px;\r\n    text-align: center;\r\n    color: var(--primary-text-color);\r\n  }\r\n  .type-switch {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 40px;\r\n    text-align: center;\r\n    color: var(--primary-text-color);\r\n    padding-bottom: constant(safe-area-inset-bottom);\r\n    padding-bottom: env(safe-area-inset-bottom);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { push } from 'svelte-stack-router';\r\n  import { RadioFill, RefreshLine, Calendar2Fill, GitRepositoryPrivateLine } from 'svelte-remixicon';\r\n\r\n  import TopTitle from '../components/TopTitle.svelte';\r\n  import { Button } from '../components/base';\r\n  import ListGrid from '../components/ListGrid.svelte';\r\n  import SongList from '../components/SongList.svelte';\r\n  import Songer from '../components/Singer.svelte';\r\n\r\n  import { isLoginStore } from '../store/common';\r\n  import {\r\n    playIsMaxStore,\r\n    playStatusStore,\r\n    currentSongStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    maxPlayToTopStore,\r\n    FMPlayStore,\r\n    isFMPlayStore,\r\n    FMPlayNextStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n  import { isHomePageStore } from '../store/common';\r\n  import { todayListStore } from '../store/playList';\r\n  import { userLikeListIdStore } from '../store/user';\r\n\r\n  import { dailyRecommendTracks, getSimiPlaylist, dailyRecommendPlaylist, getPlaylistDetail } from '../api/playlist';\r\n  import { getSongUrl, personalFM, getSongDetail, getSimiSong } from '../api/song';\r\n  import { similarArtists, getSongerDetail } from '../api/songer';\r\n\r\n  import { songerListToStr, Toast, ripple } from '../utils/common';\r\n\r\n  let dailyRecommendPlayList = []; //每日歌单推荐\r\n  let randomLoveSong = {}; //随机一个喜欢歌曲\r\n  let similarPlayList = []; //相似歌单推荐\r\n  let randomTenLoveSong = {}; //随机一个喜欢歌曲\r\n  let similarSongs = []; //相似歌曲推荐\r\n  let topTitleRightList = {\r\n    type: 'icon',\r\n    path: RefreshLine,\r\n  };\r\n  let FMDom;\r\n  let todayDom;\r\n  $: isRefresh = false;\r\n  $: simiSonger = {};\r\n  $: simiSongers = [];\r\n\r\n  onMount(() => {\r\n    if (FMDom) {\r\n      ripple(FMDom);\r\n    }\r\n    if (todayDom) {\r\n      ripple(todayDom);\r\n    }\r\n    allOnMount();\r\n  });\r\n  function allOnMount() {\r\n    if ($isLoginStore) {\r\n      dailyRecommendPlaylistFun();\r\n      dailyRecommendTracksFun();\r\n      personalFMFun(true);\r\n      let useLoveSongIds = JSON.parse(localStorage.getItem('useLoveSongIds'));\r\n      let randomIndex = Math.floor(Math.random() * useLoveSongIds.length);\r\n      getSongDetailFun(useLoveSongIds[randomIndex]);\r\n      getSimiPlaylistFun(useLoveSongIds[randomIndex]);\r\n      getPlaylistDetailFun();\r\n      //收藏随机歌手一位\r\n      const useLoveSongerIds = JSON.parse(localStorage.getItem('useLoveSongerIds')) || [];\r\n      let index = Math.floor(Math.random() * useLoveSongerIds.length);\r\n      if (index) {\r\n        getSongerDetailFun(useLoveSongerIds[index]);\r\n        similarArtistsFun(useLoveSongerIds[index], useLoveSongerIds);\r\n      }\r\n    }\r\n  }\r\n  //今日推荐歌曲\r\n  function playTodayFun() {\r\n    isHomePageStore.set(false);\r\n    push('/todayListDetail');\r\n  }\r\n  //播放私人FM\r\n  function playFMFun() {\r\n    if ($FMPlayStore.id === $currentSongStore.id) {\r\n      window.audioDOM.play();\r\n      playStatusStore.set(true);\r\n      if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n      playIsMaxStore.set(true);\r\n      maxPlayToTopStore.set('0px');\r\n    } else {\r\n      isFMPlayStore.set(true);\r\n      localStorage.setItem('isFMPlay', '1');\r\n      getSongUrlFun($FMPlayStore);\r\n    }\r\n  }\r\n  //请求私人FM\r\n  async function personalFMFun(first) {\r\n    //first 是否是第一次请求私人FM\r\n    const res = await personalFM();\r\n    if (res.code === 200) {\r\n      res.data[0].al = res.data[0].album;\r\n      res.data[0].ar = res.data[0].artists;\r\n      res.data[0].alia = res.data[0].alias;\r\n      res.data[1].al = res.data[1].album;\r\n      res.data[1].ar = res.data[1].artists;\r\n      res.data[1].alia = res.data[1].alias;\r\n      if (first) {\r\n        FMPlayStore.set(res.data[0]);\r\n        FMPlayNextStore.set(res.data[1]);\r\n        localStorage.setItem('FMPlay', JSON.stringify($FMPlayStore));\r\n      } else {\r\n        FMPlayStore.set(res.data[0]);\r\n      }\r\n    }\r\n  }\r\n  //每日推荐歌曲\r\n  async function dailyRecommendTracksFun() {\r\n    const res = await dailyRecommendTracks();\r\n    if (res.code === 200) {\r\n      todayListStore.set(res.data.dailySongs);\r\n    }\r\n  }\r\n  //每日推荐歌单\r\n  async function dailyRecommendPlaylistFun() {\r\n    const res = await dailyRecommendPlaylist();\r\n    if (res.code === 200) {\r\n      let olddailyRecommendPlayList = res.recommend;\r\n      if (\r\n        olddailyRecommendPlayList[0].copywriter === '猜你喜欢' &&\r\n        olddailyRecommendPlayList[0].name.indexOf('私人雷达') > -1\r\n      ) {\r\n        getPlaylistDetailFun(true, olddailyRecommendPlayList);\r\n      } else {\r\n        dailyRecommendPlayList = olddailyRecommendPlayList;\r\n      }\r\n    }\r\n  }\r\n  //请求歌曲详情\r\n  async function getSongDetailFun(id) {\r\n    const res = await getSongDetail(id); //获取歌单详情\r\n    if (res.code === 200) {\r\n      randomLoveSong = res.songs[0];\r\n    }\r\n  }\r\n  //请求相似歌单\r\n  async function getSimiPlaylistFun(id) {\r\n    const res = await getSimiPlaylist(id); //获取歌单详情\r\n    if (res.code === 200) {\r\n      similarPlayList = res.playlists;\r\n    }\r\n  }\r\n  //请求相似歌曲\r\n  async function getSimiSongFun(id) {\r\n    const res = await getSimiSong(id); //获取歌单详情\r\n    if (res.code === 200) {\r\n      if (isRefresh) isRefresh = false;\r\n      for (let t = 0; t < res.songs.length; t++) {\r\n        res.songs[t].al = res.songs[t].album;\r\n        res.songs[t].ar = res.songs[t].artists;\r\n      }\r\n      similarSongs = res.songs;\r\n    }\r\n  }\r\n  //请求歌单详情\r\n  async function getPlaylistDetailFun(isRadar = false, list) {\r\n    const res = await getPlaylistDetail(isRadar ? list[0].id : $userLikeListIdStore); //获取歌单详情\r\n    if (res.code === 200) {\r\n      if (isRadar) {\r\n        if (list[0].copywriter === '猜你喜欢' && list[0].name.indexOf('私人雷达') > -1) {\r\n          list[0].copywriter = list[0].name;\r\n          list[0].picUrl = res.playlist.tracks[0].al.picUrl;\r\n          list[0].name = `从《${res.playlist.tracks[0].name}》开始听吧`;\r\n        }\r\n        for (let i = 0; i < list.length; i++) {\r\n          list[i].coverImgUrl = list[i].picUrl;\r\n          list[i].playCount = list[i].playcount;\r\n        }\r\n        dailyRecommendPlayList = list;\r\n      }\r\n      let randomIndexTen = Math.round(Math.random() * 20); //喜欢歌曲最新20首随机一首\r\n      randomTenLoveSong = res.playlist.tracks[randomIndexTen];\r\n      if (randomTenLoveSong) getSimiSongFun(randomTenLoveSong.id);\r\n    }\r\n  }\r\n  //获取歌曲URL\r\n  async function getSongUrlFun(song) {\r\n    const res = await getSongUrl(song.id);\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($isFMPlayStore) {\r\n          currentPlayListStore.set([song]);\r\n          currentSongIndexStore.set(0);\r\n          currentSongStore.set(song);\r\n          song.al = song.album;\r\n          song.ar = song.artists;\r\n          song.alia = song.alias;\r\n          FMPlayStore.set(song);\r\n          localStorage.setItem('currentSong', JSON.stringify(song));\r\n        }\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n  //获取相似歌手\r\n  async function similarArtistsFun(id, useLoveSongerIds) {\r\n    const res = await similarArtists(id);\r\n    if (res.code === 200) {\r\n      let newSongerIds = [];\r\n      for (let e = 0; e < res.artists.length; e++) {\r\n        newSongerIds.push(res.artists[e].id);\r\n      }\r\n      let artists = distinct(newSongerIds, useLoveSongerIds); //交集\r\n      for (let t = 0; t < artists.length; t++) {\r\n        for (let p = 0; p < res.artists.length; p++) {\r\n          if (artists[t] === res.artists[p].id) {\r\n            res.artists.splice(p, 1);\r\n          }\r\n        }\r\n      }\r\n      simiSongers = res.artists.length > 6 ? res.artists.slice(0, 6) : res.artists;\r\n    }\r\n  }\r\n  //获取随机歌手信息\r\n  async function getSongerDetailFun(id) {\r\n    const res = await getSongerDetail(id);\r\n    if (res.code === 200) {\r\n      simiSonger = res.data.artist;\r\n    }\r\n  }\r\n  //数组去重\r\n  function distinct(A, B) {\r\n    let aSet = new Set(A);\r\n    let bSet = new Set(B);\r\n    //差集\r\n    // let differenceSet = new Set([...aSet].filter(x => !bSet.has(x)));\r\n    // return Array.from(differenceSet);\r\n    // 交集;\r\n    let intersection = new Set([...aSet].filter(x => bSet.has(x)));\r\n    return Array.from(intersection);\r\n  }\r\n  function topClickFun(event) {\r\n    if (event.detail.index === 0) {\r\n      allOnMount();\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"love\">\r\n  {#if $isLoginStore}\r\n    <div class=\"login-box\">\r\n      <TopTitle title=\"推荐\" desc=\"专属推荐\" {topTitleRightList} {isRefresh} on:IconClick={topClickFun} />\r\n      <div class=\"login\">\r\n        <div class=\"today\" on:click={playTodayFun} bind:this={todayDom}>\r\n          <div\r\n            class=\"today-img-box\"\r\n            style=\"width: {localStorage.getItem('fullWidth') - 40}px;background-image:url({$todayListStore.length !== 0\r\n              ? $todayListStore[0].al.picUrl.replace(/^http:/, 'https:') + '?param=800y800'\r\n              : '/images/defaultCover.png'})\"\r\n          />\r\n          <div class=\"day-box\">\r\n            <div class=\"day\">今日推荐</div>\r\n            <div class=\"name-list\">\r\n              <div class=\"name\">\r\n                {$todayListStore.length !== 0 ? $todayListStore[0].name : ''}\r\n              </div>\r\n              <div class=\"songer\">\r\n                {$todayListStore.length !== 0 ? songerListToStr($todayListStore[0].ar) : ''}\r\n              </div>\r\n              <div class=\"calendar\">\r\n                <span style=\"position:relative;top:2px \">\r\n                  <Calendar2Fill size=\"14\" />\r\n                </span>{`${new Date().getMonth() + 1}月${new Date().getDate()}日`}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"fm-box\"\r\n          on:click={playFMFun}\r\n          style=\"background:url({$FMPlayStore.album\r\n            ? $FMPlayStore.album.blurPicUrl.replace(/^http:/, 'https:') + '?param=80y80'\r\n            : ''})\"\r\n          bind:this={FMDom}\r\n        >\r\n          <div class=\"fm\">\r\n            <div class=\"fm-cover\">\r\n              <img\r\n                class=\"fm-cover-img\"\r\n                src={$FMPlayStore.album\r\n                  ? $FMPlayStore.album.blurPicUrl.replace(/^http:/, 'https:') + '?param=240y240'\r\n                  : ''}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div class=\"fm-info\">\r\n              {#if $isFMPlayStore && $playStatusStore && $currentSongStore.id === $FMPlayStore.id}\r\n                <div class=\"fm-play-motion\">\r\n                  <div class=\"pull_down pull_down1\" />\r\n                  <div class=\"pull_down pull_down2\" />\r\n                  <div class=\"pull_down pull_down3\" />\r\n                  <div class=\"pull_down pull_down4\" />\r\n                  <div class=\"pull_down pull_down5\" />\r\n                  <div class=\"pull_down pull_down6\" />\r\n                  <div class=\"pull_down pull_down7\" />\r\n                  <div class=\"pull_down pull_down8\" />\r\n                  <div class=\"pull_down pull_down9\" />\r\n                  <div class=\"pull_down pull_down10\" />\r\n                </div>\r\n              {/if}\r\n              <div class=\"fm-name\">\r\n                {$FMPlayStore.name ? $FMPlayStore.name : ''}\r\n                <span class=\"alia\">\r\n                  {$FMPlayStore.alia && $FMPlayStore.alia.length > 0 ? `(${$FMPlayStore.alia[0]})` : ''}\r\n                </span>\r\n              </div>\r\n              <div class=\"fm-songer\">\r\n                {$FMPlayStore.artists ? songerListToStr($FMPlayStore.artists) : ''}\r\n                {#if $FMPlayStore.al}\r\n                  <span>\r\n                    {$FMPlayStore.al.name === '' ? '' : `- ${$FMPlayStore.al.name}`}\r\n                    <!-- {$FMPlayStore.al === true}\r\n                  {$FMPlayStore.album === true} -->\r\n                    <!-- {$FMPlayStore.al\r\n                    ? $FMPlayStore.al.name === \"\"\r\n                      ? \"\"\r\n                      : `- ${$FMPlayStore.al.name}`\r\n                    : $FMPlayStore.album.name === \"\"\r\n                    ? \"\"\r\n                    : `- ${$FMPlayStore.album.name}`} -->\r\n                  </span>\r\n                {/if}\r\n              </div>\r\n              <div class=\"fm-icon\">\r\n                <span style=\"position:relative;top:2px \">\r\n                  <RadioFill size=\"14\" />\r\n                </span>\r\n                私人 FM\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"list-grid\">\r\n          <ListGrid title=\"每日歌单推荐\" isShowMore={false} playList={dailyRecommendPlayList} />\r\n        </div>\r\n        {#if similarSongs.length > 0}\r\n          <div class=\"simiTitle\">相似歌曲推荐</div>\r\n          <div class=\"desc\">根据单曲《{randomTenLoveSong.name}》推荐</div>\r\n          <SongList songList={similarSongs} />\r\n        {/if}\r\n        {#if similarPlayList.length > 0}\r\n          <div class=\"list-grid\">\r\n            <ListGrid\r\n              title=\"相似歌单推荐\"\r\n              isShowMore={false}\r\n              isShowTip={true}\r\n              tipTextList={[`根据单曲《${randomLoveSong.name}》推荐`]}\r\n              playList={similarPlayList}\r\n            />\r\n          </div>\r\n        {/if}\r\n        {#if simiSongers.length > 0 && simiSonger.name}\r\n          <div class=\"simiTitle\">相似歌手推荐</div>\r\n          <div class=\"desc\">根据【{simiSonger.name}】推荐</div>\r\n          <div class=\"songer-box\">\r\n            {#each simiSongers as songer}\r\n              <Songer {songer} coverSize={330} />\r\n            {/each}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    <div>\r\n      <TopTitle title=\"推荐\" desc=\"专属推荐\" topTitleRightList={{ type: 'text', text: '' }} />\r\n      <div class=\"noLogin\">\r\n        <div>\r\n          <img class=\"login-img\" src=\"/images/login.png\" alt=\"\" />\r\n        </div>\r\n        <div class=\"tip\">推荐功能需要登录</div>\r\n        <div class=\"login-btn\">\r\n          <Button\r\n            type=\"primary\"\r\n            on:BtnClick={() => {\r\n              isHomePageStore.set(false);\r\n              push('/login');\r\n            }}\r\n          >\r\n            立即登录\r\n          </Button>\r\n        </div>\r\n        <div style=\"margin-top: 40px;\">\r\n          <Button\r\n            on:BtnClick={() => {\r\n              isHomePageStore.set(false);\r\n              push('/about');\r\n            }}\r\n          >\r\n            关于\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .songer-box {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(3, 100px);\r\n    padding: 0 20px;\r\n  }\r\n  .alia {\r\n    color: rgb(255, 255, 255, 0.7);\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n  }\r\n  .fm-songer {\r\n    color: rgb(255, 255, 255, 0.7);\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 1;\r\n  }\r\n  .simiTitle {\r\n    margin-top: 20px;\r\n    text-align: left;\r\n    margin-left: 20px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n  }\r\n  .desc {\r\n    font-size: 12px;\r\n    color: rgb(141, 141, 141);\r\n    text-align: justify;\r\n    margin: 10px 0;\r\n    padding: 0 20px;\r\n  }\r\n  .list-grid {\r\n    margin-top: 30px;\r\n  }\r\n  .fm-play-motion {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 74px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-end;\r\n  }\r\n  .pull_down {\r\n    flex: 1;\r\n    height: 6px;\r\n    margin: 0px 6px;\r\n    border-top-left-radius: 20px;\r\n    border-top-right-radius: 20px;\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n  .pull_down1 {\r\n    -webkit-animation: jumpY1 1.5s infinite ease-in-out;\r\n    -o-animation: jumpY1 1.5s infinite ease-in-out;\r\n    animation: jumpY1 1.5s infinite ease-in-out;\r\n  }\r\n  .pull_down2 {\r\n    -webkit-animation: jumpY2 1.2s infinite ease-in-out;\r\n    -o-animation: jumpY2 1.2s infinite ease-in-out;\r\n    animation: jumpY2 1.2s infinite ease-in-out;\r\n  }\r\n  .pull_down3 {\r\n    -webkit-animation: jumpY3 1s infinite ease-in-out;\r\n    -o-animation: jumpY3 1s infinite ease-in-out;\r\n    animation: jumpY3 1s infinite ease-in-out;\r\n  }\r\n  .pull_down4 {\r\n    -webkit-animation: jumpY4 1.1s infinite ease-in-out;\r\n    -o-animation: jumpY4 1.1s infinite ease-in-out;\r\n    animation: jumpY4 1.1s infinite ease-in-out;\r\n  }\r\n  .pull_down5 {\r\n    -webkit-animation: jumpY5 1.6 infinite ease-in-out;\r\n    -o-animation: jumpY5 1.6s infinite ease-in-out;\r\n    animation: jumpY5 1.6s infinite ease-in-out;\r\n  }\r\n  .pull_down6 {\r\n    -webkit-animation: jumpY6 1.5s infinite ease-in-out;\r\n    -o-animation: jumpY6 1.5s infinite ease-in-out;\r\n    animation: jumpY6 1.5s infinite ease-in-out;\r\n  }\r\n  .pull_down7 {\r\n    -webkit-animation: jumpY7 1.7s infinite ease-in-out;\r\n    -o-animation: jumpY7 1.7s infinite ease-in-out;\r\n    animation: jumpY7 1.7s infinite ease-in-out;\r\n  }\r\n  .pull_down8 {\r\n    -webkit-animation: jumpY8 1.9s infinite ease-in-out;\r\n    -o-animation: jumpY8 1.9s infinite ease-in-out;\r\n    animation: jumpY8 1.9s infinite ease-in-out;\r\n  }\r\n  .pull_down9 {\r\n    -webkit-animation: jumpY9 1.1s infinite ease-in-out;\r\n    -o-animation: jumpY9 1.1s infinite ease-in-out;\r\n    animation: jumpY9 1.1s infinite ease-in-out;\r\n  }\r\n  .pull_down10 {\r\n    -webkit-animation: jumpY10 1.5s infinite ease-in-out;\r\n    -o-animation: jumpY10 1.5s infinite ease-in-out;\r\n    animation: jumpY10 1.5s infinite ease-in-out;\r\n  }\r\n  @keyframes jumpY1 {\r\n    0% {\r\n      height: 74px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 74px;\r\n    }\r\n  }\r\n  @keyframes jumpY2 {\r\n    0% {\r\n      height: 44px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 44px;\r\n    }\r\n  }\r\n  @keyframes jumpY3 {\r\n    0% {\r\n      height: 30px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 30px;\r\n    }\r\n  }\r\n  @keyframes jumpY4 {\r\n    0% {\r\n      height: 51px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 51px;\r\n    }\r\n  }\r\n  @keyframes jumpY5 {\r\n    0% {\r\n      height: 51px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 51px;\r\n    }\r\n  }\r\n  @keyframes jumpY6 {\r\n    0% {\r\n      height: 61px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 61px;\r\n    }\r\n  }\r\n  @keyframes jumpY7 {\r\n    0% {\r\n      height: 47px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 47px;\r\n    }\r\n  }\r\n  @keyframes jumpY8 {\r\n    0% {\r\n      height: 21px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 21px;\r\n    }\r\n  }\r\n  @keyframes jumpY9 {\r\n    0% {\r\n      height: 61px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 61px;\r\n    }\r\n  }\r\n  @keyframes jumpY10 {\r\n    0% {\r\n      height: 49px;\r\n    }\r\n    50% {\r\n      height: 6px;\r\n    }\r\n    100% {\r\n      height: 49px;\r\n    }\r\n  }\r\n  .noLogin {\r\n    width: 80%;\r\n    margin: auto;\r\n  }\r\n  .login-img {\r\n    width: 80%;\r\n  }\r\n  .tip {\r\n    margin: 20px 0;\r\n    font-size: 18px;\r\n    text-align: center;\r\n  }\r\n  .login {\r\n    text-align: center;\r\n  }\r\n  .login-box {\r\n    top: 0px;\r\n    position: relative;\r\n  }\r\n  .love {\r\n    font-size: 14px;\r\n    margin-bottom: constant(safe-area-inset-bottom);\r\n    margin-bottom: env(safe-area-inset-bottom);\r\n    padding-bottom: 120px;\r\n  }\r\n  .today {\r\n    margin: 0 20px;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    overflow: hidden;\r\n    transform: rotate(0deg);\r\n    position: relative;\r\n  }\r\n  .today-img-box {\r\n    height: 335px;\r\n    width: 335px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -3;\r\n    animation: move 40s infinite;\r\n    background-image: url('/images/defaultCover.png');\r\n    -webkit-animation: move 40s infinite;\r\n    -webkit-background-size: cover;\r\n    -moz-background-size: cover;\r\n    -o-background-size: cover;\r\n    background-size: cover;\r\n  }\r\n  @keyframes move {\r\n    0% {\r\n      transform: translateY(-47%);\r\n    }\r\n    50% {\r\n      transform: translateY(0);\r\n    }\r\n    100% {\r\n      transform: translateY(-47%);\r\n    }\r\n  }\r\n  .day-box {\r\n    height: 180px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    background-image: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 0%,\r\n      rgba(0, 0, 0, 0.1) 20%,\r\n      rgba(0, 0, 0, 0.2) 40%,\r\n      rgba(0, 0, 0, 0.3) 60%,\r\n      rgba(0, 0, 0, 0.5) 100%\r\n    );\r\n  }\r\n  .day {\r\n    flex: 1;\r\n    font-size: 40px;\r\n    line-height: 90px;\r\n    font-weight: bold;\r\n  }\r\n  .name {\r\n    margin-bottom: 10px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n  .name-list {\r\n    flex: 1;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    text-align: left;\r\n  }\r\n  .fm {\r\n    display: flex;\r\n    background: rgba(0, 0, 0, 0.4);\r\n    backdrop-filter: blur(30px);\r\n    -webkit-backdrop-filter: blur(30px);\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n  }\r\n  .fm-box {\r\n    margin: 0 20px;\r\n    color: #fff;\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n    background: url('');\r\n    background-size: cover !important;\r\n    background-position: 50% 50% !important;\r\n  }\r\n  .fm-cover {\r\n    flex: 1;\r\n    height: 74px;\r\n    width: 74px;\r\n    overflow: hidden;\r\n    border-radius: 5px;\r\n  }\r\n  .fm-cover-img {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n  }\r\n  .fm-info {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin-left: 10px;\r\n    text-align: left;\r\n    flex: 3;\r\n  }\r\n  .fm-name {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    white-space: normal;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n  .fm-icon {\r\n    text-align: right;\r\n    font-size: 12px;\r\n  }\r\n  .calendar {\r\n    text-align: right;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, onDestroy } from 'svelte';\r\n  import { onResume } from 'svelte-stack-router';\r\n  import { PlayCircleLine, ShuffleLine, SearchLine, RefreshLine } from 'svelte-remixicon';\r\n\r\n  import { Button, NavBar } from '../components/base';\r\n  import SongList from '../components/SongList.svelte';\r\n\r\n  import { isHomePageStore, isLoadingStore, defaultResumableStore } from '../store/common';\r\n  import { userInfoStore, userLikeListIdStore } from '../store/user';\r\n  import {\r\n    currentSongStore,\r\n    playStatusStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    isFMPlayStore,\r\n    playRepeatModelStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n\r\n  import { getSongUrl, getSongDetail } from '../api/song';\r\n  import { getPlaylistDetail } from '../api/playlist';\r\n\r\n  import { Toast, cutArray, songerListToStr } from '../utils/common';\r\n\r\n  let inputDom;\r\n  $: keywords = '';\r\n  $: isSearch = false;\r\n  $: songList = [];\r\n  $: searchSongList = []; //搜索过滤之后的歌曲列表\r\n  $: isRefresh = false;\r\n\r\n  let rightIcons = [\r\n    {\r\n      id: 'SearchLine',\r\n      icon: SearchLine,\r\n    },\r\n  ];\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      songList = [];\r\n      isSearch = false;\r\n      searchSongList = [];\r\n      keywords = '';\r\n      isHomePageStore.set(false);\r\n      getPlaylistDetailFun();\r\n    }\r\n  });\r\n  onMount(() => {\r\n    isHomePageStore.set(false);\r\n    getPlaylistDetailFun();\r\n  });\r\n  onDestroy(() => {\r\n    isHomePageStore.set(true);\r\n  });\r\n  function inputchange(e) {\r\n    setTimeout(() => {\r\n      //采用延时进行节流\r\n      if (!e.target.isNeedPrevent && e.target.oldValue !== e.target.value) {\r\n        //判断输入是否完成以及值是否变化\r\n        e.target.oldValue = e.target.value;\r\n        keywords = e.target.value;\r\n        searchFun();\r\n      }\r\n    }, 100);\r\n  }\r\n  //搜索\r\n  function searchFun() {\r\n    if (keywords.trim() != '') {\r\n      // inputDom.blur();\r\n      searchSongList = songList.filter(\r\n        item =>\r\n          item.name.indexOf(keywords) > -1 ||\r\n          songerListToStr(item.ar).indexOf(keywords) > -1 ||\r\n          songerListToStr(item.alia, false).indexOf(keywords) > -1\r\n      );\r\n    }\r\n  }\r\n  //请求歌单详情\r\n  async function getPlaylistDetailFun() {\r\n    const res = await getPlaylistDetail($userLikeListIdStore); //获取歌单详情\r\n    if (res.code === 200) {\r\n      isLoadingStore.set(true);\r\n      let songIdList = [];\r\n      for (let i = 0; i < res.playlist.trackIds.length; i++) {\r\n        songIdList.push(res.playlist.trackIds[i].id);\r\n      }\r\n      let cutSongIdList = cutArray(songIdList);\r\n      for (let t = 0; t < cutSongIdList.length; t++) {\r\n        await getSongDetailFun(cutSongIdList[t].join(','), t === cutSongIdList.length - 1);\r\n      }\r\n    }\r\n  }\r\n  //所有获取歌曲详情\r\n  async function getSongDetailFun(songIds, last) {\r\n    const res = await getSongDetail(songIds);\r\n    if (res.code === 200) {\r\n      songList = songList.concat(res.songs);\r\n      if (last) {\r\n        isRefresh = false;\r\n      }\r\n    }\r\n  }\r\n  //顺序播放\r\n  function playListFun(index) {\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    currentPlayListStore.set(songList);\r\n    let ids = [];\r\n    for (let r = 0; r < songList.length; r++) {\r\n      ids.push(songList[r].id);\r\n    }\r\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n    currentSongIndexStore.set(index);\r\n    playRepeatModelStore.set('repeat');\r\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n  }\r\n  //随机播放\r\n  function playListShuffleFun() {\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    currentPlayListStore.set(songList);\r\n    let ids = [];\r\n    for (let r = 0; r < songList.length; r++) {\r\n      ids.push(songList[r].id);\r\n    }\r\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n    let index = Math.floor(Math.random() * ($currentPlayListStore.length - 1));\r\n    playRepeatModelStore.set('shuffle');\r\n    currentSongIndexStore.set(index);\r\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n  }\r\n  async function getSongUrlFun(song) {\r\n    const res = await getSongUrl(song.id); //获取歌单url\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        currentSongStore.set(song);\r\n        localStorage.setItem('currentSong', JSON.stringify(song));\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\r\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n  function rightClickFun(e) {\r\n    if (e.detail.id === 'SearchLine' && isSearch) {\r\n      isSearch = false;\r\n    } else if (e.detail.id === 'SearchLine' && !isSearch) {\r\n      isSearch = true;\r\n      setTimeout(() => {\r\n        inputDom.focus();\r\n        inputDom.addEventListener('compositionstart', function (e) {\r\n          //非直接的文字输入时（键盘输入中文的拼音）\r\n          e.target.isNeedPrevent = true;\r\n        });\r\n        inputDom.addEventListener('compositionend', function (e) {\r\n          //直接输入文字后（键盘选择真实的汉字）\r\n          e.target.isNeedPrevent = false;\r\n        });\r\n        inputDom.addEventListener('input', inputchange);\r\n        inputDom.addEventListener('keydown', function (e) {\r\n          if (e.key === 'Enter') {\r\n            inputDom.blur();\r\n            searchFun();\r\n          }\r\n        });\r\n      }, 100);\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar\r\n  title={$userInfoStore.profile.nickname + '喜欢的歌曲'}\r\n  {isRefresh}\r\n  {rightIcons}\r\n  on:setRightIconClick={rightClickFun}\r\n/>\r\n<div class=\"play-list\">\r\n  {#if isSearch}\r\n    <div class=\"input-box\">\r\n      <form action=\"JavaScript:void 0\">\r\n        <input bind:this={inputDom} placeholder=\"请输入关键字\" type=\"search\" value={keywords} />\r\n      </form>\r\n      <button\r\n        on:click={() => {\r\n          inputDom.blur();\r\n          searchFun();\r\n        }}\r\n        style=\"background-color: {keywords === '' ? 'rgb(224, 224, 224)' : 'var(--primary-text-color)'};\r\n        color:{keywords === '' ? '#666' : '#fff'}\"\r\n      >\r\n        搜索\r\n      </button>\r\n    </div>\r\n  {/if}\r\n  <div class=\"today-title\">我喜欢的音乐</div>\r\n  <div class=\"today-desc\">\r\n    共 {songList.length} 首\r\n    {#if isSearch && keywords != ''}\r\n      ，其中 <span>{searchSongList.length}</span> 首包含『{keywords}』\r\n    {/if}\r\n  </div>\r\n  {#if isSearch && keywords != ''}\r\n    <div />\r\n  {:else}\r\n    <div class=\"btn\">\r\n      <div class=\"play\">\r\n        <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\r\n          <span class=\"icon\">\r\n            <PlayCircleLine size=\"20\" style=\"vertical-align: middle\" />\r\n          </span>\r\n          顺序播放\r\n        </Button>\r\n      </div>\r\n      <div class=\"play\">\r\n        <Button type=\"primary\" on:BtnClick={playListShuffleFun}>\r\n          <span class=\"icon\">\r\n            <ShuffleLine size=\"20\" style=\"vertical-align: middle\" />\r\n          </span>\r\n          随机播放\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n  <div>\r\n    {#if isSearch && keywords != ''}\r\n      <SongList songList={searchSongList} />\r\n    {:else}\r\n      <SongList {songList} />\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .input-box {\r\n    margin: 10px auto;\r\n    font-size: 20px;\r\n    display: flex;\r\n    padding: 0 20px;\r\n  }\r\n  .input-box form {\r\n    flex: auto;\r\n  }\r\n  .input-box form input {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0 5px;\r\n    border: none;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    line-height: 10px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    outline: none;\r\n    -webkit-appearance: none;\r\n  }\r\n  .input-box input:focus {\r\n    border: 1px solid var(--primary-text-color);\r\n  }\r\n  .input-box input:active {\r\n    border: 1px solid var(--primary-text-color);\r\n  }\r\n  .input-box button {\r\n    border: none;\r\n    padding: 0 8px;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    width: 48px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    font-size: 14px;\r\n    background-color: rgb(224, 224, 224);\r\n  }\r\n  .today-title {\r\n    text-align: center;\r\n    font-size: 46px;\r\n    color: var(--primary-text-color);\r\n    margin: 20px auto;\r\n    font-weight: bold;\r\n  }\r\n  .today-desc {\r\n    text-align: center;\r\n    font-size: 12px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .icon {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n  .btn {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n  }\r\n  .play {\r\n    padding: 0px 20px 10px 20px;\r\n    flex: 1;\r\n  }\r\n  .play-list {\r\n    padding-top: 50px;\r\n    padding-bottom: 70px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { push } from 'svelte-stack-router';\r\n  import { RefreshLine, ArrowRightSLine, PlayFill, HeartPulseFill } from 'svelte-remixicon';\r\n\r\n  import { Button, Title } from '../components/base';\r\n  import TopTitle from '../components/TopTitle.svelte';\r\n  import ListGrid from '../components/ListGrid.svelte';\r\n  import Songer from '../components/Singer.svelte';\r\n\r\n  import { getSongDetail, getSongUrl } from '../api/song';\r\n  import { userPlaylist, likedArtists } from '../api/user';\r\n  import { getPlaylistDetail, intelligenceList } from '../api/playlist';\r\n\r\n  import {\r\n    currentSongStore,\r\n    playStatusStore,\r\n    currentSongIndexStore,\r\n    currentPlayListStore,\r\n    isFMPlayStore,\r\n    playRepeatModelStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n  import { isLoginStore, isHomePageStore } from '../store/common';\r\n  import { userLikeSongIdsStore, userInfoStore, userLikeListIdStore } from '../store/user';\r\n\r\n  import { Toast, Alert, ripple } from '../utils/common';\r\n\r\n  let loveSongDom;\r\n  let infoDom;\r\n  $: randomList = [];\r\n  $: collectList = [];\r\n  $: createList = [];\r\n  $: randomFontSize = [];\r\n  $: randomTop = [];\r\n  $: randomleft = [];\r\n  $: randomIds = [];\r\n  $: randomAll = [];\r\n  $: isRequsetSucc = false;\r\n  $: isRefresh = false;\r\n  $: collectSongers = []; //收藏的歌手\r\n  let topTitleRightList = {\r\n    type: 'icon',\r\n    path: RefreshLine,\r\n  };\r\n  let newuserLikeSongIdsStore =\r\n    typeof $userLikeSongIdsStore === 'string' ? JSON.parse($userLikeSongIdsStore) : $userLikeSongIdsStore;\r\n  onMount(() => {\r\n    if (loveSongDom) {\r\n      ripple(loveSongDom);\r\n    }\r\n    if (infoDom) {\r\n      ripple(infoDom);\r\n    }\r\n    allOnMount();\r\n  });\r\n  //初始化页面事件\r\n  function allOnMount() {\r\n    if ($isLoginStore) {\r\n      randomFontSize = getRandom(10, 30, 10);\r\n      randomTop = getRandom(0, 200, 10);\r\n      randomleft = getRandom(-50, 300, 10);\r\n      randomIds = getRandom(0, JSON.parse(localStorage.getItem('useLoveSongIds')).length, 10);\r\n      let ids = [];\r\n      for (let i = 0; i < randomIds.length; i++) {\r\n        ids.push(JSON.parse(localStorage.getItem('useLoveSongIds'))[randomIds[i]]);\r\n      }\r\n      getSongDetailFun(ids.join(','));\r\n      userPlaylistFun();\r\n      likedArtistsFun();\r\n    }\r\n  }\r\n  //获取收藏的歌手\r\n  async function likedArtistsFun() {\r\n    const res = await likedArtists({ limit: 6 });\r\n    if (res.code === 200) {\r\n      collectSongers = res.data;\r\n    }\r\n  }\r\n  // 全部歌手\r\n  function collectSongersFun() {\r\n    isHomePageStore.set(false);\r\n    push('/allCollectSongers');\r\n  }\r\n  //获取用户收藏歌单ID列表\r\n  async function userPlaylistFun(login) {\r\n    const res = await userPlaylist({ uid: $userInfoStore.account.id });\r\n    if (res.code === 200) {\r\n      isRefresh = false;\r\n      let createListL = [];\r\n      let collectListL = [];\r\n      //去除喜欢的音乐\r\n      if (\r\n        res.playlist[0].creator.userId === $userInfoStore.account.id &&\r\n        res.playlist[0].name.substr(-5) === '喜欢的音乐'\r\n      ) {\r\n        userLikeListIdStore.set(res.playlist[0].id);\r\n        localStorage.setItem('userLikeListId', res.playlist[0].id);\r\n        res.playlist.splice(0, 1);\r\n      }\r\n      for (let i = 0; i < res.playlist.length; i++) {\r\n        if (res.playlist[i].creator.userId === $userInfoStore.account.id) {\r\n          createListL.push(res.playlist[i]);\r\n        } else {\r\n          collectListL.push(res.playlist[i]);\r\n        }\r\n      }\r\n      //创建的\r\n      createList = createListL.length >= 10 ? createListL.slice(0, 10) : createListL;\r\n      //收藏的\r\n      collectList = collectListL.length >= 10 ? collectListL.slice(0, 10) : collectListL;\r\n    } else {\r\n      Toast('获取收藏歌单失败');\r\n    }\r\n  }\r\n  //获取指定数量、指定范围内随机数\r\n  function getRandom(n, m, sum) {\r\n    let arr = [];\r\n    for (let i = 0; i < sum; i++) {\r\n      arr.push(Math.floor(Math.random() * (m - n + 1) + n));\r\n    }\r\n    return arr;\r\n  }\r\n  //所有获取歌曲详情\r\n  async function getSongDetailFun(songIds) {\r\n    isRequsetSucc = false;\r\n    if (songIds.slice(0, 1) === ',') {\r\n      songIds = songIds.substr(1);\r\n    }\r\n    songIds = songIds.replace(',,', ',');\r\n    const res = await getSongDetail(songIds, true);\r\n    if (res.code === 200) {\r\n      randomList = res.songs;\r\n      randomAll = [];\r\n      for (let u = 0; u < randomList.length; u++) {\r\n        randomAll.push({\r\n          name: randomList[u].name,\r\n          size: randomFontSize[u],\r\n          top: randomTop[u],\r\n          left: randomleft[u],\r\n          img: randomList[u].al.picUrl,\r\n          id: randomList[u].id,\r\n        });\r\n      }\r\n      isRequsetSucc = true;\r\n    }\r\n  }\r\n  //刷新\r\n  function topClickFun(event) {\r\n    if (event.detail.index === 0) {\r\n      allOnMount();\r\n    }\r\n  }\r\n  //去喜欢歌曲页面\r\n  function goToLoveListFun() {\r\n    isHomePageStore.set(false);\r\n    push('/loveListDetail');\r\n  }\r\n  //创建歌单全部\r\n  function createTitleFun() {\r\n    isHomePageStore.set(false);\r\n    push('/myAllPlayList?create');\r\n  }\r\n  //收藏歌单全部\r\n  function collectTitleFun() {\r\n    isHomePageStore.set(false);\r\n    push('/myAllPlayList?collect');\r\n  }\r\n  //去设置页面\r\n  function toSettingFun() {\r\n    isHomePageStore.set(false);\r\n    push('/setting');\r\n  }\r\n  //快速播放\r\n  function quickPlayFun(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    getPlaylistDetailFun();\r\n  }\r\n  //心动模式\r\n  async function heartPlayFun(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    //从喜欢的歌曲id中随机出一首开启心动模式\r\n    const randomLikeSongId = newuserLikeSongIdsStore[Math.floor(Math.random() * newuserLikeSongIdsStore.length)];\r\n    const res = await intelligenceList({ id: randomLikeSongId, pid: $userLikeListIdStore });\r\n    if (res.code === 200) {\r\n      getSongUrl(randomLikeSongId);\r\n      let songsInfoList = [];\r\n      for (let r = 0; r < res.data.length; r++) {\r\n        songsInfoList.push(res.data[r].songInfo);\r\n      }\r\n      getFirstDetail(randomLikeSongId, songsInfoList);\r\n    }\r\n  }\r\n  async function getFirstDetail(randomLikeSongId, data) {\r\n    const res = await getSongDetail(randomLikeSongId, true);\r\n    if (res.code === 200) {\r\n      let songs = [res.songs[0], ...data];\r\n      currentPlayListStore.set(songs);\r\n      let ids = [];\r\n      for (let r = 0; r < songs.length; r++) {\r\n        ids.push(songs[r].id);\r\n      }\r\n      localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n      playListFun(true);\r\n    }\r\n  }\r\n  //请求歌单详情\r\n  async function getPlaylistDetailFun() {\r\n    const res = await getPlaylistDetail($userLikeListIdStore); //获取歌单详情\r\n    if (res.code === 200) {\r\n      let songIdList = [];\r\n      for (let i = 0; i < res.playlist.trackIds.length; i++) {\r\n        songIdList.push(res.playlist.trackIds[i].id);\r\n      }\r\n      if (songIdList.length > 400) {\r\n        Toast('歌曲较多，拼命加载中，请稍等！', 2000);\r\n      }\r\n      getQuickSongDetailFun(songIdList.join(','));\r\n      getSongUrl(songIdList[0]);\r\n    }\r\n  }\r\n  //获取所有歌曲详情\r\n  async function getQuickSongDetailFun(songIds) {\r\n    const res = await getSongDetail(songIds);\r\n    if (res.code === 200) {\r\n      currentPlayListStore.set(res.songs);\r\n      playListFun(false);\r\n    }\r\n  }\r\n  //播放列表\r\n  function playListFun(isHeart) {\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    currentSongIndexStore.set(0);\r\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore], isHeart);\r\n  }\r\n  async function getSongUrlFun(song, isHeart) {\r\n    const res = await getSongUrl(song.id); //获取歌单url\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        currentSongStore.set(song);\r\n        localStorage.setItem('currentSong', JSON.stringify(song));\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        isHeart ? playRepeatModelStore.set('heart') : playRepeatModelStore.set('repeat');\r\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\r\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n      } else {\r\n        Alert(\r\n          isHeart\r\n            ? `😂 心动模式随机的第一首「${song.name}」无法播放！可能是版权原因......吧！请重新开启心动模式。`\r\n            : `😂 真不巧，您喜欢歌单的第一首--「${song.name}」就无法播放！可能是版权原因......吧！请进入音乐列表选择后面的歌曲播放。`\r\n        );\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<TopTitle\r\n  title=\"我的\"\r\n  desc=\"曲库与设置\"\r\n  {isRefresh}\r\n  topTitleRightList={$isLoginStore ? topTitleRightList : null}\r\n  on:IconClick={topClickFun}\r\n/>\r\n<div class=\"mine\">\r\n  {#if $isLoginStore}\r\n    <div class=\"login\">\r\n      <div class=\"info-box\" on:click={toSettingFun} bind:this={infoDom}>\r\n        <div class=\"left\">\r\n          <div class=\"avatar\">\r\n            <img src={$userInfoStore.profile.avatarUrl.replace(/^http:/, 'https:') + '?param=180y180'} alt=\"\" />\r\n          </div>\r\n          <div class=\"info\">\r\n            <div class=\"nicename\">{$userInfoStore.profile.nickname}</div>\r\n            <div class=\"signature\">{$userInfoStore.profile.signature || ''}</div>\r\n            <div class=\"tag\">\r\n              {#if $userInfoStore.account.vipType !== 0}\r\n                <span class=\"vip\">\r\n                  <img class=\"cvip\" src=\"/images/vip/vip.png\" alt=\"\" />\r\n                  <span class=\"vip-text\">黑胶VIP</span>\r\n                </span>\r\n              {:else}\r\n                <span v-else class=\"text\">\r\n                  {$userInfoStore.profile.signature}\r\n                </span>\r\n              {/if}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"more\">\r\n          <ArrowRightSLine size=\"26\" style=\"vertical-align: middle\" />\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"love-song-box\"\r\n        style=\"background-image: url({$userInfoStore.profile.avatarUrl.replace(/^http:/, 'https:') +\r\n          '?param=180y180'});\"\r\n      >\r\n        <div class=\"love-song\" on:click={goToLoveListFun} bind:this={loveSongDom}>\r\n          <div class=\"love-title\">\r\n            <div class=\"love-title-text\">\r\n              我喜欢的音乐<span class=\"love-title-number\">{newuserLikeSongIdsStore.length}首</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"random\">\r\n            {#if isRequsetSucc}\r\n              {#each randomAll as item, i}\r\n                <div\r\n                  class=\"random-item\"\r\n                  style=\"height:{item.size}px;line-height:{item.size}px;top: {i *\r\n                    26}px;left: {item.left}px;font-size:{item.size}px;\"\r\n                >\r\n                  <img\r\n                    class=\"random-img\"\r\n                    style=\"width:{item.size}px;height:{item.size}px;top:{item.size / 8}px\"\r\n                    src={item.img.replace(/^http:/, 'https:') + '?param=100y100'}\r\n                    alt=\"\"\r\n                  />\r\n                  {item.name}\r\n                </div>\r\n              {/each}\r\n            {:else}\r\n              <span style=\"line-height: 100px;position: relative;left: 50%;margin-left: -50px;top:40px\">\r\n                <embed width=\"100\" height=\"100\" src=\"/images/Ripple.svg\" type=\"image/svg+xml\" />\r\n              </span>\r\n            {/if}\r\n          </div>\r\n          <div class=\"quick-btn\">\r\n            <div class=\"quick-btn-item\" on:click={quickPlayFun}>\r\n              <PlayFill size=\"24\" style=\"vertical-align: middle\" />\r\n            </div>\r\n            <div class=\"quick-btn-item\" on:click={heartPlayFun}>\r\n              <span class:heart-beat={$playRepeatModelStore === 'heart' && $playStatusStore}>\r\n                <HeartPulseFill size=\"24\" style=\"vertical-align: middle\" />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {#if collectList.length > 0}\r\n        <div class=\"list-grid\">\r\n          <ListGrid title=\"收藏的歌单\" playList={collectList} iconText=\"全部\" on:titleClick={collectTitleFun} />\r\n        </div>\r\n      {/if}\r\n      {#if createList.length > 0}\r\n        <div class=\"list-grid\">\r\n          <ListGrid title=\"创建的歌单\" playList={createList} iconText=\"全部\" on:titleClick={createTitleFun} />\r\n        </div>\r\n      {/if}\r\n      {#if collectSongers.length > 0}\r\n        <Title title=\"收藏的歌手\" iconText=\"全部\" isShowRight={true} on:TitleClick={collectSongersFun} />\r\n        <div class=\"songer-box\">\r\n          {#each collectSongers as songer}\r\n            <Songer {songer} coverSize={330} />\r\n          {/each}\r\n        </div>\r\n      {/if}\r\n    </div>\r\n  {:else}\r\n    <div class=\"noLogin\">\r\n      <div>\r\n        <img class=\"login-img\" src=\"/images/login.png\" alt=\"\" />\r\n      </div>\r\n      <div class=\"tip\">账号信息需要登录</div>\r\n      <div class=\"login-btn\">\r\n        <Button\r\n          type=\"primary\"\r\n          on:BtnClick={() => {\r\n            isHomePageStore.set(false);\r\n            push('/login');\r\n          }}\r\n        >\r\n          立即登录\r\n        </Button>\r\n      </div>\r\n      <div style=\"margin-top: 40px;\">\r\n        <Button\r\n          on:BtnClick={() => {\r\n            isHomePageStore.set(false);\r\n            push('/about');\r\n          }}\r\n        >\r\n          关于\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .songer-box {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(3, 100px);\r\n    padding: 0 20px;\r\n  }\r\n  .list-grid {\r\n    margin-top: 30px;\r\n  }\r\n  .quick-btn {\r\n    z-index: 5;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .quick-btn-item {\r\n    width: 50px;\r\n    height: 50px;\r\n    margin: 10px;\r\n    border-radius: 25px;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    color: var(--primary-text-color);\r\n    text-align: center;\r\n    line-height: 50px;\r\n  }\r\n  .nicename {\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n  }\r\n  .signature {\r\n    font-size: 12px;\r\n    color: #666;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 1;\r\n    max-width: 200px;\r\n  }\r\n  .more {\r\n    line-height: 62px;\r\n  }\r\n  .cvip {\r\n    width: 24px;\r\n    height: 12px;\r\n  }\r\n  .vip-text {\r\n    position: relative;\r\n    top: -2px;\r\n    font-size: 12px;\r\n  }\r\n  .mine {\r\n    font-size: 14px;\r\n    padding-bottom: 120px;\r\n  }\r\n  .info-box {\r\n    padding: 10px;\r\n    display: flex;\r\n    margin: auto 20px;\r\n    justify-content: space-between;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n  }\r\n  .left {\r\n    display: flex;\r\n  }\r\n  .avatar {\r\n    width: 60px;\r\n    height: 60px;\r\n    margin-right: 10px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    border: rgb(236, 236, 236) solid 1px;\r\n  }\r\n  .avatar img {\r\n    width: 100%;\r\n  }\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n  .love-song-box {\r\n    border-radius: 10px;\r\n    object-fit: cover;\r\n    background-position: center;\r\n    margin: 20px;\r\n    height: 335px;\r\n    overflow: hidden;\r\n    background-size: 100%;\r\n  }\r\n  .love-song {\r\n    height: 335px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    backdrop-filter: blur(14px);\r\n    -webkit-backdrop-filter: blur(14px);\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n  .random {\r\n    flex: 8;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    color: #fff;\r\n    position: relative;\r\n    font-size: 16px;\r\n  }\r\n  .random-item {\r\n    position: absolute;\r\n    left: 100px;\r\n    white-space: nowrap;\r\n    animation: move 60s infinite;\r\n    -webkit-animation: move 60s infinite;\r\n  }\r\n  @keyframes move {\r\n    0% {\r\n      transform: translateX(-50%);\r\n    }\r\n    50% {\r\n      transform: translateX(50%);\r\n    }\r\n    100% {\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n  .random-img {\r\n    border-radius: 10%;\r\n    position: relative;\r\n  }\r\n  .love-title {\r\n    flex: 2;\r\n    font-size: 36px;\r\n    text-align: center;\r\n    color: #fff;\r\n  }\r\n  .love-title-text {\r\n    font-weight: bold;\r\n    line-height: 67px;\r\n  }\r\n  .love-title-number {\r\n    font-size: 16px;\r\n    margin-left: 6px;\r\n    line-height: 67px;\r\n  }\r\n  .noLogin {\r\n    width: 80%;\r\n    margin: auto;\r\n  }\r\n  .login-img {\r\n    width: 80%;\r\n  }\r\n  .tip {\r\n    margin: 20px 0;\r\n    font-size: 18px;\r\n    text-align: center;\r\n  }\r\n  .heart-beat {\r\n    display: inline-block;\r\n    /* // 一个完整动画的持续时间 */\r\n    animation-duration: 1s;\r\n    /* // 动画循环次数：无限循环 */\r\n    animation-iteration-count: infinite;\r\n    /* // 调用的动画名，对应上面的 .heart-bounce */\r\n    animation-name: heart-bounce;\r\n  }\r\n  @keyframes heart-bounce {\r\n    from {\r\n      transform: scale(1);\r\n    }\r\n    12% {\r\n      transform: scale(1.02);\r\n    }\r\n    20% {\r\n      transform: scale(0.99);\r\n    }\r\n    28% {\r\n      transform: scale(0.98);\r\n    }\r\n    32% {\r\n      transform: scale(1.2);\r\n    }\r\n    38% {\r\n      transform: scale(0.96);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n    58% {\r\n      transform: scale(0.98);\r\n    }\r\n    70% {\r\n      transform: scale(0.9);\r\n    }\r\n    80% {\r\n      transform: scale(0.98);\r\n    }\r\n    to {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { onResume, search } from 'svelte-stack-router';\r\n  import Lazy from 'svelte-lazy';\r\n\r\n  import { NavBar, Pagination } from '../components/base';\r\n  import MiniPlayListCover from '../components/MiniPlayListCover.svelte';\r\n\r\n  import { defaultResumableStore } from '../store/common';\r\n\r\n  import { topPlaylist, highQualityPlaylist } from '../api/playlist';\r\n\r\n  import { getRequest } from '../utils/common';\r\n\r\n  $: playList = [];\r\n  $: hasMore = true;\r\n  $: offset = 0;\r\n  $: paginationHeight = 0;\r\n  $: searchObj = {};\r\n  $: before = 0;\r\n  let limit = 20;\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      playList = [];\r\n      hasMore = true;\r\n      offset = 0;\r\n      paginationHeight = 0;\r\n      before = 0;\r\n      searchObj = {};\r\n      allMount();\r\n    }\r\n  });\r\n  onMount(() => {\r\n    allMount();\r\n  });\r\n  function allMount() {\r\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\r\n    searchObj = getRequest($search);\r\n    if (searchObj.type === 'high') {\r\n      highQualityPlaylistFun(searchObj.cat);\r\n    } else {\r\n      topPlaylistFun(searchObj.cat);\r\n    }\r\n  }\r\n  //热门歌单\r\n  async function topPlaylistFun(cat) {\r\n    const res = await topPlaylist({ limit, cat: cat === '默认' ? '全部' : cat, offset });\r\n    if (res.code === 200) {\r\n      playList = playList.concat(res.playlists);\r\n      hasMore = res.more;\r\n    }\r\n  }\r\n  //精品歌单\r\n  async function highQualityPlaylistFun(cat) {\r\n    const res = await highQualityPlaylist({ limit, cat: cat === '默认' ? '全部' : cat, before });\r\n    if (res.code === 200) {\r\n      playList = playList.concat(res.playlists);\r\n      hasMore = res.more;\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar\r\n  title={searchObj.cat === '官方' ? '官方歌单' : `${searchObj.cat} - ${searchObj.type === 'top' ? '精选' : '精品'}歌单`}\r\n/>\r\n<div class=\"comment-page\">\r\n  <Pagination\r\n    bottomHeight={70}\r\n    {paginationHeight}\r\n    items={playList}\r\n    let:item\r\n    let:index\r\n    {hasMore}\r\n    grid={2}\r\n    on:load={() => {\r\n      if (hasMore) {\r\n        if (searchObj.type === 'high') {\r\n          before = playList.slice(-1)[0].updateTime;\r\n          highQualityPlaylistFun(searchObj.cat);\r\n        } else {\r\n          offset = playList.length;\r\n          topPlaylistFun(searchObj.cat);\r\n        }\r\n      }\r\n    }}\r\n  >\r\n    <MiniPlayListCover\r\n      name={item.name}\r\n      coverImgUrl={item.coverImgUrl}\r\n      id={item.id}\r\n      width={150}\r\n      playCount={item.playCount}\r\n      trackCount={item.trackCount}\r\n    />\r\n  </Pagination>\r\n</div>\r\n\r\n<style>\r\n  .comment-page {\r\n    padding: 50px 20px;\r\n    font-size: 16px;\r\n    color: #333333;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { onResume, search } from 'svelte-stack-router';\r\n\r\n  import { NavBar, Pagination } from '../components/base';\r\n  import Song from '../components/Song.svelte';\r\n\r\n  import { defaultResumableStore, coverImgUrlStore } from '../store/common';\r\n  import {\r\n    currentSongStore,\r\n    playStatusStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    isFMPlayStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n\r\n  import { getAllSongs } from '../api/songer';\r\n  import { getSongUrl } from '../api/song';\r\n\r\n  import { getRequest, Toast } from '../utils/common';\r\n\r\n  $: songList = [];\r\n  $: hasMore = true;\r\n  $: offset = 0;\r\n  $: paginationHeight = 0;\r\n  let limit = 20;\r\n  $: searchObj = {};\r\n  let typeList = [\r\n    { index: 0, type: 'hot', text: '最热' },\r\n    { index: 1, type: 'time', text: '最近' },\r\n  ];\r\n  $: active = 0;\r\n  $: order = typeList[0].type;\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      songList = [];\r\n      hasMore = true;\r\n      offset = 0;\r\n      active = 0;\r\n      order = 'hot';\r\n      searchObj = getRequest($search);\r\n      paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\r\n      getAllSongsFun(0, order);\r\n    }\r\n  });\r\n\r\n  onMount(() => {\r\n    searchObj = getRequest($search);\r\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\r\n    getAllSongsFun(0, order);\r\n  });\r\n  //热门歌手\r\n  async function getAllSongsFun(offset, order) {\r\n    const res = await getAllSongs(searchObj.id, order, limit, offset);\r\n    if (res.code === 200) {\r\n      songList = songList.concat(res.songs);\r\n      hasMore = res.more;\r\n    }\r\n  }\r\n  function playListFun(index) {\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    let newcurrentPlayList = $currentPlayListStore;\r\n    let newPlayListIds = [];\r\n    for (let r = 0; r < newcurrentPlayList.length; r++) {\r\n      newPlayListIds.push(newcurrentPlayList[r].id);\r\n    }\r\n    if (newPlayListIds.includes(songList[index].id)) {\r\n      currentSongIndexStore.set(newPlayListIds.indexOf(songList[index].id));\r\n      getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n    } else {\r\n      newcurrentPlayList.splice($currentSongIndexStore + 1, 0, songList[index]);\r\n      currentPlayListStore.set(newcurrentPlayList);\r\n      let ids = [];\r\n      for (let r = 0; r < newcurrentPlayList.length; r++) {\r\n        ids.push(newcurrentPlayList[r].id);\r\n      }\r\n      localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n      currentSongIndexStore.set($currentSongIndexStore + 1);\r\n      getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n    }\r\n  }\r\n  async function getSongUrlFun(song) {\r\n    const res = await getSongUrl(song.id); //获取歌单url\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        song.al.picUrl = $coverImgUrlStore;\r\n        currentSongStore.set(song);\r\n        localStorage.setItem('currentSong', JSON.stringify(song));\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\r\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n  function getSongClick(event) {\r\n    playListFun(event.detail.index);\r\n  }\r\n</script>\r\n\r\n<NavBar title={`${searchObj.name}的全部歌曲`} />\r\n\r\n<div class=\"comment-page\">\r\n  <div class=\"type\">\r\n    {#each typeList as t}\r\n      <div\r\n        class=\"type-item\"\r\n        class:active={active === t.index}\r\n        on:click={() => {\r\n          active = t.index;\r\n          order = t.type;\r\n          songList = [];\r\n          hasMore = true;\r\n          offset = 0;\r\n          getAllSongsFun(offset, order);\r\n        }}\r\n      >\r\n        {t.text}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n  <div class=\"active-line\" style=\"left: {20 + ((localStorage.getItem('fullWidth') - 40) / 2) * active}px;\" />\r\n  <div style=\"margin-top:40px\">\r\n    <Pagination\r\n      bottomHeight={70}\r\n      {paginationHeight}\r\n      items={songList}\r\n      let:item\r\n      let:index\r\n      {hasMore}\r\n      on:load={() => {\r\n        if (hasMore) {\r\n          offset = songList.length;\r\n          getAllSongsFun(offset, order);\r\n        }\r\n      }}\r\n    >\r\n      <Song song={item} {index} customCoverUrl={$coverImgUrlStore + '?param=100y100'} on:songClick={getSongClick} />\r\n    </Pagination>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .comment-page {\r\n    padding: 50px 0;\r\n    font-size: 16px;\r\n    color: #333333;\r\n  }\r\n  .type {\r\n    background-color: #fff;\r\n    position: fixed;\r\n    top: 50px;\r\n    width: 100%;\r\n    display: flex;\r\n    z-index: 50;\r\n  }\r\n  .type-item {\r\n    font-weight: bold;\r\n    padding: 10px 0 8px;\r\n    text-align: center;\r\n    flex: 1;\r\n  }\r\n  .active {\r\n    color: var(--primary-text-color);\r\n  }\r\n  .active-line {\r\n    position: fixed;\r\n    top: 86px;\r\n    margin-bottom: 10px;\r\n    height: 2px;\r\n    width: 167.5px;\r\n    background-color: var(--primary-text-color);\r\n    left: 0px;\r\n    transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\r\n    -webkit-transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { onResume } from 'svelte-stack-router';\r\n\r\n  import { NavBar, Pagination } from '../components/base';\r\n  import Songer from '../components/Singer.svelte';\r\n\r\n  import { defaultResumableStore } from '../store/common';\r\n\r\n  import { topArtists } from '../api/songer';\r\n\r\n  $: hotSongers = [];\r\n  $: hasMore = true;\r\n  $: offset = 0;\r\n  $: paginationHeight = 0;\r\n  let limit = 20;\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      hotSongers = [];\r\n      hasMore = true;\r\n      offset = 0;\r\n      paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\r\n      topArtistsFun();\r\n    }\r\n  });\r\n\r\n  onMount(() => {\r\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\r\n    topArtistsFun(0);\r\n  });\r\n  //热门歌手\r\n  async function topArtistsFun(offset) {\r\n    const res = await topArtists(limit, offset);\r\n    if (res.code === 200) {\r\n      hotSongers = hotSongers.concat(res.artists);\r\n      hasMore = res.more;\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title={`热门歌手 ${hotSongers.length} 位`} />\r\n<div class=\"comment-page\">\r\n  <Pagination\r\n    bottomHeight={70}\r\n    {paginationHeight}\r\n    items={hotSongers}\r\n    let:item\r\n    let:index\r\n    {hasMore}\r\n    grid={3}\r\n    on:load={() => {\r\n      if (hasMore) {\r\n        offset = hotSongers.length;\r\n        topArtistsFun(offset);\r\n      }\r\n    }}\r\n  >\r\n    <Songer songer={item} coverSize={200} />\r\n  </Pagination>\r\n</div>\r\n\r\n<style>\r\n  .comment-page {\r\n    padding: 50px 20px;\r\n    font-size: 16px;\r\n    color: #333333;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, afterUpdate } from 'svelte';\r\n  import { ThumbUpLine, ThumbUpFill } from 'svelte-remixicon';\r\n\r\n  import { NavBar, Divider, Pagination } from '../components/base';\r\n\r\n  import { getHotComment, likeComment } from '../api/song';\r\n\r\n  import { currentSongStore } from '../store/play';\r\n  import { isLoginStore } from '../store/common';\r\n\r\n  import { formatTime, Toast, tranNumber, emojiToImg } from '../utils/common';\r\n\r\n  $: totalCount = 0;\r\n  $: hotComments = [];\r\n  $: currentSongId = 0; //当前歌曲 ID，用于计算更新页面\r\n  $: hasMore = true;\r\n  $: offset = 0;\r\n  $: paginationHeight = 0;\r\n  \r\n  onMount(() => {\r\n    paginationHeight = document.documentElement.clientHeight || document.body.clientHeight - 120;\r\n    getHotCommentFun(0);\r\n  });\r\n  afterUpdate(() => {\r\n    if (currentSongId !== $currentSongStore.id) {\r\n      hotComments = [];\r\n      offset = 0;\r\n      hasMore = true;\r\n      getHotCommentFun(offset);\r\n    }\r\n  });\r\n  async function getHotCommentFun(offset) {\r\n    currentSongId = $currentSongStore.id;\r\n    const res = await getHotComment($currentSongStore.id, offset);\r\n    if (res.code === 200) {\r\n      totalCount = res.total;\r\n      hotComments = hotComments.concat(res.hotComments);\r\n      hasMore = res.hasMore;\r\n      // 去除云村编辑部的广告\r\n      hotComments = hotComments.filter(item => item.user.nickname !== '云村评论编辑部');\r\n      for (let r = 0; r < hotComments.length; r++) {\r\n        //处理 emoji 表情显示\r\n        hotComments[r].content = emojiToImg(hotComments[r].content);\r\n      }\r\n    }\r\n  }\r\n  async function commentClickFun(commentId, liked) {\r\n    if ($isLoginStore) {\r\n      const res = await likeComment($currentSongStore.id, commentId, 0, liked ? 0 : 1);\r\n      if (res.code === 200) {\r\n        for (let y = 0; y < hotComments.length; y++) {\r\n          if (hotComments[y].commentId === commentId) {\r\n            hotComments[y].liked = !liked;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      Toast('请登录');\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title={`热门评论（${totalCount || 0}）`} />\r\n<div class=\"comment-page\">\r\n  <Pagination\r\n    bottomHeight={70}\r\n    {paginationHeight}\r\n    items={hotComments}\r\n    let:item\r\n    let:index\r\n    {hasMore}\r\n    on:load={() => {\r\n      if (hasMore) {\r\n        offset = hotComments.length;\r\n        getHotCommentFun(offset);\r\n      }\r\n    }}\r\n  >\r\n    <div>\r\n      <div class=\"comment\">\r\n        <!-- <div class=\"floor\">{index + 1}楼</div> -->\r\n        <div class=\"top\">\r\n          <div class=\"user\">\r\n            <div class=\"cover\">\r\n              <img src={item.user.avatarUrl.replace(/^http:/, 'https:') + '?param=50y50'} alt=\"\" />\r\n            </div>\r\n            <div class=\"info\">\r\n              <div class=\"name\">\r\n                {item.user.nickname}\r\n                {#if item.user.authStatus === 1}\r\n                  <span class=\"vip\">\r\n                    <img class=\"authStatus\" src=\"/images/auth.png\" alt=\"\" />\r\n                  </span>\r\n                {/if}\r\n                {#if item.user.vipType !== 0}\r\n                  <span class=\"vip\">\r\n                    <img class=\"cvip\" src={`/images/vip/${item.user.vipRights.redVipLevel}.png`} alt=\"\" />\r\n                  </span>\r\n                {/if}\r\n              </div>\r\n              <div class=\"time\">\r\n                {formatTime(item.time, 'yyyy-MM-dd hh:mm:ss')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"like\"\r\n            on:click={() => commentClickFun(item.commentId, item.liked)}\r\n            style=\"color:{item.liked ? 'var(--primary-text-color)' : '#666'}\"\r\n          >\r\n            <span class=\"liked-span\">\r\n              {#if item.liked}\r\n                <ThumbUpFill size=\"12\" style=\"vertical-align: middle;margin-left:4px;\" />\r\n              {:else}\r\n                <ThumbUpLine size=\"12\" style=\"vertical-align: middle;margin-left:4px\" />\r\n              {/if}\r\n            </span>{tranNumber(item.likedCount)}\r\n          </div>\r\n        </div>\r\n        <div class=\"content\">\r\n          {@html item.content}\r\n          {#if item.beReplied && item.beReplied.length > 0}\r\n            <div class=\"beReplied\">\r\n              @ {item.beReplied[0].user.nickname}：{item.beReplied[0].content}\r\n            </div>\r\n          {/if}\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </div>\r\n  </Pagination>\r\n</div>\r\n\r\n<style>\r\n  .cvip {\r\n    width: 29.1667px;\r\n    height: 10px;\r\n  }\r\n  .authStatus {\r\n    width: 10px;\r\n    height: 10px;\r\n  }\r\n  .beReplied {\r\n    color: #8a8a8a;\r\n    font-size: 10px;\r\n    padding: 4px;\r\n    margin-top: 4px;\r\n    border-radius: 4px;\r\n    background-color: #ebebeb;\r\n  }\r\n  .comment-page {\r\n    padding: 50px 10px 70px;\r\n    font-size: 16px;\r\n    color: #333333;\r\n  }\r\n  .comment {\r\n    margin: 20px auto;\r\n  }\r\n  .top {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .cover {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 15px;\r\n    overflow: hidden;\r\n    margin-right: 10px;\r\n  }\r\n  .cover img {\r\n    width: 100%;\r\n  }\r\n  .user {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    font-size: 12px;\r\n  }\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n  .time {\r\n    font-size: 10px;\r\n    color: #888;\r\n  }\r\n  .like {\r\n    color: #666;\r\n    font-size: 12px;\r\n    line-height: 30px;\r\n  }\r\n  .liked-span {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n  .content {\r\n    text-align: justify;\r\n    margin-top: 10px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { search, onResume } from 'svelte-stack-router';\r\n\r\n  import { NavBar } from '../components/base';\r\n  import MiniPlayListCover from '../components/MiniPlayListCover.svelte';\r\n\r\n  import { userPlaylist } from '../api/user';\r\n\r\n  import { userInfoStore } from '../store/user';\r\n  import { defaultResumableStore } from '../store/common';\r\n\r\n  import { Alert } from '../utils/common';\r\n\r\n  $: playList = [];\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      userPlaylistFun();\r\n    }\r\n  });\r\n\r\n  onMount(() => {\r\n    userPlaylistFun();\r\n  });\r\n  //获取用户收藏歌单ID列表\r\n  async function userPlaylistFun(login) {\r\n    const res = await userPlaylist({\r\n      uid: $userInfoStore.account.id,\r\n    });\r\n    if (res.code === 200) {\r\n      let createListL = [];\r\n      let collectListL = [];\r\n      //去除喜欢的音乐\r\n      if (\r\n        res.playlist[0].creator.userId === $userInfoStore.account.id &&\r\n        res.playlist[0].name.substr(-5) === '喜欢的音乐'\r\n      ) {\r\n        res.playlist.splice(0, 1);\r\n      }\r\n      for (let i = 0; i < res.playlist.length; i++) {\r\n        if (res.playlist[i].creator.userId === $userInfoStore.account.id) {\r\n          createListL.push(res.playlist[i]);\r\n        } else {\r\n          collectListL.push(res.playlist[i]);\r\n        }\r\n      }\r\n      playList = $search === '?create' ? createListL : collectListL;\r\n    } else {\r\n      Alert('获取收藏歌单失败');\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title={$search === '?create' ? '创建的歌单' : '收藏的歌单'} />\r\n\r\n<div class=\"play-list-page\">\r\n  {#each playList as play}\r\n    <Lazy height={180}>\r\n      <MiniPlayListCover\r\n        name={play.name}\r\n        coverImgUrl={play.coverImgUrl}\r\n        id={play.id}\r\n        playCount={play.playCount}\r\n        trackCount={play.trackCount}\r\n      />\r\n    </Lazy>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .play-list-page {\r\n    padding: 60px 20px 70px;\r\n    font-size: 16px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n  .play-list-page:after {\r\n    content: '';\r\n    width: 105px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { onResume } from 'svelte-stack-router';\r\n  import { PlayCircleLine, ChatHeartFill, ChatHeartLine } from 'svelte-remixicon';\r\n\r\n  import { Button, NavBar } from '../components/base';\r\n  import SongList from '../components/SongList.svelte';\r\n\r\n  import { playListIdStore, playListDetailStore } from '../store/playList';\r\n  import { isLoginStore, isLoadingStore, defaultResumableStore } from '../store/common';\r\n  import {\r\n    currentSongStore,\r\n    playStatusStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    isFMPlayStore,\r\n    playRepeatModelStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n  import { userInfoStore } from '../store/user';\r\n\r\n  import { getPlaylistDetail, subscribePlaylist } from '../api/playlist';\r\n  import { getSongUrl, getSongDetail } from '../api/song';\r\n\r\n  import { formatTime, Toast, cutArray } from '../utils/common';\r\n\r\n  let coverDom;\r\n  $: title = '歌单详情';\r\n  $: description = '';\r\n  $: alphaNumber = 0; //NavBar透明度的值\r\n  $: songList = [];\r\n  $: coverImgUrl = '/images/defaultCover.png';\r\n  $: name = '歌单名称';\r\n  $: updateTime = new Date().getTime();\r\n  $: creator = {\r\n    nickname: '创建者',\r\n    avatarUrl: '/images/defaultCover.png',\r\n    id: 0,\r\n  };\r\n  $: collect = false;\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      songList = [];\r\n      if ($isLoginStore) {\r\n        const ids = JSON.parse(localStorage.getItem('usePlayListIds'));\r\n        collect = ids.includes($playListIdStore);\r\n      } else {\r\n        collect = false;\r\n      }\r\n      getPlaylistDetailFun();\r\n    }\r\n  });\r\n  onMount(() => {\r\n    if ($isLoginStore) {\r\n      const ids = JSON.parse(localStorage.getItem('usePlayListIds'));\r\n      collect = ids.includes($playListIdStore);\r\n    } else {\r\n      collect = false;\r\n    }\r\n    getPlaylistDetailFun();\r\n  });\r\n  async function getPlaylistDetailFun() {\r\n    const res = await getPlaylistDetail($playListIdStore); //获取歌单详情\r\n    if (res.code === 200) {\r\n      isLoadingStore.set(true);\r\n      let songIdList = [];\r\n      for (let i = 0; i < res.playlist.trackIds.length; i++) {\r\n        songIdList.push(res.playlist.trackIds[i].id);\r\n      }\r\n      description = res.playlist.description ? res.playlist.description : '';\r\n      coverImgUrl = res.playlist.coverImgUrl;\r\n      name = title = res.playlist.name;\r\n      updateTime = res.playlist.updateTime;\r\n      creator = res.playlist.creator;\r\n      let cutSongIdList = cutArray(songIdList);\r\n      for (let t = 0; t < cutSongIdList.length; t++) {\r\n        await getSongDetailFun(cutSongIdList[t].join(','));\r\n      }\r\n    }\r\n  }\r\n  async function getSongDetailFun(songIds) {\r\n    const res = await getSongDetail(songIds); //所有获取歌曲详情\r\n    if (res.code === 200) {\r\n      songList = songList.concat(res.songs);\r\n    }\r\n  }\r\n  function scroll() {\r\n    const coverToTop = coverDom.getBoundingClientRect().top; //滑动时coverDom到顶部的距离，用于计算上滑时NavBar透明度。\r\n    if (coverToTop > -50 && coverToTop <= 0) {\r\n      alphaNumber = Math.abs(coverToTop) / 50;\r\n    } else {\r\n      alphaNumber = 1;\r\n    }\r\n    if (coverToTop > 0) {\r\n      alphaNumber = 0;\r\n    }\r\n  }\r\n  async function getSongUrlFun(song) {\r\n    const res = await getSongUrl(song.id); //获取歌单url\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        currentSongStore.set(song);\r\n        localStorage.setItem('currentSong', JSON.stringify(song));\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\r\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n  function playListFun(index) {\r\n    playRepeatModelStore.set('repeat');\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    currentPlayListStore.set(songList);\r\n    let ids = [];\r\n    for (let r = 0; r < songList.length; r++) {\r\n      ids.push(songList[r].id);\r\n    }\r\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n    currentSongIndexStore.set(index);\r\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n  }\r\n  async function lovePlayListFun() {\r\n    const res = await subscribePlaylist({\r\n      id: $playListIdStore,\r\n      t: collect ? 2 : 1,\r\n    });\r\n    if (res.code === 200) {\r\n      const ids = JSON.parse(localStorage.getItem('usePlayListIds'));\r\n      if (collect) {\r\n        let i = ids.indexOf($playListIdStore);\r\n        ids.splice(i, 1);\r\n      } else {\r\n        ids.unshift($playListIdStore);\r\n      }\r\n      playListIdStore.set(ids);\r\n      localStorage.setItem('usePlayListIds', JSON.stringify(ids));\r\n      collect = !collect;\r\n    }\r\n  }\r\n</script>\r\n\r\n<svelte:window on:scroll={scroll} />\r\n<NavBar {title} transparent={true} dark={true} {alphaNumber} />\r\n<div class=\"play-list\">\r\n  <div\r\n    class=\"cover-box\"\r\n    bind:this={coverDom}\r\n    style=\"background: url({coverImgUrl.replace(/^http:/, 'https:') + '?param=450y450'});\"\r\n  >\r\n    <div class=\"cover-bg\">\r\n      <div class=\"cover\">\r\n        <Lazy height={140}>\r\n          <img class=\"img-cover\" src={coverImgUrl.replace(/^http:/, 'https:') + '?param=450y450'} alt=\"\" />\r\n        </Lazy>\r\n      </div>\r\n      <div class=\"info\">\r\n        <div class=\"name\">{name}</div>\r\n        <div class=\"creater\">\r\n          <img class=\"creatorImg\" src={creator.avatarUrl.replace(/^http:/, 'https:') + '?param=60y60'} alt=\"\" />\r\n          <span class=\"creatertext\">{creator.nickname}</span>\r\n        </div>\r\n        <div class=\"update\">\r\n          更新于{formatTime(updateTime)} &#8226 {songList ? songList.length : 0}首\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"desc\">{description}</div>\r\n  <div class=\"btn\">\r\n    <div class=\"play\" style=\"margin-right: {$isLoginStore && creator.userId != $userInfoStore.account.id ? 20 : 0}px;\">\r\n      <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\r\n        <span class=\"icon\">\r\n          <PlayCircleLine size=\"20\" style=\"vertical-align: middle\" />\r\n        </span>\r\n        播放歌单\r\n      </Button>\r\n    </div>\r\n    {#if $isLoginStore && creator.userId != $userInfoStore.account.id}\r\n      <div class=\"random\">\r\n        <Button type={collect ? 'default' : 'primary'} on:BtnClick={lovePlayListFun}>\r\n          <span class=\"icon\">\r\n            {#if collect}\r\n              <ChatHeartLine size=\"20\" style=\"vertical-align: middle\" />\r\n            {:else}\r\n              <ChatHeartFill size=\"20\" style=\"vertical-align: middle\" />\r\n            {/if}\r\n          </span>\r\n          {collect ? '取消收藏' : '收藏歌单'}\r\n        </Button>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <div>\r\n    <SongList {songList} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .icon {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n  .btn {\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n    padding: 0 20px;\r\n    flex-basis: 20px;\r\n  }\r\n  .play {\r\n    margin-right: 20px;\r\n    flex: 1;\r\n  }\r\n  .random {\r\n    flex: 1;\r\n  }\r\n  .cover-box {\r\n    background-position: center !important;\r\n  }\r\n  .cover-bg {\r\n    font-size: 12px;\r\n    padding: 60px 20px 20px;\r\n    display: flex;\r\n    color: #fff;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    backdrop-filter: blur(20px);\r\n    -webkit-backdrop-filter: blur(20px);\r\n  }\r\n  .img-cover {\r\n    border-radius: 6px;\r\n    width: 140px;\r\n    height: 140px;\r\n    object-fit: cover;\r\n  }\r\n  .cover {\r\n    flex: 2;\r\n  }\r\n  .info {\r\n    padding-top: 6px;\r\n    flex: 3;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n    position: relative;\r\n  }\r\n  .name {\r\n    font-size: 18px;\r\n    max-width: 192px;\r\n    font-weight: bold;\r\n  }\r\n  .creater {\r\n    margin-top: 8px;\r\n    align-items: center;\r\n    line-height: 24px;\r\n  }\r\n  .creatorImg {\r\n    border-radius: 4px;\r\n    width: 24px;\r\n    height: 24px;\r\n    margin-right: 4px;\r\n  }\r\n  .creatertext {\r\n    position: relative;\r\n    top: -8px;\r\n  }\r\n  .update {\r\n    position: absolute;\r\n    bottom: 6px;\r\n  }\r\n  .desc {\r\n    margin: 10px 20px;\r\n    font-size: 12px;\r\n    max-height: 60px;\r\n    overflow-y: auto;\r\n    text-align: justify;\r\n    color: rgb(116, 116, 116);\r\n  }\r\n  .desc:global(::-webkit-scrollbar) {\r\n    width: 0 !important;\r\n  }\r\n  .play-list {\r\n    padding-bottom: 70px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { DeleteBinLine } from 'svelte-remixicon';\r\n\r\n  import { NavBar } from '../components/base';\r\n  import Songer from '../components/Singer.svelte';\r\n  import MiniPlayListCover from '../components/MiniPlayListCover.svelte';\r\n  import SongList from '../components/SongList.svelte';\r\n\r\n  import { search } from '../api/others';\r\n  import { getSongDetail } from '../api/song';\r\n\r\n  import { ripple } from '../utils/common';\r\n\r\n  let inputDom;\r\n  let keywords = '';\r\n  let songers = [];\r\n  $: songs = [];\r\n  let playLists = [];\r\n  let typeList = [\r\n    { index: 0, type: 0, text: '综合' },\r\n    { index: 1, type: 1, text: '单曲' },\r\n    { index: 2, type: 100, text: '歌手' },\r\n    { index: 3, type: 1000, text: '歌单' },\r\n  ];\r\n  $: active = 0;\r\n  $: type = typeList[0].type;\r\n  $: searchkeywordList = localStorage.getItem('searchkeywords')\r\n    ? [...new Set(localStorage.getItem('searchkeywords').split('|&&|'))].filter(function (s) {\r\n        return s && s.trim();\r\n      })\r\n    : [];\r\n  $: searchkeywordList10 =\r\n    searchkeywordList.length > 10\r\n      ? searchkeywordList.slice(0, 10).filter(function (s) {\r\n          return s && s.trim();\r\n        })\r\n      : searchkeywordList.filter(function (s) {\r\n          return s && s.trim();\r\n        });\r\n  $: isShowResult = false;\r\n  let typeDoms;\r\n\r\n  onMount(() => {\r\n    if (typeDoms) ripple(typeDoms, true);\r\n    inputDom.addEventListener('compositionstart', function (e) {\r\n      //非直接的文字输入时（键盘输入中文的拼音）\r\n      e.target.isNeedPrevent = true;\r\n    });\r\n    inputDom.addEventListener('compositionend', function (e) {\r\n      //直接输入文字后（键盘选择真实的汉字）\r\n      e.target.isNeedPrevent = false;\r\n    });\r\n    inputDom.addEventListener('input', inputchange);\r\n    inputDom.addEventListener('keydown', function (e) {\r\n      if (e.key === 'Enter') searchFun();\r\n    });\r\n  });\r\n  function inputchange(e) {\r\n    setTimeout(() => {\r\n      //采用延时进行节流\r\n      if (!e.target.isNeedPrevent && e.target.oldValue !== e.target.value) {\r\n        //判断输入是否完成以及值是否变化\r\n        e.target.oldValue = e.target.value;\r\n        keywords = e.target.value;\r\n      }\r\n    }, 10);\r\n  }\r\n  //搜索\r\n  function searchFun() {\r\n    if (keywords.trim() != '') {\r\n      inputDom.blur();\r\n      let searchkeywords = localStorage.getItem('searchkeywords') ? localStorage.getItem('searchkeywords') : '';\r\n      if (searchkeywords.indexOf(keywords) != -1) {\r\n        //有\r\n        searchkeywords = `${keywords}|&&|` + searchkeywords.replace(`${keywords}|&&|`, '');\r\n      } else {\r\n        searchkeywords = `${keywords}|&&|` + searchkeywords;\r\n      }\r\n      searchkeywordList = searchkeywords.split('|&&|');\r\n      localStorage.setItem('searchkeywords', searchkeywords);\r\n      if (type === 0) {\r\n        //搜索综合\r\n        searchApiFun(typeList[1].type, false);\r\n        searchApiFun(typeList[2].type, false);\r\n        searchApiFun(typeList[3].type, false);\r\n      } else {\r\n        searchApiFun(type, true);\r\n      }\r\n    }\r\n  }\r\n  function quickSearchFun(key) {\r\n    keywords = key;\r\n    searchFun();\r\n  }\r\n  function clearSearchFun() {\r\n    searchkeywordList10 = [];\r\n    localStorage.removeItem('searchkeywords');\r\n  }\r\n  //开始搜索\r\n  async function searchApiFun(type, isMore) {\r\n    const res = await search({ keywords, type, limit: isMore ? 30 : 6 });\r\n    if (res.code === 200) {\r\n      isShowResult = true;\r\n      switch (type) {\r\n        case 1:\r\n          let songIdList = [];\r\n          for (let i = 0; i < res.result.songs.length; i++) {\r\n            songIdList.push(res.result.songs[i].id);\r\n          }\r\n          getSongDetailFun(songIdList.join(','));\r\n          break;\r\n        case 100:\r\n          songers = res.result.artists;\r\n          break;\r\n        case 1000:\r\n          playLists = res.result.playlists;\r\n          break;\r\n        default:\r\n          console.log('未知类型');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  //获取所有歌曲详情\r\n  async function getSongDetailFun(songIds) {\r\n    const res = await getSongDetail(songIds);\r\n    if (res.code === 200) {\r\n      songs = res.songs;\r\n    }\r\n  }\r\n  //数组去重\r\n  function uniqe(arr) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr.indexOf(arr[i]) == i) {\r\n        temp.push(arr[i]);\r\n      }\r\n    }\r\n    return temp;\r\n  }\r\n</script>\r\n\r\n<NavBar title=\"搜索\" />\r\n<div class=\"search-page\">\r\n  <div class=\"input-box\">\r\n    <form action=\"JavaScript:void 0\">\r\n      <input bind:this={inputDom} placeholder=\"请输入关键字\" type=\"search\" value={keywords} />\r\n    </form>\r\n    <button\r\n      on:click={() => searchFun()}\r\n      style=\"background-color: {keywords === '' ? 'rgb(224, 224, 224)' : 'var(--primary-text-color)'};\r\n        color:{keywords === '' ? '#666' : '#fff'}\"\r\n    >\r\n      搜索\r\n    </button>\r\n  </div>\r\n  <div class=\"searchkeyword\">\r\n    {#each searchkeywordList10.filter(function (s) {\r\n      return s && s.trim();\r\n    }) as item}\r\n      <span class=\"key-item\" on:click={() => quickSearchFun(item)}>\r\n        {item}\r\n      </span>\r\n    {/each}\r\n    {#if searchkeywordList10.filter(function (s) {\r\n      return s && s.trim();\r\n    }).length > 0}\r\n      <span class=\"key-item\" on:click={clearSearchFun}>\r\n        <DeleteBinLine size=\"12\" style=\"vertical-align: middle\" />\r\n      </span>\r\n    {/if}\r\n  </div>\r\n  <div class=\"type\" bind:this={typeDoms}>\r\n    {#each typeList as t}\r\n      <div\r\n        class=\"type-item\"\r\n        class:active={active === t.index}\r\n        on:click={() => {\r\n          active = t.index;\r\n          type = t.type;\r\n          searchFun();\r\n        }}\r\n      >\r\n        {t.text}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n  <div class=\"active-line\" style=\"left: {20 + ((localStorage.getItem('fullWidth') - 40) / 4) * active}px;\" />\r\n  {#if isShowResult}\r\n    <div class=\"result-box\">\r\n      <!-- 综合 -->\r\n      <div class=\"result all-box\" style=\"display: {active === 0 ? 'block' : 'none'};\">\r\n        <div class=\"songer-title\">单曲</div>\r\n        <div class=\"reault-song\">\r\n          <div class=\"song-box\">\r\n            <SongList songList={songs} />\r\n          </div>\r\n        </div>\r\n        <!-- <Divider /> -->\r\n        <div class=\"songer-title\">歌手</div>\r\n        <div class=\"reault-songer\">\r\n          {#each songers as songer}\r\n            <div class=\"songer-box\">\r\n              <Songer {songer} coverSize={330} />\r\n            </div>\r\n          {/each}\r\n        </div>\r\n        <!-- <Divider /> -->\r\n        <div class=\"songer-title\">歌单</div>\r\n        <div class=\"reault-play-list\">\r\n          {#each playLists as play}\r\n            <div class=\"list-box\">\r\n              <MiniPlayListCover\r\n                name={play.name}\r\n                coverImgUrl={play.coverImgUrl}\r\n                id={play.id}\r\n                playCount={play.playCount}\r\n                trackCount={play.trackCount}\r\n              />\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n      <!-- 单曲 -->\r\n      <div class=\"result song-box\" style=\"display: {active === 1 ? 'block' : 'none'};\">\r\n        <div class=\"reault-song\">\r\n          <div class=\"song-box\">\r\n            <SongList songList={songs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--歌手 -->\r\n      <div class=\"result reault-songer-box\" style=\"display: {active === 2 ? 'block' : 'none'};\">\r\n        <div class=\"reault-songer\">\r\n          {#each songers as songer}\r\n            <Songer {songer} coverSize={250} />\r\n          {/each}\r\n        </div>\r\n      </div>\r\n      <!-- 歌单 -->\r\n      <div style=\"display: {active === 3 ? 'block' : 'none'};\">\r\n        <div class=\"reault-play-list\">\r\n          {#each playLists as play}\r\n            <MiniPlayListCover\r\n              name={play.name}\r\n              coverImgUrl={play.coverImgUrl}\r\n              id={play.id}\r\n              playCount={play.playCount}\r\n              trackCount={play.trackCount}\r\n            />\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .searchkeyword {\r\n    padding: 10px 20px;\r\n  }\r\n  .key-item {\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    margin: 4px 8px 4px 0;\r\n    padding: 4px 8px;\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n  }\r\n  .songer-title {\r\n    margin: 20px auto 10px;\r\n    font-weight: bold;\r\n    padding: 0 20px;\r\n  }\r\n  .active-line {\r\n    margin-bottom: 10px;\r\n    height: 2px;\r\n    width: 83.75px;\r\n    background-color: var(--primary-text-color);\r\n    position: relative;\r\n    left: 0px;\r\n    transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\r\n    -webkit-transition: all 0.3s cubic-bezier(0.18, 0.89, 0.26, 1.19);\r\n  }\r\n  .type {\r\n    display: flex;\r\n    padding: 0 20px;\r\n  }\r\n  .type-item {\r\n    font-weight: bold;\r\n    padding: 10px 0 8px;\r\n    text-align: center;\r\n    flex: 1;\r\n  }\r\n  .active {\r\n    color: var(--primary-text-color);\r\n  }\r\n  .search-page {\r\n    font-size: 16px;\r\n    padding: 50px 0px 70px;\r\n  }\r\n  .input-box {\r\n    margin: 10px auto;\r\n    font-size: 20px;\r\n    display: flex;\r\n    padding: 0 20px;\r\n  }\r\n  .input-box form {\r\n    flex: auto;\r\n  }\r\n  .input-box form input {\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0 5px;\r\n    border: none;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    line-height: 10px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    outline: none;\r\n    -webkit-appearance: none;\r\n  }\r\n  .input-box input:focus {\r\n    border: 1px solid var(--primary-text-color);\r\n  }\r\n  .input-box input:active {\r\n    border: 1px solid var(--primary-text-color);\r\n  }\r\n  .input-box button {\r\n    border: none;\r\n    padding: 0 8px;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    width: 48px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    font-size: 14px;\r\n    background-color: rgb(224, 224, 224);\r\n  }\r\n  .reault-songer {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(3, 100px);\r\n    padding: 0 20px;\r\n  }\r\n  .reault-play-list {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-columns: repeat(2, 150px);\r\n    padding: 0 20px;\r\n  }\r\n  .songer-box {\r\n    padding: 10px 0;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { pop, push } from 'svelte-stack-router';\r\n\r\n  import { NavBar, Cell, Button } from '../components/base';\r\n\r\n  import { logout } from '../api/user';\r\n\r\n  import {\r\n    restoreScrollStore,\r\n    musicQualityStore,\r\n    isShowTranslateStore,\r\n    isLoginStore,\r\n    isShowCommentStore,\r\n  } from '../store/common';\r\n  import { showVisualizerStore } from '../store/play';\r\n\r\n  import { Confirm } from '../utils/common';\r\n\r\n  let musicQualityArr = ['普通', '较高', '极高', '无损'];\r\n\r\n  function switchScrollFun(e) {\r\n    restoreScrollStore.set(e.detail.cellCheck);\r\n    localStorage.setItem('restoreScroll', e.detail.cellCheck ? '1' : '0');\r\n  }\r\n  function switchCommentFun(e) {\r\n    isShowCommentStore.set(e.detail.cellCheck ? '1' : '0');\r\n    localStorage.setItem('isShowComment', e.detail.cellCheck ? '1' : '0');\r\n  }\r\n  function brFun() {\r\n    push('/brSelect');\r\n  }\r\n  function translateFun(e) {\r\n    isShowTranslateStore.set(e.detail.cellCheck);\r\n    localStorage.setItem('isShowTranslate', e.detail.cellCheck ? '1' : '0');\r\n  }\r\n  function logoutFun() {\r\n    Confirm('确定退出当前账号？', async () => {\r\n      const res = await logout();\r\n      if (res.code === 200) {\r\n        localStorage.clear();\r\n        isLoginStore.set(false);\r\n        clearAllCookie();\r\n        pop();\r\n      }\r\n    });\r\n  }\r\n  //清除所有cookie函数\r\n  function clearAllCookie() {\r\n    let keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\r\n    if (keys) {\r\n      for (let i = keys.length; i--; ) document.cookie = keys[i] + '=0;expires=' + new Date(0).toUTCString();\r\n    }\r\n  }\r\n  function aboutFun() {\r\n    push('/about');\r\n  }\r\n  function versionFun() {\r\n    push('/version');\r\n  }\r\n  function visualizerFun(e) {\r\n    showVisualizerStore.set(e.detail.cellCheck ? '1' : '0');\r\n    localStorage.setItem('showVisualizer', e.detail.cellCheck ? '1' : '0');\r\n  }\r\n</script>\r\n\r\n<NavBar title=\"设置\" />\r\n\r\n<div class=\"setting-page\">\r\n  <!-- 设置 -->\r\n  <Cell title=\"播放音质\" on:cellClick={brFun} desc={musicQualityArr[Number($musicQualityStore)]} arrow={true} />\r\n  <Cell\r\n    title=\"热评\"\r\n    on:cellClick={switchCommentFun}\r\n    desc=\"Switch\"\r\n    cellCheck={$isShowCommentStore === '0' ? false : true}\r\n  />\r\n  <Cell title=\"显示歌词翻译\" on:cellClick={translateFun} desc=\"Switch\" cellCheck={$isShowTranslateStore} />\r\n  <Cell\r\n    title=\"自动滚动\"\r\n    titleDesc=\"导航返回上一页后自动滚动到之前的位置\"\r\n    on:cellClick={switchScrollFun}\r\n    desc=\"Switch\"\r\n    cellCheck={$restoreScrollStore}\r\n  />\r\n  <Cell\r\n    title=\"音乐动效\"\r\n    titleDesc=\"如果卡顿请关闭\"\r\n    on:cellClick={visualizerFun}\r\n    desc=\"Switch\"\r\n    cellCheck={$showVisualizerStore === '1' ? true : false}\r\n  />\r\n  <Cell title=\"关于\" on:cellClick={aboutFun} arrow={true} />\r\n  <Cell title=\"版本记录\" on:cellClick={versionFun} arrow={true} />\r\n  <div class=\"bottom\">\r\n    <Button on:BtnClick={logoutFun}>退出登录</Button>\r\n  </div>\r\n  <div class=\"version\">V 1.0.2</div>\r\n</div>\r\n\r\n<style>\r\n  .setting-page {\r\n    padding: 50px 20px 70px;\r\n    font-size: 16px;\r\n  }\r\n  .bottom {\r\n    margin: 20px auto;\r\n  }\r\n  .version {\r\n    margin: 20px auto;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    color: rgb(141, 141, 141);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { search, onResume } from \"svelte-stack-router\";\r\n\r\n  import { NavBar } from \"../components/base\";\r\n\r\n  import { defaultResumableStore } from \"../store/common\";\r\n\r\n  import { getSongerDesc } from \"../api/songer\";\r\n\r\n  $: briefDesc = \"\";\r\n  $: introduction = [];\r\n  $: topicData = [];\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      getSongerDescFun();\r\n    }\r\n  });\r\n\r\n  onMount(() => {\r\n    getSongerDescFun();\r\n  });\r\n  async function getSongerDescFun() {\r\n    const res = await getSongerDesc($search.substr(1));\r\n    if (res.code === 200) {\r\n      briefDesc = res.briefDesc;\r\n      introduction = res.introduction;\r\n      topicData = res.topicData;\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title=\"歌手详情\" dark={true} />\r\n<div class=\"page\">\r\n  <div class=\"title\">简介</div>\r\n  <div class=\"text\">{briefDesc}</div>\r\n  {#each introduction as i}\r\n    <div class=\"title\">{i.ti}</div>\r\n    <div class=\"text\">{@html i.txt}</div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .page {\r\n    padding: 50px 20px 70px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    text-align: justify;\r\n  }\r\n  .title {\r\n    margin: 20px 0 10px;\r\n  }\r\n  .text {\r\n    font-weight: normal;\r\n    font-size: 14px;\r\n    color: rgb(97, 97, 97);\r\n    white-space: pre-line;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount, afterUpdate } from 'svelte';\r\n  import Lazy from 'svelte-lazy';\r\n  import { push, onResume } from 'svelte-stack-router';\r\n  import { PlayCircleLine, ChatHeartFill, ChatHeartLine } from 'svelte-remixicon';\r\n\r\n  import { NavBar, Title, Button } from '../components/base';\r\n  import SongList from '../components/SongList.svelte';\r\n\r\n  import { defaultResumableStore, isLoginStore, currentDetailSongerIdStore, coverImgUrlStore } from '../store/common';\r\n  import {\r\n    currentSongStore,\r\n    playStatusStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    isFMPlayStore,\r\n    playRepeatModelStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n\r\n  import { getSongerDetail, getSongerTop, followAArtist } from '../api/songer';\r\n  import { getSongUrl } from '../api/song';\r\n\r\n  $: coverImgUrl = '/images/defaultCover.png';\r\n  $: name = '--';\r\n  $: description = '暂无描述';\r\n  $: mvSize = 0;\r\n  $: musicSize = 0;\r\n  $: albumSize = 0;\r\n  $: hotSongs = [];\r\n  $: collect = false;\r\n  $: currentSongerId = 0; //当前歌手 ID，用于计算更新页面\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      allMount();\r\n    }\r\n  });\r\n  onMount(() => {\r\n    allMount();\r\n  });\r\n  afterUpdate(() => {\r\n    if (currentSongerId !== $currentDetailSongerIdStore) {\r\n      allMount();\r\n    }\r\n  });\r\n  function allMount() {\r\n    getSongerDetailFun();\r\n    getSongerTopFun();\r\n    if ($isLoginStore) {\r\n      const ids = JSON.parse(localStorage.getItem('useLoveSongerIds'));\r\n      collect = ids.includes($currentDetailSongerIdStore);\r\n    } else {\r\n      collect = false;\r\n    }\r\n  }\r\n  async function getSongerDetailFun() {\r\n    currentSongerId = $currentDetailSongerIdStore;\r\n    const res = await getSongerDetail($currentDetailSongerIdStore);\r\n    if (res.code === 200) {\r\n      name = res.data.artist.name;\r\n      coverImgUrl = res.data.user ? res.data.user.avatarUrl : res.data.artist.cover;\r\n      description = res.data.artist.briefDesc;\r\n      mvSize = res.data.artist.mvSize;\r\n      musicSize = res.data.artist.musicSize;\r\n      albumSize = res.data.artist.albumSize;\r\n    }\r\n  }\r\n  async function getSongerTopFun() {\r\n    const res = await getSongerTop($currentDetailSongerIdStore);\r\n    if (res.code === 200) {\r\n      hotSongs = res.songs;\r\n    }\r\n  }\r\n  function toDescFun() {\r\n    if (description != '') {\r\n      push('/songerDesc?' + $currentDetailSongerIdStore);\r\n    }\r\n  }\r\n  function playListFun(index) {\r\n    playRepeatModelStore.set('repeat');\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    currentPlayListStore.set(hotSongs);\r\n    let ids = [];\r\n    for (let r = 0; r < hotSongs.length; r++) {\r\n      ids.push(hotSongs[r].id);\r\n    }\r\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n    currentSongIndexStore.set(index);\r\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n  }\r\n  async function getSongUrlFun(song) {\r\n    const res = await getSongUrl(song.id); //获取歌单url\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        currentSongStore.set(song);\r\n        localStorage.setItem('currentSong', JSON.stringify(song));\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\r\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n  async function loveSongerFun() {\r\n    const res = await followAArtist({ id: $currentDetailSongerIdStore, t: collect ? 0 : 1 });\r\n    if (res.code === 200) {\r\n      const ids = JSON.parse(localStorage.getItem('useLoveSongerIds'));\r\n      if (collect) {\r\n        let i = ids.indexOf(Number($currentDetailSongerIdStore));\r\n        ids.splice(i, 1);\r\n      } else {\r\n        ids.unshift(Number($currentDetailSongerIdStore));\r\n      }\r\n      localStorage.setItem('useLoveSongerIds', JSON.stringify(ids));\r\n      collect = !collect;\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title={name} dark={true} />\r\n<div class=\"page\">\r\n  <div class=\"cover-box\">\r\n    <div class=\"cover-bg\">\r\n      <div class=\"cover\">\r\n        <Lazy height={140}>\r\n          <img class=\"img-cover\" src={coverImgUrl.replace(/^http:/, 'https:') + '?param=400y400'} alt=\"\" />\r\n        </Lazy>\r\n      </div>\r\n      <div class=\"info\">\r\n        <div class=\"name\">{name}</div>\r\n        <div class=\"song-count\">{musicSize} 首歌 • {albumSize} 张专辑 • {mvSize} 个 MV</div>\r\n        <div class=\"desc\" on:click={toDescFun}>{description}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"btn\">\r\n    <div class=\"play\">\r\n      <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\r\n        <span class=\"icon\">\r\n          <PlayCircleLine size=\"20\" style=\"vertical-align: middle\" />\r\n        </span>\r\n        播放全部\r\n      </Button>\r\n    </div>\r\n    {#if $isLoginStore}\r\n      <div class=\"random\">\r\n        <Button type={collect ? 'default' : 'primary'} on:BtnClick={loveSongerFun}>\r\n          <span class=\"icon\">\r\n            {#if collect}\r\n              <ChatHeartLine size=\"20\" style=\"vertical-align: middle\" />\r\n            {:else}\r\n              <ChatHeartFill size=\"20\" style=\"vertical-align: middle\" />\r\n            {/if}\r\n          </span>\r\n          {collect ? '取消收藏' : '收藏歌手'}\r\n        </Button>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <div>\r\n    <Title\r\n      title={`热门 ${hotSongs.length} 首`}\r\n      isShowRight={hotSongs.length === 50}\r\n      on:TitleClick={() => {\r\n        coverImgUrlStore.set(coverImgUrl.replace(/^http:/, 'https:'));\r\n        push('/moreSong?name=' + name + '&id=' + currentSongerId);\r\n      }}\r\n    />\r\n    <SongList songList={hotSongs} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .icon {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n  .btn {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-top: 10px;\r\n  }\r\n  .play {\r\n    padding: 0px 10px 10px 20px;\r\n    flex: 1;\r\n  }\r\n  .random {\r\n    padding: 0px 20px 10px 20px;\r\n    flex: 1;\r\n  }\r\n  .page {\r\n    padding: 50px 0 70px;\r\n    font-size: 16px;\r\n  }\r\n  .cover-box {\r\n    padding: 0 20px;\r\n  }\r\n  .cover-bg {\r\n    font-size: 12px;\r\n    padding: 20px 0px;\r\n    display: flex;\r\n  }\r\n  .cover {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 150px;\r\n    overflow: hidden;\r\n    flex: 0 0 150px;\r\n    background-color: #fff;\r\n  }\r\n  .img-cover {\r\n    border-radius: 6px;\r\n    width: 150px;\r\n    height: 150px;\r\n    object-fit: cover;\r\n  }\r\n  .info {\r\n    padding-top: 6px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n  .name {\r\n    font-size: 24px;\r\n    max-width: 192px;\r\n    font-weight: bold;\r\n  }\r\n  .song-count {\r\n    font-size: 12px;\r\n  }\r\n  .desc {\r\n    padding: 10px 0;\r\n    font-size: 12px;\r\n    max-height: 57px;\r\n    text-align: justify;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 5;\r\n    color: rgb(116, 116, 116);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n  import { PlayCircleLine } from 'svelte-remixicon';\r\n  import { onResume } from 'svelte-stack-router';\r\n\r\n  import { Button, NavBar } from '../components/base';\r\n  import SongList from '../components/SongList.svelte';\r\n\r\n  import { getSongUrl, getSongDetail } from '../api/song';\r\n\r\n  import { playListDetailStore, todayListStore } from '../store/playList';\r\n  import {\r\n    currentSongStore,\r\n    playStatusStore,\r\n    currentPlayListStore,\r\n    currentSongIndexStore,\r\n    isFMPlayStore,\r\n    playRepeatModelStore,\r\n    currentSongQualityStore,\r\n  } from '../store/play';\r\n  import { defaultResumableStore } from '../store/common';\r\n\r\n  import { Toast } from '../utils/common';\r\n\r\n  $: songList = [];\r\n\r\n  onResume(() => {\r\n    if (!$defaultResumableStore) {\r\n      let songIdList = [];\r\n      for (let i = 0; i < $todayListStore.length; i++) {\r\n        songIdList.push($todayListStore[i].id);\r\n      }\r\n      getSongDetailFun(songIdList.join(','));\r\n      getSongUrl(songIdList[0]);\r\n    }\r\n  });\r\n  onMount(() => {\r\n    let songIdList = [];\r\n    for (let i = 0; i < $todayListStore.length; i++) {\r\n      songIdList.push($todayListStore[i].id);\r\n    }\r\n    getSongDetailFun(songIdList.join(','));\r\n    getSongUrl(songIdList[0]);\r\n  });\r\n  async function getSongDetailFun(songIds) {\r\n    const res = await getSongDetail(songIds); //所有获取歌曲详情\r\n    if (res.code === 200) {\r\n      playListDetailStore.set(res.songs);\r\n      songList = res.songs;\r\n    }\r\n  }\r\n  function playListFun(index) {\r\n    playRepeatModelStore.set('repeat');\r\n    isFMPlayStore.set(false);\r\n    localStorage.setItem('isFMPlay', '0');\r\n    currentPlayListStore.set(songList);\r\n    let ids = [];\r\n    for (let r = 0; r < songList.length; r++) {\r\n      ids.push(songList[r].id);\r\n    }\r\n    localStorage.setItem('localPlayList', JSON.stringify(ids));\r\n    currentSongIndexStore.set(index);\r\n    getSongUrlFun($currentPlayListStore[$currentSongIndexStore]);\r\n  }\r\n  async function getSongUrlFun(song) {\r\n    const res = await getSongUrl(song.id); //获取歌单url\r\n    if (res.code === 200) {\r\n      if (res.data[0].url) {\r\n        song.url = res.data[0].url.replace(/^http:/, 'https:');\r\n        if (res.data[0].fee === 1 && res.data[0].freeTrialInfo != null) {\r\n          currentSongQualityStore.set('试听');\r\n        } else if (res.data[0].type === 'flac') {\r\n          currentSongQualityStore.set('FLAC');\r\n        } else {\r\n          currentSongQualityStore.set(res.data[0].br);\r\n        }\r\n        currentSongStore.set(song);\r\n        localStorage.setItem('currentSong', JSON.stringify(song));\r\n        window.audioDOM.src = song.url;\r\n        window.audioDOM.play();\r\n        playStatusStore.set(true);\r\n        if (document.getElementById('playgroundImg'))document.getElementById('playgroundImg').style.animationPlayState = 'running';\r\n\r\n        if ($currentSongIndexStore !== $currentPlayListStore.length - 1)\r\n          getSongUrl($currentPlayListStore[$currentSongIndexStore + 1].id);\r\n      } else {\r\n        Toast(`😂 无法播放「${song.name}」！可能是版权原因......吧！请播放下一首。`, 2000);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<NavBar title=\"今日推荐歌曲\" />\r\n<div class=\"play-list\">\r\n  <div class=\"today-title\">今日推荐歌曲</div>\r\n  <div class=\"today-desc\">\r\n    根据你的音乐口味生成 {songList.length} 首 · 每天6:00更新\r\n  </div>\r\n  <div class=\"btn\">\r\n    <div class=\"play\">\r\n      <Button type=\"primary\" on:BtnClick={() => playListFun(0)}>\r\n        <span class=\"icon\">\r\n          <PlayCircleLine size=\"22\" style=\"vertical-align: middle\" />\r\n        </span>\r\n        播放全部\r\n      </Button>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <SongList {songList} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .icon {\r\n    position: relative;\r\n    top: -2px;\r\n  }\r\n  .today-title {\r\n    text-align: center;\r\n    font-size: 46px;\r\n    color: var(--primary-text-color);\r\n    margin: 40px auto;\r\n    font-weight: bold;\r\n  }\r\n  .today-desc {\r\n    text-align: center;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .btn {\r\n    width: 100%;\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n  }\r\n  .play {\r\n    padding: 0px 20px 10px 20px;\r\n    flex: 1;\r\n  }\r\n  .play-list {\r\n    padding-top: 50px;\r\n    padding-bottom: 70px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import md from '../../version.md';\r\n  import { NavBar } from '../components/base';\r\n</script>\r\n\r\n<NavBar title=\"版本记录\" />\r\n<div class=\"about\">\r\n  <div id=\"markdown\">{@html md}</div>\r\n</div>\r\n\r\n<style>\r\n  .about {\r\n    padding: 50px 0px 70px;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AA+DE,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC,AACD,WAAW,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,KAAK,cAAC,CAAC,AACL,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,YAAY,AACvB,CAAC,AACD,mBAAK,CAAW,YAAY,AAAE,CAAC,AAC7B,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,mBAAK,CAAW,WAAW,AAAE,CAAC,AAC5B,YAAY,CAAE,IAAI,AACpB,CAAC,cACD,mBAAmB,AAAC,CAAC,AACnB,OAAO,CAAE,IAAI,AACf,CAAC;AChBD,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,sBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,AAC/C,CAAC,AACD,aAAa,cAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,SAAS,CAAE,0BAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,AACtD,CAAC,AACD,2BAAa,OAAO,AAAC,CAAC,AACpB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,iCAAmB,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,AAC7D,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,AAAC,CAAC,AAC1B,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,AAAC,CAAC,AAC1B,eAAe,CAAE,GAAG,AACtB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,AAAC,CAAC,AAC1B,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,AAAC,CAAC,AAC1B,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,AAAC,CAAC,AAC1B,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,AAAC,CAAC,AAC1B,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,OAAO,AAAC,CAAC,AACjC,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,OAAO,AAAC,CAAC,AACjC,eAAe,CAAE,GAAG,AACtB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,OAAO,AAAC,CAAC,AACjC,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,OAAO,AAAC,CAAC,AACjC,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,OAAO,AAAC,CAAC,AACjC,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,2BAAa,WAAW,CAAC,CAAC,OAAO,AAAC,CAAC,AACjC,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,WAAW,sBAAS,CAAC,AACnB,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC,AACD,WAAW,0BAAa,CAAC,AACvB,GAAG,CACH,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC,AACD,WAAW,iCAAoB,CAAC,AAC9B,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,GAAG,CAAC,AACvB,CAAC,AACD,IAAI,CACJ,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,CAAC,CAAC,AACrB,CAAC,AACH,CAAC;AC6GD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,eAAe,CAAE,MAAM,CACvB,0BAA0B,CAAE,IAAI,AAClC,CAAC,AACD,GAAG,eAAC,CAAC,AACH,SAAS,CAAE,UAAU,CACrB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAC5B,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CACpC,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,KAAK,GAAG,CAAC,CACjB,cAAc,CAAE,KAAK,GAAG,CAAC,CACzB,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,SAAS,CAAE,IAAI,AACjB,CAAC;ACvGD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,SAAS,eAAC,CAAC,AACT,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,EAAE,CACT,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1F,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACtD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAGhE,CAAC,AACD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,CAE3C,eAAe,CAAE,KAAK,IAAI,CAAC,CAC3B,uBAAuB,CAAE,KAAK,IAAI,CAAC,CACnC,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAChC,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,WAAW,AAC1C,CAAC,AACD,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CACpC,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,MAAM,AAClB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACtD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAChE,CAAC,AACD,MAAM,eAAC,CAAC,AACN,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,GAAG,CACZ,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACtD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAChE,CAAC,AACD,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC;ACjQD,SAAS,cAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACf,CAAC,AACD,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC;ACilBC,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,KAAK,eAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACxC,CAAC,AACD,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CAAC,IAAI,AACtB,CAAC,AACD,KAAK,eAAC,CAAC,AACH,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC/B,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,IAAI,CAAE,CAAC,AACX,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,QAAQ,eAAC,CAAC,AACN,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,GAAG,AAChB,CAAC,AACD,aAAa,eAAC,CAAC,AACX,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AAC1B,CAAC,AACD,IAAI,eAAC,CAAC,AACF,UAAU,CAAE,KAAK,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACH,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACH,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,CAAC,CAAC,IAAI,AACnB,CAAC,AACD,OAAO,eAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAClC,CAAC,AACD,QAAQ,eAAC,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,CACZ,eAAe,CAAE,KAAK,CAAC,UAAU,CACjC,mBAAmB,CAAE,MAAM,CAAC,UAAU,CACtC,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CACzD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CACjE,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,AAC/C,CAAC,AACD,UAAU,eAAC,CAAC,AACR,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CACzB,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,AACrC,CAAC,AACD,mBAAmB,uBAAS,CAAC,AACzB,IAAI,AAAC,CAAC,AACF,iBAAiB,CAAE,OAAO,IAAI,CAAC,AACnC,CAAC,AACD,EAAE,AAAC,CAAC,AACA,iBAAiB,CAAE,OAAO,MAAM,CAAC,AACrC,CAAC,AACL,CAAC,AACD,iBAAiB,eAAC,CAAC,AAEf,SAAS,CAAE,uBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CACvC,cAAc,CAAE,uBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAC5C,iBAAiB,CAAE,uBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAC/C,YAAY,CAAE,uBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,AAC9C,CAAC,AACD,KAAK,eAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,eAAe,CAAE,KAAK,IAAI,CAAC,CAC3B,uBAAuB,CAAE,KAAK,IAAI,CAAC,CACnC,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,AAC/C,CAAC,AACD,GAAG,eAAC,CAAC,AACD,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC3C,CAAC,AACD,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC,AACD,UAAU,eAAC,CAAC,AACR,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,GAAG,AACtB,CAAC,AACD,YAAY,eAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,CAC9B,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,AAC/C,CAAC,AACD,QAAQ,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC/B,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,AAC/C,CAAC,AACD,SAAS,eAAC,CAAC,AACP,aAAa,CAAE,IAAI,CACnB,IAAI,CAAE,CAAC,CACP,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,AAC/C,CAAC,AACD,QAAQ,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,AAChB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACrC,OAAO,CAAE,GAAG,AAChB,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,cAAc,eAAC,CAAC,AACZ,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAC9D,CAAC,AACD,WAAW,eAAC,CAAC,AACT,OAAO,CAAE,YAAY,CAErB,kBAAkB,CAAE,EAAE,CAEtB,yBAAyB,CAAE,QAAQ,CAEnC,cAAc,CAAE,2BACpB,CAAC,AACD,WAAW,2BAAa,CAAC,AACrB,IAAI,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,CAAC,CAAC,AACvB,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,IAAI,CAAC,AAC1B,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,IAAI,CAAC,AAC1B,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,IAAI,CAAC,AAC1B,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,IAAI,CAAC,AAC1B,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,CAAC,CAAC,AACvB,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,IAAI,CAAC,AAC1B,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AACD,GAAG,AAAC,CAAC,AACD,SAAS,CAAE,MAAM,IAAI,CAAC,AAC1B,CAAC,AACD,EAAE,AAAC,CAAC,AACA,SAAS,CAAE,MAAM,CAAC,CAAC,AACvB,CAAC,AACL,CAAC;ACz1BH,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,CACrB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,KAAK,AACd,CAAC,AACD,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,MAAM,AAClB,CAAC,AACD,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC;ACjED,OAAO,8BAAC,CAAC,AACP,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,UAAU,CAAE,MAAM,CAClB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC,AACD,qBAAM,CAAC,GAAG,eAAC,CAAC,AACV,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC;ACsBD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,eAAe,CAAE,aAAa,CAC9B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACjD,UAAU,CAAE,UAAU,AACxB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,WAAW,cAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,UAAU,AACxB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,GAAG,CACT,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,QAAQ,CACrB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,GAAG,CACT,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,QAAQ,CACrB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,aAAa,cAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,GAAG,CACT,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,QAAQ,CACrB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,aAAa,cAAC,CAAC,AACb,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,CAAC,CAAC,KAAK,CACf,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AACjD,CAAC,AACD,UAAU,cAAC,CAAC,AACV,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,KAAK,CACf,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AACjD,CAAC,AACD,WAAW,cAAC,CAAC,AACX,iBAAiB,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,cAAC,CAAC,AACX,iBAAiB,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,cAAC,CAAC,AACX,iBAAiB,CAAE,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CACjD,YAAY,CAAE,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAC5C,SAAS,CAAE,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,AAC3C,CAAC,AACD,WAAW,cAAC,CAAC,AACX,iBAAiB,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,oBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,UAAU,cAAC,CAAC,AACV,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,IAAI,CAChB,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,UAAU,cAAC,CAAC,AACV,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,QAAQ,CACvB,QAAQ,CAAE,MAAM,CAChB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,QAAQ,CACvB,QAAQ,CAAE,MAAM,AAClB,CAAC;ACxMD,YAAY,cAAC,CAAC,AACZ,OAAO,CAAE,YAAY,CACrB,iBAAiB,CAAE,sBAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAC9C,SAAS,CAAE,sBAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,AACxC,CAAC,AACD,WAAW,sBAAS,CAAC,AACnB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,OAAO,IAAI,CAAC,AACzB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC,AACD,UAAU,cAAC,CAAC,AACV,gBAAgB,CAAE,gBAAgB,IAAI,CAAC,CAAC,OAAO,CAAC,CAChD,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,OAAO,CAAE,IAAI,AACf,CAAC,AACD,WAAW,cAAC,CAAC,AACX,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,GAAG,AACb,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AAClB,CAAC;AC3DD,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,oBAAoB,CAAC,CACrC,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,UAAU,CAAE,IAAI,4BAA4B,CAAC,CAC7C,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,UAAU,CAAE,IAAI,oBAAoB,CAAC,CACrC,KAAK,CAAE,IAAI,AACb,CAAC;ACQD,KAAK,aAAC,CAAC,AACL,gBAAgB,CAAE,IAAI,CACtB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,MAAM,aAAC,CAAC,AACN,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,WAAW,aAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,UAAU,aAAC,CAAC,AACV,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,aAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,KAAK,AAChB,CAAC,AACD,WAAW,aAAC,CAAC,AACX,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,UAAU,CACnB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC,AACD,OAAO,aAAC,CAAC,AACP,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AACD,MAAM,aAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,AACb,CAAC;ACjGD,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC;ACyCD,UAAU,eAAC,CAAC,AACV,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,KAAK,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,AAClB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3B,CAAC,AACD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,IAAI,CACxB,aAAa,CAAE,CAAC,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,2BAA2B,CAAC,AAC3D,CAAC,AACD,oBAAK,2BAA2B,AAAC,CAAC,AAChC,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,oBAAK,MAAM,AAAC,CAAC,AACX,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,IAAI,CACxB,aAAa,CAAE,CAAC,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AACpD,CAAC;ACAD,YAAY,cAAC,CAAC,AACZ,OAAO,CAAE,YAAY,CACrB,iBAAiB,CAAE,sBAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAC9C,SAAS,CAAE,sBAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,AACxC,CAAC,AACD,WAAW,sBAAS,CAAC,AACnB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,OAAO,IAAI,CAAC,AACzB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,gBAAgB,CAAE,WAAW,AAC/B,CAAC,AACD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,AACR,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,EAAE,CACX,gBAAgB,CAAE,IAAI,AACxB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,OAAO,cAAC,CAAC,AACP,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,QAAQ,CACvB,QAAQ,CAAE,MAAM,AAClB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,WAAW,cAAC,CAAC,AACX,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC;AC1DD,eAAe,eAAC,CAAC,AACf,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,eAAe,eAAQ,mBAAmB,AAAE,CAAC,AAC3C,KAAK,CAAE,CAAC,CAAC,UAAU,AACrB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,IAAI,AACb,CAAC,AACD,SAAS,eAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,AACzC,CAAC;ACrED,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,SAAS,cAAC,CAAC,AACT,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC,AACD,WAAW,cAAC,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,GAAG,cAAC,CAAC,AACH,gBAAgB,CAAE,OAAO,CACzB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACrB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,aAAa,CAAE,GAAG,AACpB,CAAC;ACbD,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,OAAO,CAAC,CAAC,CACpB,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACtD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAChE,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,AACtB,CAAC;AC7ED,IAAI,cAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,CACtB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CACtB,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC;ACnCD,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CACzB,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,AACnC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,IAAI,CACtB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CACzB,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,AACnC,CAAC;ACYD,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9C,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,CAC3C,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAChC,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,WAAW,AAC1C,CAAC,AACD,SAAS,eAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CACtB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,SAAS,eAAC,CAAC,AACT,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC;ACnED,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,UAAU,CAAE,OAAO,AACrB,CAAC;ACkBD,YAAY,eAAC,CAAC,AACZ,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,WAAW,eAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC;AC5CD,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,AACxB,CAAC;AC6BD,WAAW,cAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CACtC,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,AACxB,CAAC;AClBD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,SAAS,CAAE,IAAI,AACjB,CAAC;ACgPD,GAAG,cAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,AACf,CAAC,AACD,WAAW,cAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CACvC,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,cAAc,CAAE,KAAK,CACrB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,CAAC,CACd,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,cAAQ,mBAAmB,AAAE,CAAC,AACtC,KAAK,CAAE,CAAC,CAAC,UAAU,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,wBAAU,CAAW,YAAY,AAAE,CAAC,AAClC,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,wBAAU,CAAW,kBAAkB,AAAE,CAAC,AACxC,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,gBAAgB,CAAE,IAAI,oBAAoB,CAAC,CAC3C,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CACzB,YAAY,CAAE,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CACzD,IAAI,CAAE,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,AACnD,CAAC;ACiBD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,GAAG,eAAC,CAAC,AACH,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,cAAc,AAC5B,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,OAAO,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,UAAU,CAAE,SAAS,AACvB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,IAAI,CAAE,GAAG,AACX,CAAC,AACD,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,AACb,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,OAAO,eAAC,CAAC,AACP,IAAI,CAAE,GAAG,AACX,CAAC,AACD,aAAa,eAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,cAAc,CAAE,SAAS,sBAAsB,CAAC,CAChD,cAAc,CAAE,IAAI,sBAAsB,CAAC,AAC7C,CAAC;ACND,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CACvC,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACzB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,eAAe,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,YAAY,CAC7B,WAAW,CAAE,QAAQ,AACvB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CAAC,GAAG,CACf,sBAAsB,CAAE,IAAI,CAC5B,uBAAuB,CAAE,IAAI,CAC7B,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CACjD,YAAY,CAAE,qBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,CAC5C,SAAS,CAAE,qBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,WAAW,AAC3C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAClD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,iBAAiB,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACnD,YAAY,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC9C,SAAS,CAAE,qBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC7C,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,iBAAiB,CAAE,sBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CACpD,YAAY,CAAE,sBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAC/C,SAAS,CAAE,sBAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,AAC9C,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,WAAW,sBAAQ,CAAC,AAClB,EAAE,AAAC,CAAC,AACF,MAAM,CAAE,IAAI,AACd,CAAC,AACD,GAAG,AAAC,CAAC,AACH,MAAM,CAAE,GAAG,AACb,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AACd,CAAC,AACH,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACd,CAAC,AACD,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,GAAG,CAAE,GAAG,CACR,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,SAAS,sBAAsB,CAAC,CAC/C,aAAa,CAAE,IAAI,sBAAsB,CAAC,CAC1C,cAAc,CAAE,KAAK,AACvB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,MAAM,CAChB,SAAS,CAAE,OAAO,IAAI,CAAC,CACvB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,cAAc,eAAC,CAAC,AACd,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,EAAE,CACX,SAAS,CAAE,mBAAI,CAAC,GAAG,CAAC,QAAQ,CAC5B,gBAAgB,CAAE,IAAI,0BAA0B,CAAC,CACjD,iBAAiB,CAAE,mBAAI,CAAC,GAAG,CAAC,QAAQ,CACpC,uBAAuB,CAAE,KAAK,CAC9B,oBAAoB,CAAE,KAAK,CAC3B,kBAAkB,CAAE,KAAK,CACzB,eAAe,CAAE,KAAK,AACxB,CAAC,AACD,WAAW,mBAAK,CAAC,AACf,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,WAAW,IAAI,CAAC,AAC7B,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,WAAW,CAAC,CAAC,AAC1B,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,WAAW,IAAI,CAAC,AAC7B,CAAC,AACH,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE;MAChB,EAAE,CAAC,MAAM,CAAC;MACV,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MACpB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACvB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACvB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;MACvB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI;KACxB,AACH,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,eAAe,CAAE,KAAK,IAAI,CAAC,CAC3B,uBAAuB,CAAE,KAAK,IAAI,CAAC,CACnC,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,EAAE,CAAC,CACnB,eAAe,CAAE,KAAK,CAAC,UAAU,CACjC,mBAAmB,CAAE,GAAG,CAAC,GAAG,CAAC,UAAU,AACzC,CAAC,AACD,SAAS,eAAC,CAAC,AACT,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,AACvB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,SAAS,eAAC,CAAC,AACT,UAAU,CAAE,KAAK,AACnB,CAAC;AC1hBD,UAAU,8BAAC,CAAC,AACV,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,yBAAU,CAAC,IAAI,eAAC,CAAC,AACf,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,yBAAU,CAAC,IAAI,CAAC,KAAK,eAAC,CAAC,AACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,IAAI,AAC1B,CAAC,AACD,yBAAU,CAAC,oBAAK,MAAM,AAAC,CAAC,AACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AAC7C,CAAC,AACD,yBAAU,CAAC,oBAAK,OAAO,AAAC,CAAC,AACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AAC7C,CAAC,AACD,yBAAU,CAAC,MAAM,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AACD,YAAY,8BAAC,CAAC,AACZ,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,8BAAC,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC3B,IAAI,CAAE,CAAC,AACT,CAAC,AACD,UAAU,8BAAC,CAAC,AACV,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,AACtB,CAAC;ACyFD,WAAW,4BAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CACvC,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,UAAU,4BAAC,CAAC,AACV,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,UAAU,4BAAC,CAAC,AACV,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,eAAe,4BAAC,CAAC,AACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,SAAS,4BAAC,CAAC,AACT,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,4BAAC,CAAC,AACV,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,CACrB,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,SAAS,4BAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,cAAc,CAAE,KAAK,AACvB,CAAC,AACD,SAAS,4BAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,eAAe,CAAE,aAAa,CAC9B,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,AACf,CAAC,AACD,OAAO,4BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,AACtC,CAAC,AACD,qBAAO,CAAC,GAAG,cAAC,CAAC,AACX,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,cAAc,4BAAC,CAAC,AACd,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,KAAK,CACjB,mBAAmB,CAAE,MAAM,CAC3B,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,MAAM,CAChB,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,UAAU,4BAAC,CAAC,AACV,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,IAAI,CACnB,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,CAC9B,eAAe,CAAE,KAAK,IAAI,CAAC,CAC3B,uBAAuB,CAAE,KAAK,IAAI,CAAC,CACnC,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AACD,OAAO,4BAAC,CAAC,AACP,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,YAAY,4BAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,KAAK,CACX,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,kBAAI,CAAC,GAAG,CAAC,QAAQ,CAC5B,iBAAiB,CAAE,kBAAI,CAAC,GAAG,CAAC,QAAQ,AACtC,CAAC,AACD,WAAW,kBAAK,CAAC,AACf,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,WAAW,IAAI,CAAC,AAC7B,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,WAAW,GAAG,CAAC,AAC5B,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,WAAW,IAAI,CAAC,AAC7B,CAAC,AACH,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,gBAAgB,4BAAC,CAAC,AAChB,WAAW,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,kBAAkB,4BAAC,CAAC,AAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,QAAQ,4BAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACd,CAAC,AACD,UAAU,4BAAC,CAAC,AACV,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,IAAI,4BAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,OAAO,CAAE,YAAY,CAErB,kBAAkB,CAAE,EAAE,CAEtB,yBAAyB,CAAE,QAAQ,CAEnC,cAAc,CAAE,0BAClB,CAAC,AACD,WAAW,0BAAa,CAAC,AACvB,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,MAAM,CAAC,CAAC,AACrB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,GAAG,CAAC,AACvB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,CAAC,CAAC,AACrB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,GAAG,CAAC,AACvB,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AACD,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,CAAC,CAAC,AACrB,CAAC,AACH,CAAC;AC1fD,aAAa,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC;ACwDD,aAAa,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,gBAAgB,CAAE,IAAI,CACtB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,IAAI,CACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,EAAE,AACb,CAAC,AACD,UAAU,eAAC,CAAC,AACV,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CACnB,UAAU,CAAE,MAAM,CAClB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,IAAI,CACT,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,IAAI,oBAAoB,CAAC,CAC3C,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CACzD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AACnE,CAAC;AChID,aAAa,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC;ACoED,KAAK,4BAAC,CAAC,AACL,KAAK,CAAE,SAAS,CAChB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,UAAU,4BAAC,CAAC,AACV,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AACD,aAAa,4BAAC,CAAC,AACb,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,QAAQ,4BAAC,CAAC,AACR,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,IAAI,4BAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,MAAM,4BAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,QAAQ,CAAE,MAAM,CAChB,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,oBAAM,CAAC,GAAG,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,UAAU,CAC3B,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,4BAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,4BAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,QAAQ,4BAAC,CAAC,AACR,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC;AC/HD,eAAe,cAAC,CAAC,AACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,6BAAe,MAAM,AAAC,CAAC,AACrB,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,KAAK,AACd,CAAC;ACqID,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,YAAY,CAAE,IAAI,CAClB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,OAAO,cAAC,CAAC,AACP,IAAI,CAAE,CAAC,AACT,CAAC,AACD,UAAU,cAAC,CAAC,AACV,mBAAmB,CAAE,MAAM,CAAC,UAAU,AACxC,CAAC,AACD,SAAS,cAAC,CAAC,AACT,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,eAAe,CAAE,KAAK,IAAI,CAAC,CAC3B,uBAAuB,CAAE,KAAK,IAAI,CAAC,AACrC,CAAC,AACD,UAAU,cAAC,CAAC,AACV,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,IAAI,CAAE,CAAC,AACT,CAAC,AACD,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,GAAG,CAChB,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,cAAC,CAAC,AACX,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,AACb,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3B,CAAC,AACD,KAAK,cAAQ,mBAAmB,AAAE,CAAC,AACjC,KAAK,CAAE,CAAC,CAAC,UAAU,AACrB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,cAAc,CAAE,IAAI,AACtB,CAAC;ACvCD,cAAc,8BAAC,CAAC,AACd,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC,AACD,SAAS,8BAAC,CAAC,AACT,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACrB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,IAAI,AACxB,CAAC,AACD,aAAa,8BAAC,CAAC,AACb,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACtB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,YAAY,8BAAC,CAAC,AACZ,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,IAAI,oBAAoB,CAAC,CAC3C,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CACzD,kBAAkB,CAAE,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AACnE,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,UAAU,8BAAC,CAAC,AACV,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CACnB,UAAU,CAAE,MAAM,CAClB,IAAI,CAAE,CAAC,AACT,CAAC,AACD,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,IAAI,oBAAoB,CAAC,AAClC,CAAC,AACD,YAAY,8BAAC,CAAC,AACZ,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,AACxB,CAAC,AACD,UAAU,8BAAC,CAAC,AACV,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,yBAAU,CAAC,IAAI,eAAC,CAAC,AACf,IAAI,CAAE,IAAI,AACZ,CAAC,AACD,yBAAU,CAAC,IAAI,CAAC,KAAK,eAAC,CAAC,AACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,IAAI,AAC1B,CAAC,AACD,yBAAU,CAAC,oBAAK,MAAM,AAAC,CAAC,AACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AAC7C,CAAC,AACD,yBAAU,CAAC,oBAAK,OAAO,AAAC,CAAC,AACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,oBAAoB,CAAC,AAC7C,CAAC,AACD,yBAAU,CAAC,MAAM,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,GAAG,CACd,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AACD,cAAc,8BAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CACvC,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,iBAAiB,8BAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CACvC,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,WAAW,8BAAC,CAAC,AACX,OAAO,CAAE,IAAI,CAAC,CAAC,AACjB,CAAC;AC9PD,aAAa,cAAC,CAAC,AACb,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3B,CAAC;ACpED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACtB,WAAW,CAAE,QAAQ,AACvB,CAAC;ACkID,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC3B,IAAI,CAAE,CAAC,AACT,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC3B,IAAI,CAAE,CAAC,AACT,CAAC,AACD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CACpB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,CAAC,CAAC,IAAI,AACjB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CAAC,GAAG,CACjB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,KAAK,CACpB,QAAQ,CAAE,MAAM,CAChB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CACf,gBAAgB,CAAE,IAAI,AACxB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,cAAC,CAAC,AACX,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,OAAO,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,WAAW,CACpB,kBAAkB,CAAE,QAAQ,CAC5B,kBAAkB,CAAE,CAAC,CACrB,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC3B,CAAC;AC/ID,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,AACX,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,oBAAoB,CAAC,CAChC,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC3B,IAAI,CAAE,CAAC,AACT,CAAC,AACD,UAAU,eAAC,CAAC,AACV,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,AACtB,CAAC;ACnID,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,AACxB,CAAC"
}